#!/usr/bin/env bash
#
# Script to run the REPL.


# VARIABLES #

# Define the command for `node`:
if [[ -z "$NODE" ]]; then
	cmd=node
else
	cmd="$NODE"
fi

# Define the path to the REPL executable:
repl=`dirname "$0"`/../lib/node_modules/\@stdlib/repl/bin/cli

# Define any command-line options to use when invoking the REPL executable:
flags="$REPL_FLAGS"


# FUNCTIONS #

# Defines an error handler.
#
# $1 - error status
on_error() {
	echo 'ERROR: An error was encountered during execution.' >&2
	cleanup
	exit "$1"
}

# Runs clean-up tasks.
cleanup() {
	echo '' >&2
}

# Starts the REPL.
start() {
	"$cmd" "$repl" "$flags"
}

# Main execution sequence.
main() {
	start
	cleanup
	exit 0
}

# Exit immediately if one of the executed commands exits with a non-zero status:
set -e

# Set an error handler to print captured output and perform any clean-up tasks:
trap 'on_error' ERR

# Run main:
main
