/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var sqrt = require( '@stdlib/math/base/special/sqrt' );


// MAIN //

/**
* Computes the Euclidean distance between two vectors.
*
* @private
* @param {ndarray} X - matrix containing the first vector
* @param {NonNegativeInteger} xi - vector row index
* @param {ndarray} Y - matrix containing the second vector
* @param {NonNegativeInteger} yi - vector row index
* @returns {number} Euclidean distance
*/
function euclidean( X, xi, Y, yi ) { // TODO: eventually remove this function once project has implemented comparable functionality as a standalone package
	var N;
	var d;
	var s;
	var j;

	N = X.shape[ 1 ]; // number of columns

	s = 0.0;
	for ( j = 0; j < N; j++ ) {
		d = X.get( xi, j ) - Y.get( yi, j );
		s += d * d;
	}
	return sqrt( s );
}


// EXPORTS //

module.exports = euclidean;
