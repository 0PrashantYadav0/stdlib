'use strict';

// MODULES //

var regularize = require( './../regularize.js' );


// MAIN //

/**
* Given a new observation `(x,y)`, updates the weights using the squared hinge loss.
*
* ## Notes
*
* The squared hinge loss is defined as
*
* ```tex
* \max\{ 0, 1 - y w^\intercal x \}^2
* ```
*
* @private
* @param {WeightVector} weights - current model coefficients
* @param {NumericArray} x - feature vector
* @param {number} y - response value
* @param {PositiveNumber} eta - current learning rate
* @param {NonNegativeNumber} lambda - regularization parameter
*/
function squaredHingeLoss( weights, x, y, eta, lambda ) {
	var p = y * weights.innerProduct( x );

	// Perform L2 regularization...
	regularize( weights, lambda, eta );

	if ( p < 1.0 && y !== 0.0 ) {
		weights.add( x, eta * ( y - ( p*y ) ) );
	}
} // end FUNCTION squaredHingeLoss()


// EXPORTS //

module.exports = squaredHingeLoss;
