'use strict';

// MODULES //

var debug = require( 'debug' )( 'line:engine:components:plot' );
var marks = require( './marks.js' );


// RENDER //

/**
* Renders a plot.
*
* @private
* @param {Object} ctx - context
* @returns {VTree} virtual tree
*/
function render( ctx ) {
	var children;
	var clipPath;
	var vtree;
	var child;
	var defs;
	var node;
	var i;

	debug( 'Rendering base canvas...' );
	vtree = ctx.state.canvas.render();

	debug( 'Searching for graph virtual node...' );
	children = vtree.children;
	for ( i = 0; i < children.length; i++ ) {
		if ( children[ i ].properties.property === 'graph' ) {
			debug( 'Found graph virtual node.' );
			node = children[ i ];
			break;
		}
	}
	if ( node === void 0 ) {
		throw new Error( 'unable to find virtual node in which to insert plot marks.' );
	}
	debug( 'Searching for defs virtual node...' );
	for ( i = 0; i < children.length; i++ ) {
		if ( children[ i ].tagName === 'defs' ) {
			debug( 'Found defs virtual node.' );
			defs = children[ i ];
			break;
		}
	}
	if ( defs ) {
		debug( 'Searching for clip-path id...' );
		children = defs.children;
		for ( i = 0; i < children.length; i++ ) {
			if ( children[ i ].tagName === 'clipPath' ) {
				debug( 'Found clip-path virtual node.' );
				clipPath = children[ i ].properties.id;
				break;
			}
		}
	} else {
		debug( 'Unable to find defs virtual node.' );
		clipPath = 'd1234'; // dummy id
	}
	debug( 'Clip-path id: %s.', clipPath );

	debug( 'Rendering marks...' );
	child = marks( ctx, clipPath );

	debug( 'Inserting marks into base plot virtual tree...' );
	node.children.push( child );
	node.count += child.count;

	return vtree;
} // end FUNCTION render()


// EXPORTS //

module.exports = render;
