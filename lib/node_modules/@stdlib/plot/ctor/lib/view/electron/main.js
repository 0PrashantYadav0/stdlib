'use strict';

// MODULES //

var debug = require( 'debug' )( 'plot:view:electron:main-process' );
var app = require( 'electron' ).app;
var BrowserWindow = require( 'electron' ).BrowserWindow;
var ENV = require( '@stdlib/utils/env' );


// VARIABLES //

var mainWindow = null;


// FUNCTIONS //

/**
* Creates a browser window.
*
* @private
*/
function createWindow() {
	var opts;
	var url;

	opts = {
		'width': parseInt( ENV.PLOT_WIDTH, 10 ) + 80,
		'height': parseInt( ENV.PLOT_HEIGHT, 10 ) + 20,
		'title': ENV.PLOT_TITLE,

		// 'minWidth': parseInt( ENV.PLOT_MIN_WIDTH, 10 ), // TODO: needed?

		// 'minHeight': parseInt( ENV.PLOT_MIN_HEIGHT, 10 ), // TODO: needed?

		// 'titleBarStyle': 'hidden-inset', // hide title bar on OS X

		'useContentSize': true // specify web page size only considering the content
	};
	debug( 'Creating a new browser window configured with the following options: %s.', JSON.stringify( opts ) );
	mainWindow = new BrowserWindow( opts );

	mainWindow.on( 'close', onClose );

	url = 'http://'+ENV.SERVER_ADDRESS+':'+ENV.SERVER_PORT+'/index.html';
	debug( 'Loading %s.', url );
	mainWindow.loadURL( url );
} // end FUNCTION createWindow()

/**
* Callback invoked once a window closes.
*
* @private
*/
function onClose() {
	debug( 'Window closed. Dereferencing window object to allow for GC...' );
	mainWindow = null;
} // end FUNCTION onClose()

/**
* Quits the application.
*
* @private
*/
function quit() {
	debug( 'Quitting application...' );
	app.quit();
} // end FUNCTION quit()


// MAIN //

/**
* Runs the application.
*
* @private
*/
function main() {
	app.on( 'ready', createWindow );
	app.on( 'window-all-closed', quit );
} // end FUNCTION main()

debug( 'Running application...' );
main();
