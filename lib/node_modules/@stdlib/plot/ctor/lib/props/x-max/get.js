'use strict';

// MODULES //

var isNull = require( '@stdlib/assert/is-null' );
var max = require( './../../utils/max.js' ); // TODO: replace with mod when written


// FUNCTIONS //

/**
* Computes a maximum value.
*
* @private
* @param {Array<NumericArray>} arr - input array
* @returns {(number|null)} maximum value or null
*/
function getMax( arr ) {
	var tmp;
	var i;
	if ( arr.length === 0 ) {
		return null;
	}
	tmp = new Array( arr.length );
	for ( i = 0; i < arr.length; i++ ) {
		tmp[ i ] = max( arr[ i ] );
	}
	return max( tmp );
} // end FUNCTION getMax


// MAIN //

/**
* Returns the maximum value of the x-axis domain.
*
* @private
* @returns {number} maximum value
*/
function get() {
	/* jshint validthis: true */ // TODO: eslint
	var max;
	if ( isNull( this._xMax ) ) {
		max = getMax( this._xData );
		return ( isNull( max ) ) ? 1.0 : max;
	}
	return this._xMax;
} // end FUNCTION get()


// EXPORTS //

module.exports = get;
