'use strict';

// MODULES //

var debug = require( 'debug' )( 'plot:set:symbols' );
var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;
var indexOf = require( '@stdlib/utils/index-of' );
var SYMBOLS = require( './symbols.json' );


// MAIN //

/**
* Sets the data symbols.
*
* @private
* @param {(string|StringArray)} v - data symbols
* @throws {TypeError} must be a string or string array
* @throws {Error} must be a supported symbol
*/
function set( v ) {
	/*jshint validthis: true */ // TODO: eslint
	var isStr = isString( v );
	var i;
	if (
		!isStr &&
		!isStringArray( v )
	) {
		throw new TypeError( 'invalid value. `symbols` must be a string or string array. Value: `'+v+'.`' );
	}
	if ( isStr ) {
		v = [ v ];
	} else {
		v = v.slice();
	}
	for ( i = 0; i < v.length; i++ ) {
		if ( indexOf( SYMBOLS, v[i] ) === -1 ) {
			throw new Error( 'invalid value. Unrecognized/unsupported symbol. Value: `['+v.join(',')+']`.' );
		}
	}
	debug( 'Current value: %s.', JSON.stringify( this._symbols ) );

	this._symbols = v;
	debug( 'New Value: %s.', JSON.stringify( this._symbols ) );

	this.emit( 'change' );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
