/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var Sparkline = require( '@stdlib/plot/sparklines/unicode/base' );


// MAIN //

/**
* Unicode sparkline tristate chart constructor.
*
* @constructor
* @param {Options} [options] - chart options
* @param {(Array|TypedArray)} [options.data] - chart data
* @param {Function} [options.yValue] - y-value accessor
* @param {(PositiveInteger|null)} [options.window] - sliding window size
* @throws {TypeError} must provide valid options
* @returns {TristateChart} chart instance
*
* @example
* var data = [ -1, 1, 0, 0, 1, -1, -1, 1 ];
* var opts = {
*     'data': data
* };
* var chart = new TristateChart( opts );
* var str = chart.render();
* // returns '▄▀──▀▄▄▀'
*/
function TristateChart( options ) {
	if ( !(this instanceof TristateChart) ) {
		if ( arguments.length ) {
			return new TristateChart( options );
		}
		return new TristateChart();
	}
	if ( arguments.length ) {
		Sparkline.call( this, options );
	} else {
		Sparkline.call( this );
	}
	return this;
}

/*
* Create a prototype which inherits from the parent prototype.
*/
TristateChart.prototype = Object.create( Sparkline.prototype );

/*
* Set the constructor.
*/
TristateChart.prototype.constructor = TristateChart;

/**
* Renders a chart.
*
* @memberof TristateChart.prototype
* @function render
* @returns {string} rendered chart
*
* @example
* var data = [ -1, 1, 0, 0, 1, -1, -1, 1 ];
*
* var chart = new TristateChart({
*     'data': data
* });
*
* var str = chart.render();
* // returns '▄▀──▀▄▄▀'
*/
TristateChart.prototype.render = require( './render.js' );


// EXPORTS //

module.exports = TristateChart;
