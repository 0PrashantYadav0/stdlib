'use strict';

// MODULES //

var tape = require( 'tape' );
var Sparkline = require( './../lib' );
var set = require( './../lib/set_infinities.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof set, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if not provided a boolean', function test( t ) {
	var values;
	var i;

	values = [
		'5',
		5,
		NaN,
		null,
		undefined,
		{},
		[],
		function(){}
	];
	for ( i = 0; i < values.length; i++ ) {
		t.throws( badValue( values[i] ), TypeError, 'throws a type error when provided '+values[i] );
	}
	t.end();
	function badValue( value ) {
		return function badValue() {
			set.call( {}, value );
		};
	}
});

tape( 'the function sets the `infinities` flag', function test( t ) {
	var context;
	var v;

	context = new Sparkline();

	set.call( context, true );
	v = context.infinities;

	t.equal( v, true, 'sets flag' );
	t.end();
});
