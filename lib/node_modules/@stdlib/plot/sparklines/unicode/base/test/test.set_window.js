'use strict';

// MODULES //

var tape = require( 'tape' );
var Sparkline = require( './../lib' );
var set = require( './../lib/set_window.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof set, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if not provided either a positive integer or null', function test( t ) {
	var values;
	var i;

	values = [
		'5',
		-5,
		0,
		3.14,
		NaN,
		true,
		undefined,
		{},
		[],
		function(){}
	];
	for ( i = 0; i < values.length; i++ ) {
		t.throws( badValue( values[i] ), TypeError, 'throws a type error when provided '+values[i] );
	}
	t.end();
	function badValue( value ) {
		return function badValue() {
			set.call( {}, value );
		};
	}
});

tape( 'the function throws an error if a window size is less than the number of chart elements', function test( t ) {
	var context;

	context = new Sparkline({
		'data': [1,2,3,4,5]
	});

	t.throws( badValue, Error, 'throws an error' );
	t.end();

	function badValue() {
		set.call( context, 3 );
	}
});

tape( 'the function sets the window size', function test( t ) {
	var context;
	var data;
	var v;

	data = [ 1, 2, 3, 4, 5 ];
	context = new Sparkline({
		'data': data
	});

	set.call( context, 5 );
	v = context.window;

	t.equal( v, 5, 'sets window size' );

	set.call( context, null );
	v = context.window;

	t.equal( v, Number.POSITIVE_INFINITY, 'sets window size (null)' );

	t.end();
});
