/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;
var isNull = require( '@stdlib/assert/is-null' );
var PINF = require( '@stdlib/constants/math/float64-pinf' );


// VARIABLES //

var debug = logger( 'sparkline:set:window' );


// MAIN //

/**
* Sets the sliding window size.
*
* @param {(PositiveInteger|null)} size - sliding window size
* @throws {TypeError} must be a positive integer
* @throws {Error} must be greater than or equal to the number of data elements
*/
function set( size ) {
	/* eslint-disable no-invalid-this */
	if ( !isPositiveInteger( size ) && !isNull( size ) ) {
		throw new TypeError( 'invalid value. `window` must be a positive integer or null. Value: `' + size + '`.' );
	}
	if ( size === null ) {
		size = PINF;
	}
	if ( size < this._data.length ) {
		throw new Error( 'invalid value. `window` size is smaller than the number of data elements. Number of elements: `'+ this._data.length + '`. Value: `' + size + '`.' );
	}
	debug( 'Current value: %s.', this._window );

	this._window = size;
	debug( 'New value: %s.', this._window );

	this.emit( 'change' );
}


// EXPORTS //

module.exports = set;
