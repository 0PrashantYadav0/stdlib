/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );


// MAIN //

/**
* Append data.
*
* @private
* @param {number} datum - data to append
* @throws {TypeError} must provide a number primitive
* @returns {Sparkline} class instance
*/
function push( datum ) {
	/* eslint-disable no-invalid-this */
	var d;
	if ( !isNumber( datum ) ) {
		throw new TypeError( 'invalid input argument. Must provide a number primitive. Value: `' + datum + '`.' );
	}
	d = {};
	d.y = datum;
	if ( isnan( datum ) ) {
		d.flg = 'nan';
	} else if ( isInfinite( datum ) ) {
		d.flg = 'inf';
	}
	if ( this._window <= this._data.length ) {
		this._data.shift();
	}
	this._data.push( d );
	return this;
}


// EXPORTS //

module.exports = push;
