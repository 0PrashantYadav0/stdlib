'use strict';

// MODULES //

var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isInfinite = require( '@stdlib/math/base/assert/is-infinite' );


// MAIN //

/**
* Append data.
*
* @private
* @param {number} datum - data to append
* @throws must provide a number primitive
* @returns {Sparkline} class instance
*/
function push( datum ) {
	/* jshint validthis: true */ // TODO: eslint
	var d;
	if ( !isNumber( datum ) ) {
		throw new TypeError( 'invalid input argument. Must provide a number primitive. Value: `' + datum + '`.' );
	}
	d = {};
	d.y = datum;
	if ( isnan( datum ) ) {
		d.flg = 'nan';
	} else if ( isInfinite( datum ) ) {
		d.flg = 'inf';
	}
	if ( this._window <= this._data.length ) {
		this._data.shift();
	}
	this._data.push( d );
	return this;
} // end FUNCTION push()


// EXPORTS //

module.exports = push;
