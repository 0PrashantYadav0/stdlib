/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var isArrayLike = require( '@stdlib/assert/is-array-like' );


// VARIABLES //

var debug = logger( 'sparkline:set:data' );


// MAIN //

/**
* Sets the chart `y` values.
*
* @private
* @param {ArrayLike} data - `y` values
* @throws {TypeError} must be array-like
* @throws {Error} length must not exceed maximum sliding window size
*/
function set( data ) {
	/* eslint-disable no-invalid-this */
	var i;

	if ( !isArrayLike( data ) ) { // TODO: add support for ndarray
		throw new TypeError( 'invalid value. `data` must be array-like. Value: `' + data + '`.' );
	}
	if ( data.length > this._window ) {
		throw new Error( 'invalid value. `data` length exceeds maximum sliding window size. Window: `' + this._window + '`. Length: `' + data.length + '`.' );
	}
	debug( 'Current value: %s.', JSON.stringify( this._data ) );

	// TODO: add support for extracting values from an ndarray
	this._data = [];
	for ( i = 0; i < data.length; i++ ) {
		this._data.push( data[ i ] );
	}
	debug( 'New value: %s.', JSON.stringify( this._data ) );

	this.emit( 'change' );
}


// EXPORTS //

module.exports = set;
