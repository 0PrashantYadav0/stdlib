'use strict';

var randu = require( '@stdlib/math/base/random/randu' );
var winloss = require( './../lib' );

var chart;
var data;
var id;
var i;

// Based on GS Warriors winning percentages for 2015-2016...
function datum() {
	var d = randu();
	if ( d > 0.5 ) {       // home
		d = randu();
		if ( d < 0.057 ) { // loss
			d = -2;
		} else {           // win
			d = 2;
		}
	} else {               // away
		d = randu();
		if ( d < 0.229 ) { // loss
			d = -1;
		} else {           // win
			d = 1;
		}
	}
	return d;
}

// Generate some random data...
data = new Int8Array( 50 );
for ( i = 0; i < data.length; i++ ) {
	data[ i ] = datum();
}

// Create a new win/loss chart:
chart = winloss();

// Set the chart data:
chart.data = data;

// Hide the terminal cursor:
process.stdout.write( '\u001b[?25l' );

// Render the chart in the terminal:
process.stdout.write( chart.render() );

// Configure the chart to support streaming data:
chart.window = data.length;

// Update the terminal chart with new data every second:
id = setInterval( update, 1000 );

// After some time, stop updating and close:
setTimeout( stop, 20000 );

function update() {
	// Update the chart with new data:
	chart.push( datum() );

	// Clear the terminal line and render the chart:
	process.stdout.write( '\r\u001b[2K' + chart.render() );
}

function stop() { // eslint-disable-line no-redeclare
	clearInterval( id );

	// Restore the terminal cursor:
	process.stdout.write( '\u001b[?25h' );

	process.stdout.write( '\n' );
}
