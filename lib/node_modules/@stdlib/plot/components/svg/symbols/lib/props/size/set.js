'use strict';

// MODULES //

var debug = require( 'debug' )( 'symbols:set:size' );
var isNonNegativeInteger = require( '@stdlib/utils/is-nonnegative-integer' ).isPrimitive;
var isFunction = require( '@stdlib/utils/is-function' );


// SET //

/**
* Sets the symbol size.
*
* @private
* @param {(NonNegativeInteger|Function)} size - size
* @throws {TypeError} must be a nonnegative integer or a function
*/
function set( size ) {
	/*jshint validthis: true */ // TODO: eslint
	if (
		!isNonNegativeInteger( size ) &&
		!isFunction( size )
	) {
		throw new TypeError( 'invalid value. `size` must be a nonnegative integer or a function. Value: `' + size + '.`' );
	}
	debug( 'Current value: %d.', this._size );

	this._size = size;
	debug( 'New Value: %d.', this._size );

	this.emit( 'change' );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
