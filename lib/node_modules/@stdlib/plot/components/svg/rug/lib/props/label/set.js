'use strict';

// MODULES //

var logger = require( 'debug' );
var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var isFunction = require( '@stdlib/assert/is-function' );


// VARIABLES //

var debug = logger( 'rug:set:label' );


// MAIN //

/**
* Sets the label.
*
* @private
* @param {(string|Function)} label - label
* @throws {TypeError} must be a string primitive or a function
*/
function set( label ) {
	/* eslint-disable no-invalid-this */
	if ( !isString( label ) && !isFunction( label ) ) {
		throw new TypeError( 'invalid value. `label` must be a string primitive or a function. Value: `' + label + '.`' );
	}
	if ( label !== this._label ) {
		debug( 'Current value: %d.', this._label );

		this._label = label;
		debug( 'New Value: %d.', this._label );

		this.emit( 'change' );
	}
}


// EXPORTS //

module.exports = set;
