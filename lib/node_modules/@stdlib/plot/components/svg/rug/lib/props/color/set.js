'use strict';

// MODULES //

var logger = require( 'debug' );
var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var isFunction = require( '@stdlib/assert/is-function' );


// VARIABLES //

var debug = logger( 'rug:set:color' );


// MAIN //

/**
* Sets the color.
*
* @private
* @param {(string|Function)} color - color
* @throws {TypeError} must be a string primitive or function
*/
function set( color ) {
	/* eslint-disable no-invalid-this */
	if ( !isString( color ) && !isFunction( color ) ) {
		throw new TypeError( 'invalid value. `color` must be a string primitive or a function. Value: `' + color + '.`' );
	}
	if ( color !== this._color ) {
		debug( 'Current value: %d.', this._color );

		this._color = color;
		debug( 'New Value: %d.', this._color );

		this.emit( 'change' );
	}
}


// EXPORTS //

module.exports = set;
