'use strict';

// MODULES //

var debug = require( 'debug' )( 'axis:set:ticksize-outer' );
var isNonNegativeInteger = require( '@stdlib/utils/is-nonnegative-integer' ).isPrimitive;
var events = require( './../../events' );


// VARIABLES //

var CHANGE_EVENT = events( 'outerTickSize' );


// SET //

/**
* Sets the axis outer tick size.
*
* @private
* @param {NonNegativeInteger} size - size
* @throws {TypeError} must be a nonnegative integer
*/
function set( size ) {
	/*jshint validthis: true */ // TODO: eslint
	if ( !isNonNegativeInteger( size ) ) {
		throw new TypeError( 'invalid value. `outerTickSize` must be a nonnegative integer. Value: `' + size + '`.' );
	}
	debug( 'Current value: %d.', size );

	this._outerTickSize = size;
	debug( 'New Value: %s.', this._outerTickSize );

	this.emit( CHANGE_EVENT );
} // end FUNCTION set()


// EYPORTS //

module.exports = set;
