'use strict';

// MODULES //

var debug = require( 'debug' )( 'time-series:set:ymin' );
var isNumber = require( '@stdlib/utils/is-number' ).isPrimitive;
var isNull = require( '@stdlib/utils/is-null' );


// SET //

/**
* Sets the minimum value of the y-axis domain.
*
* @private
* @param {(FiniteNumber|null)} min - minimum value
* @throws {TypeError} must be a finite number primitive or null
*/
function set( min ) {
	/*jshint validthis: true */ // TODO: eslint
	var oldVal;

	// FIXME: check for finite number primitive
	if ( !isNumber( min ) && !isNull( min ) ) {
		throw new TypeError( 'invalid value. `yMin` must be a finite number primitive or null. Value: `' + min + '`.' );
	}
	debug( 'Current value: %d.', this._yMin );
	oldVal = this._yMin;

	this._yMin = min;
	debug( 'New value: %d.', this._yMin );

	this.emit( 'yMinChanged', min, oldVal );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
