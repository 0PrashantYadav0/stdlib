'use strict';

// MODULES //

var debug = require( 'debug' )( 'time-series:set:y' );
var isArray = require( '@stdlib/utils/is-array' );
var isTypedArray = require( '@stdlib/utils/is-typed-array' );
var isNumberArray = require( '@stdlib/utils/is-number' ).isPrimitiveNumberArray;
var isEmptyArray = require( '@stdlib/utils/is-empty-array' );
var events = require( './../../events' );


// VARIABLES //

var CHANGE_EVENT = events( 'y' );


// SET //

/**
* Sets the plot y-values.
*
* @private
* @param {Array} y - y-values
* @throws {TypeError} must be an array
* @throws {TypeError} must be either an empty array or an array of numeric arrays
*/
function set( y ) {
	/*jshint validthis: true */ // TODO: eslint
	var i;
	if ( !isArray( y ) ) {
		throw new TypeError( 'invalid value. `y` must be an array. Value: `' + y + '`.' );
	}
	if ( !isEmptyArray( y ) ) {
		for ( i = 0; i < y.length; i++ ) {
			if (
				!isTypedArray( y[i] ) &&
				!isNumberArray( y[i] )
			) {
				throw new TypeError( 'invalid value. `y` must be either empty or an array of numeric arrays. Value: `' + y + '`.' );
			}
		}
	}
	debug( 'Current value: %s.', JSON.stringify( this._yData ) );

	this._yData = y;
	debug( 'New Value: %s.', JSON.stringify( this._yData ) );

	this.emit( CHANGE_EVENT );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
