'use strict';

// MODULES //

var debug = require( 'debug' )( 'time-series:set:interpolation' );
var events = require( './../../events' );


// VARIABLES //

var CHANGE_EVENT = events( 'interpolation' );
var MODES = {
	'linear': true,
	// 'linear-closed': true,
	'step': true,
	'step-before': true,
	'step-after': true,
	'basis': true,
	'basis-open': true,
	// 'basis-closed': true,
	'bundle': true,
	'cardinal': true,
	'cardinal-open': true,
	// 'cardinal-closed': true,
	'monotone': true
};


// SET //

/**
* Sets the interpolation mode.
*
* @private
* @param {string} mode - interpolation mode
* @throws {TypeError} must be recognized mode
*/
function set( mode ) {
	/*jshint validthis: true */ // TODO: eslint
	if ( MODES[ mode ] === void 0 ) {
		throw new TypeError( 'invalid value. `interpolation` must be a recognized mode. Value: `' + mode + '`.' );
	}
	debug( 'Current value: %s.', this._interpolation );

	this._interpolation = mode;
	debug( 'New Value: %s.', this._interpolation );

	this.emit( CHANGE_EVENT );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
