'use strict';

// MODULES //

var isNull = require( '@stdlib/utils/is-null' );
var min = require( './../utils/min.js' );


// FUNCTIONS //

/**
* Computes a minimum value.
*
* @private
* @param {Array<NumericArray>} arr - input array
* @returns {(number|null)} minimum value or null
*/
function getMin( arr ) {
	var tmp;
	var i;
	if ( arr.length === 0 ) {
		return 0.0;
	}
	tmp = new Array( arr.length );
	for ( i = 0; i < arr.length; i++ ) {
		tmp[ i ] = min( arr[ i ] );
	}
	return min( tmp );
} // end FUNCTION getMin


// Y-AXIS MIN //

/**
* Computes the minimum value of the y-axis domain.
*
* @private
* @returns {number} minimum value
*/
function yMin() {
	/* jshint validthis: true */ // TODO: eslint
	var min;
	if ( isNull( this.state.yMin ) ) {
		min = getMin( this.state.y );
		return ( isNull( min ) ) ? 0.0 : min;
	}
	return this.state.yMin;
} // end FUNCTION yMin()


// EXPORTS //

module.exports = yMin;
