'use strict';

// MODULES //

var h = require( 'virtual-dom/h' );


// FUNCTIONS //

/**
* Returns path element as a virtual DOM tree.
*
* @private
* @param {Object} ctx - context
* @param {Array} data - data
* @param {string} label - path label
* @param {string} color - path color
* @returns {VTree} virtual tree
*/
function path( ctx, data, label, color ) {
	var opts = {
		'namespace': 'http://www.w3.org/2000/svg',
		'property': 'line time-series',
		'className': 'line',
		'attributes': {
			'data-label': label,
			'data-color': color,
			'd': ctx.line( data )
		}
	};

	return h( 'path', opts, [] );
} // end FUNCTION path()


// MARKS //

/**
* Returns a plot marks as a virtual DOM tree.
*
* @private
* @param {Object} ctx - context
* @returns {VTree} virtual tree
*/
function marks( ctx ) {
	var children;
	var label;
	var opts;
	var tmp;
	var len;
	var i;
	var j;

	opts = {
		'namespace': 'http://www.w3.org/2000/svg',
		'property': 'marks',
		'className': 'marks',
		'attributes': {
			'clip-path': 'url(#'+ctx._clipPathID+')'
		}
	};

	children = [];

	// FIXME: because of how D3 works, we need to create temporary arrays to generate paths. :( We should roll our own SVG path generation; see `d3-shape`.
	function x( d ) {
		return ctx.xScale( d[ 0 ] );
	}
	function y( d ) {
		return ctx.yScale( d[ 1 ] );
	}
	function defined() {
		return true;
	}
	ctx.line.x( x ).y( y ).defined( defined );

	len = ctx.state.x.length;

	// Only generate the array once...
	tmp = new Array( len );
	for ( i = 0; i < len; i++ ) {
		tmp[ i ] = new Array( 2 );
		tmp[ i ][ 0 ] = ctx.state.x[ i ];
		tmp[ i ][ 1 ] = ctx.state.y[ 0 ][ i ];
	}
	label = ctx.state.labels[ 0 ] || '';
	children.push( path( ctx, tmp, '', label ) ); // FIXME: color

	// Mutate the temp array after...
	for ( j = 1; j < ctx.state.y.length; j++ ) {
		for ( i = 0; i < len; i++ ) {
			tmp[ i ][ 1 ] = ctx.state.y[ j ][ i ];
		}
		label = ctx.state.labels[ j ] || '';
		children.push( path( ctx, tmp, '', label ) ); // FIXME: color
	}
	return h( 'g', opts, children );
} // end FUNCTION marks()


// EXPORTS //

module.exports = marks;
