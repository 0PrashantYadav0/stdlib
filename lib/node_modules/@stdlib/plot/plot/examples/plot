#!/usr/bin/env node
'use strict';

var path = require( 'path' );
var toHTML = require( 'vdom-to-html' );
var readFileSync = require( '@stdlib/utils/fs/read-file' ).sync;
var httpServer = require( '@stdlib/tools/disposable-http-server' );
var randn = require( '@stdlib/math/base/random/box-muller' );
var Plot = require( './../lib' );

var now;
var x;
var y;
var i;

// Create some data...
now = ( new Date() ).getTime();
x = new Float64Array( 100 );
y = new Float64Array( x.length );
for ( i = 0; i < x.length; i++ ) {
	x[ i ] = now + i*360000;
	y[ i ] = 50.0 + 10.0*randn();
}

// Create a new plot:
var plot = new Plot( [x], [y] );
plot.width = 600;
plot.height = 480;
plot.xScale = 'time';
plot.xTickFormat = '%H:%M';

// Render as a virtual DOM tree:
var vtree = plot.render();

// Transform the virtual DOM tree to HTML:
var html = toHTML( vtree );

// Inject the HTML:
var index = path.join( __dirname, 'index.html' );
var index = readFileSync( index, {
	'encoding': 'utf8'
});

index = index.replace( /\{\{plot\}\}/, html );

// Create a disposable HTTP server:
httpServer({
	'html': index,
	'open': true
});
