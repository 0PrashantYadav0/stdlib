'use strict';

// MODULES //

var isNull = require( '@stdlib/utils/is-null' );
var min = require( './../../utils/min.js' ); // TODO: replace with mod when written


// FUNCTIONS //

/**
* Computes a minimum value.
*
* @private
* @param {Array<NumericArray>} arr - input array
* @returns {(number|null)} minimum value or null
*/
function getMin( arr ) {
	var tmp;
	var i;
	if ( arr.length === 0 ) {
		return null;
	}
	tmp = new Array( arr.length );
	for ( i = 0; i < arr.length; i++ ) {
		tmp[ i ] = min( arr[ i ] );
	}
	return min( tmp );
} // end FUNCTION getMin


// GET //

/**
* Returns the minimum value of the y-axis domain.
*
* @private
* @returns {number} minimum value
*/
function get() {
	/* jshint validthis: true */ // TODO: eslint
	var min;
	if ( isNull( this._yMin ) ) {
		min = getMin( this._yData );
		return ( isNull( min ) ) ? 0.0 : min;
	}
	return this._yMin;
} // end FUNCTION get()


// EXPORTS //

module.exports = get;
