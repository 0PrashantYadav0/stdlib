'use strict';

// MODULES //

var debug = require( 'debug' )( 'plot:set:line-opacity' );
var isNumber = require( '@stdlib/utils/is-number' ).isPrimitive;
var isNumberArray = require( '@stdlib/utils/is-number' ).isPrimitiveNumberArray;


// SET //

/**
* Sets the data line opacity.
*
* @private
* @param {(number|NumberArray)} v - opacity
* @throws {TypeError} must be a number or number array
* @throws {RangeError} must be a number on the interval `[0,1]`
*/
function set( v ) {
	/*jshint validthis: true */ // TODO: eslint
	var isNum = isNumber( v );
	var i;
	if (
		!isNum &&
		!isNumberArray( v )
	) {
		throw new TypeError( 'invalid value. `lineOpacity` must be a number or number array. Value: `' + v + '.`' );
	}
	if ( isNum ) {
		v = [ v ];
	} else {
		v = v.slice();
	}
	for ( i = 0; i < v.length; i++ ) {
		if (
			v[ i ] < 0.0 ||
			v[ i ] > 1.0
		) {
			throw new RangeError( 'invalid value. A `lineOpacity` must be a number on the interval `[0,1]`. Value: `' + v[i] + '`.' );
		}
	}
	debug( 'Current value: %d.', this._lineOpacity );

	this._lineOpacity = v;
	debug( 'New Value: %d.', this._lineOpacity );

	this.emit( 'change' );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
