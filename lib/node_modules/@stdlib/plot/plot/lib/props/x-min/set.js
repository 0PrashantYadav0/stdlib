'use strict';

// MODULES //

var debug = require( 'debug' )( 'plot:set:xmin' );
var isNull = require( '@stdlib/assert/is-null' );
var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;


// MAIN //

/**
* Sets the minimum value of the x-axis domain.
*
* @private
* @param {(Date|FiniteNumber|null)} min - minimum value
* @throws {TypeError} must be a finite number primitive or null
*/
function set( min ) {
	/*jshint validthis: true */ // TODO: eslint
	// TODO: add test to determine if evaluates to valid date?
	if (
		!isNull( min ) &&
		!isNumber( min ) // FIXME: finite number
		// TODO: Date
	) {
		throw new TypeError( 'invalid value. `xMin` must be either a finite number, Date, or null. Value: `' + min + '.`' );
	}
	debug( 'Current value: %s.', this._xMin );

	this._xMin = min;
	debug( 'New value: %s.', this._xMin );

	this.emit( 'change' );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
