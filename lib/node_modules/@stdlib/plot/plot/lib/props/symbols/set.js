'use strict';

// MODULES //

var debug = require( 'debug' )( 'plot:set:symbols' );
var isStringArray = require( '@stdlib/utils/is-string' ).isPrimitiveStringArray;
var indexOf = require( '@stdlib/utils/indexof' );
var SYMBOLS = require( './symbols.json' );


// SET //

/**
* Sets the data symbols.
*
* @private
* @param {StringArray} symbols - data symbols
* @throws {TypeError} must be a string array
* @throws {Error} must only contain supported symbols
*/
function set( symbols ) {
	/*jshint validthis: true */ // TODO: eslint
	var i;
	if ( !isStringArray( symbols ) ) {
		throw new TypeError( 'invalid value. `symbols` must be a string array. Value: `'+symbols+'.`' );
	}
	for ( i = 0; i < symbols.length; i++ ) {
		if ( indexOf( SYMBOLS, symbols[i] ) === -1 ) {
			throw new Error( 'invalid value. `symbols` must only contain supported symbols. Value: `['+symbols.join(',')+']`.' );
		}
	}
	debug( 'Current value: %s.', JSON.stringify( this._symbols ) );

	this._symbols = symbols.slice();
	debug( 'New Value: %s.', JSON.stringify( this._symbols ) );

	this.emit( 'change' );
} // end FUNCTION set()


// EXPORTS //

module.exports = set;
