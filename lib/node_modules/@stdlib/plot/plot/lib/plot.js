'use strict';

// MODULES //

var copy = require( '@stdlib/utils/copy' );
var timeseries = require( '@stdlib/plot/time-series' );
var defaults = require( './defaults.json' );
var validate = require( './validate.js' );


// PLOT //

/**
* Plots data.
*
* @param {*} x - x data
* @param {*} y - y data
* @param {Options} [options] - plot options
* TODO
* @throws {TypeError} must provide valid options
* @returns {Plot} plot instance
*
* @example
* TODO
*/
function plot( x, y, options ) {
	var opts;
	var err;

	opts = copy( defaults );
	if ( arguments.length > 2 ) {
		err = validate( opts, options );
		if ( err ) {
			throw err;
		}
	}
	// TODO: could sniff `x` and `y` values to determine the "best" plot type, if a type is not specified
	// TODO: output modes; default could be to browser

	if ( opts.type === 'timeseries' ) {
		return timeseries({
			'x': x,
			'y': [ y ],
			'width': opts.width,
			'height': opts.height,
			'engine': opts.engine
		});
	}
} // end FUNCTION plot()


// EXPORTS //

module.exports = plot;
