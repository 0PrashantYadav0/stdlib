'use strict';

/**
* Validates that an instance is in a valid state for rendering.
*
* @private
* @param {Object} state - state
* @throws {Error} must be in a valid state to render
*/
function validate( state ) {
	var x;
	var y;
	var i;

	x = state._xData;
	y = state._yData;
	if ( x.length !== y.length ) {
		throw new Error( 'invalid state. `x` and `y` are different lengths. `x` length: '+x.length+', `y` length: '+y.length+'.' );
	}
	// TODO: will need to refactor to some degree to support `ndarray`-like `x` and `y`
	for ( i = 0; i < x.length; i++ ) {
		if ( x[ i ].length !== y[ i ].length ) {
			throw new Error( 'invalid state. Each `x[i]:y[i]` pair must be the same length. x['+i+'].length: '+x[i].length+', y['+i+'].length: '+y[i].length+'.' );
		}
	}
} // end FUNCTION validate()


// EXPORTS //

module.exports = validate;
