/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

#ifndef STDLIB_NAPI_ARGV_H
#define STDLIB_NAPI_ARGV_H

#include <node_api.h>

/**
* Macro for retrieving Node-API add-on callback arguments.
*
* @param env      environment under which the function is invoked
* @param info     callback data
* @param argv     variable name for storing argument values
* @param argc     variable name for storing the number of provided arguments
* @param nargs    expected number of arguments
*
* @example
* #include <node_api.h>
*
* // ...
*
* static napi_value addon( napi_env env, napi_callback_info info ) {
*     // Retrieve callback arguments:
*     STDLIB_STRIDED_NAPI_ARGV( env, info, argv, argc, 6 );
*
*     // ...
* }
*/
#define STDLIB_NAPI_ARGV( env, info, argv, argc, nargs )                       \
	size_t argc = nargs;                                                       \
	napi_value argv[ nargs ];                                                  \
	STDLIB_ASSERT_NAPI_STATUS_OK_RET_NULL( env, napi_get_cb_info( env, info, &argc, argv, NULL, NULL ), "" ) \
	if ( argc != nargs ) {                                                     \
		STDLIB_ASSERT_NAPI_STATUS_OK_RET_NULL( env, napi_throw_error( env, NULL, "invalid invocation. Must provide " #nargs " arguments." ), "" ) \
		return NULL;                                                           \
	}

#endif // !STDLIB_NAPI_ARGV_H
