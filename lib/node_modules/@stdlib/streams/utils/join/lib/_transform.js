'use strict';

// MODULES //

var logger = require( 'debug' );
var Buffer = require( '@stdlib/buffer/ctor' );


// VARIABLES //

var debug = logger( 'join-stream' );


// MAIN //

/**
* Implements the `_transform` method.
*
* @private
* @param {(Buffer|string)} chunk - streamed chunk
* @param {string} encoding - Buffer encoding
* @param {Callback} clbk - callback to invoke after transforming the streamed chunk
*/
function transform( chunk, encoding, clbk ) {
	/* eslint-disable no-invalid-this */
	var len;

	this._idx += 1;
	debug( 'Received a new chunk. Chunk: %s. Encoding: %s. Index: %d.', chunk.toString(), encoding, this._idx );
	if ( this._encoding === 'utf8' ) {
		if ( this._init ) {
			chunk = this._sep + chunk;
		} else {
			this._init = true;
		}
	} else if ( this._init ) {
		chunk = new Buffer( chunk, encoding );
		len = this._sep.length + chunk.length;
		chunk = Buffer.concat( [ this._sep, chunk ], len );
		chunk = chunk.toString( this._encoding );
	} else {
		this._init = true;
	}
	this.push( chunk, this._encoding );
	clbk();
} // end FUNCTION transform()


// EXPORTS //

module.exports = transform;
