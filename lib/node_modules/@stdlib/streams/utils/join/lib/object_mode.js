'use strict';

// MODULES //

var Stream = require( './stream.js' );


// OBJECT MODE //

/**
* Returns a join stream with `objectMode` set to `true`.
*
* @param {Options} [options] - stream options
* @param {string} [options.sep='\n'] - separator used to join streamed data
* @param {boolean} [options.objectMode=false] - specifies whether stream should operate in object mode
* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`
* @param {NonNegativeNumber} [options.highWaterMark=16] - specifies the `Buffer` level for when `write()` starts returning `false`
* @param {boolean} [options.allowHalfOpen=false] - specifies whether the stream should remain open even if one side ends
* @param {boolean} [options.readableObjectMode=false] - specifies whether the readable side should be in object mode
* @returns {JoinStream} join stream
*
* @example
* var stream = objectMode({
*     'sep': ','
* });
*
* stream.pipe( process.stdout );
* stream.write( 'a' );
* // => 'a'
*
* stream.write( 'b' );
* // => ',b'
*
* stream.write( 'c' );
* // => ',c'
*
* stream.end();
*/
function objectMode( options ) {
	var opts;
	if ( arguments.length ) {
		opts = options;
	} else {
		opts = {};
	}
	opts.objectMode = true;
	return new Stream( opts );
} // end FUNCTION objectMode()


// EXPORTS //

module.exports = objectMode;
