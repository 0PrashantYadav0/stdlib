'use strict';

// MODULES //

var Stream = require( './stream.js' );


// OBJECT MODE //

/**
* Returns an inspect stream with `objectMode` set to `true`.
*
* @param {Options} [options] - stream options
* @param {NonNegativeNumber} [options.highWaterMark] - specifies the `Buffer` level for when `write()` starts returning `false`
* @param {boolean} [options.allowHalfOpen=false] - specifies whether the stream should remain open even if one side ends
* @param {boolean} [options.readableObjectMode=false] - specifies whether the readable side should be in object mode
* @param {Callback} clbk - callback to invoke upon receiving data
* @returns {InspectStream} inspect stream
*
* @example
* function log( chunk, idx ) {
*     console.log( 'index: %d', idx );
*     console.log( chunk );
* }
*
* var stream = objectMode( log );
*
* stream.write( 'a' );
* stream.write( 'b' );
* stream.write( 'c' );
*
* stream.end();
* // 'index: 0'
* // 'a'
* // 'index: 1'
* // 'b'
* // 'index: 2'
* // 'c'
*/
function objectMode( options, clbk ) {
	var opts;
	var cb;
	if ( arguments.length > 1 ) {
		opts = options;
		cb = clbk;
	} else {
		opts = {};
		cb = options;
	}
	opts.objectMode = true;
	return new Stream( opts, cb );
} // end FUNCTION objectMode()


// EXPORTS //

module.exports = objectMode;
