'use strict';

// MODULES //

var lpad = require( '@stdlib/string/left-pad' );
var div2 = require( './div2.js' );


// VARIABLES //

var NBITS = 16;


// MAIN //

/**
* Returns a string giving the literal bit representation of an unsigned 16-bit integer.
*
* @param {uinteger16} x - input value
* @returns {BinaryString} bit representation
*
* @example
* var a = new Uint16Array( [ 1 ] );
* var str = toBinaryString( a[0] );
* // returns '0000000000000001'
* @example
* var a = new Uint16Array( [ 4 ] );
* var str = toBinaryString( a[0] );
* // returns '0000000000000100'
* @example
* var a = new Uint16Array( [ 9 ] );
* var str = toBinaryString( a[0] );
* // returns '0000000000001001'
*/
function toBinaryString( x ) {
	var b;

	// Convert the input value to a bit string:
	b = div2( x );

	// Left pad the bit string to ensure 16 bits are represented:
	b = lpad( b, NBITS, '0' );

	return b;
} // end FUNCTION toBinaryString()


// EXPORTS //

module.exports = toBinaryString;
