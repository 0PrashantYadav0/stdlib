'use strict';

// MODULES //

var Global = require( 'system.global' )();
var isObject = require( '@stdlib/utils/is-object' );
var modf = require( '@stdlib/math/base/special/modf' );
var round = require( '@stdlib/math/base/special/round' );
var now = require( './now.js' );


// VARIABLES //

var ts;
var ns;

if ( isObject( Global.performance ) ) {
	ns = Global.performance;
} else {
	ns = {};
}
ts = ns.now || ns.mozNow || ns.msNow || ns.oNow || ns.webkitNow || now;


// MAIN //

/**
* Returns a high-resolution time.
*
* #### Notes
*
* * Output format: `[seconds, nanoseconds]`.
*
*
* @private
* @returns {NumberArray} high-resolution time
*
* @example
* var t = tic();
* // returns [<number>,<number>]
*/
function tic() {
	var parts;
	var t;

	// Get a millisecond timestamp and convert to seconds:
	t = ts() / 1000;

	// Decompose the timestamp into integer (seconds) and fractional parts:
	parts = modf( t );

	// Convert the fractional part to nanoseconds:
	parts[ 1 ] = round( parts[1] * 1.0e9 );

	// Return the high-resolution time:
	return parts;
} // end FUNCTION tic()


// EXPORTS //

module.exports = tic;
