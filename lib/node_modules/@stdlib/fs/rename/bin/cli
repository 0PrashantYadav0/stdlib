#!/usr/bin/env node
'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var CLI = require( '@stdlib/tools/cli' );
var cwd = require( '@stdlib/process/cwd' );
var rename = require( './../lib' );


// MAIN //

/**
* Main execution sequence.
*
* @private
* @returns {void}
*/
function main() {
	var oldPath;
	var newPath;
	var args;
	var cli;
	var dir;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( resolve( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});

	// Get any provided command-line arguments:
	args = cli.args();

	if ( args.length !== 2 ) {
		process.exitCode = 1;
		return console.error( 'Error: invalid invocation. Must provide two arguments: an old path and a new path.' ); // eslint-disable-line no-console
	}
	dir = cwd();
	oldPath = resolve( dir, args[ 0 ] );
	newPath = resolve( dir, args[ 1 ] );

	rename( oldPath, newPath, done );

	/**
	* Callback invoked upon renaming a file.
	*
	* @private
	* @param {Error} [error] - error object
	* @returns {void}
	*/
	function done( error ) {
		if ( error ) {
			process.exitCode = 1;
			return console.error( 'Error: %s', error.message ); // eslint-disable-line no-console
		}
	}
}

main();
