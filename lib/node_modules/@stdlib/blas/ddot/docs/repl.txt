
{{alias}}( x, y )
    Computes the dot product of two double-precision floating-point vectors.

    Casting is *not* safe in order to accommodate generic arrays and array-like
    objects.

    For best performance, provide 1-dimensional ndarrays whose underlying data
    type is 'float64'.

    If provided empty vectors, the function returns `0.0`.

    Parameters
    ----------
    x: ndarray|ArrayLikeObject
        First input array. If provided an array-like object or ndarray whose
        underlying data type is *not* 'float64', the value is cast to a
        1-dimensional ndarray whose data type is 'float64'.

    y: ndarray|ArrayLikeObject
        Second input array. If provided an array-like object or ndarray whose
        underlying data type is *not* 'float64', the value is cast to a
        1-dimensional ndarray whose data type is 'float64'.

    Returns
    -------
    dot: number
        The dot product of `x` and `y`.

    Examples
    --------
    // Using ndarrays...
    > var x = {{alias:@stdlib/ndarray/array}}( new {{alias:@stdlib/array/float64}}( [ 4.0, 2.0, -3.0, 5.0, -1.0 ] ) );
    > var y = {{alias:@stdlib/ndarray/array}}( new {{alias:@stdlib/array/float64}}( [ 2.0, 6.0, -1.0, -4.0, 8.0 ] ) );
    > {{alias}}( x, y )
    -5.0

    // Using array-like objects...
    > x = [ 4.0, 2.0, -3.0, 5.0, -1.0 ];
    > y = [ 2.0, 6.0, -1.0, -4.0, 8.0 ];
    > {{alias}}( x, y )
    -5.0

    See Also
    --------

