/**
* @license Apache-2.0
*
* Copyright (c) 2019 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/*
* List of file system API aliases and corresponding argument types.
*
* ## Notes
*
* -   Each entry in the list has the following format:
*
*     ```
*     [ <alias>, <arg_type>, ... ]
*     ```
*
*     where `<alias>` is the file system API alias and `<arg_type>` is the expected argument type (e.g., file path, directory path, either a file path or directory path, etc).
*
* -   Argument types:
*
*     -   `*`: either a file or directory path
*     -   `file`: file path
*     -   `dir`: directory path
*     -   `list`: an array of file and/or directory paths
*     -   `filelist`: an array of file paths
*     -   `dirlist`: an array of directory paths
*     -   `null`: neither a file path nor a directory path nor a list of either file and/or directory paths
*
* -   For the purposes of TAB completion, only those positional arguments which expect file and/or directory paths need to be included. For example, if an API has three parameters and only the first argument expects either a file and/or directory path, only that first argument needs to be included below; the remaining two arguments can be omitted. If an API has three parameters and only the second argument expects either a file and/or directory path, only the first two arguments need to be included below, with the first argument documented as `null`; the remaining argument can be omitted.
*/
var aliases = [
	// Note: keep in alphabetical order...
	[ 'exists', '*' ],
	[ 'exists.sync', '*' ],
	[ 'readDir', 'dir' ],
	[ 'readDir.sync', 'dir' ],
	[ 'readFile', 'file' ],
	[ 'readFile.sync', 'file' ],
	[ 'readFileList', 'filelist' ],
	[ 'readFileList.sync', 'filelist' ],
	[ 'readJSON', 'file' ],
	[ 'readJSON.sync', 'file' ],
	[ 'readWASM', 'file' ],
	[ 'readWASM.sync', 'file' ],
	[ 'rename', '*', '*' ],
	[ 'rename.sync', '*', '*' ],
	[ 'resolveParentPath', null ],
	[ 'resolveParentPath.sync', null ],
	[ 'unlink', 'file' ],
	[ 'unlink.sync', 'file' ],
	[ 'writeFile', 'file' ],
	[ 'writeFile.sync', 'file' ]
];


// EXPORTS //

module.exports = aliases;
