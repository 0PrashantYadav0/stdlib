/**
* @license Apache-2.0
*
* Copyright (c) 2019 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var max = require( '@stdlib/math/base/special/max' );
var align = require( './align_line.js' );
var style = require( './style_line.js' );


// MAIN //

/**
* Formats lines of slide text.
*
* @private
* @param {PositiveInteger} width - slide width
* @param {StringArray} lines - lines of slide text
* @param {string} fill - fill character
* @returns {StringArray} formatted lines
*/
function format( width, lines, fill ) {
	var padding;
	var len;
	var i;

	// Create a copy of the input lines:
	lines = lines.slice();

	// Transform the line array to include meta info, such as adjusted line length...
	for ( i = 0; i < lines.length; i++ ) {
		lines[ i ] = {
			'text': lines[ i ],
			'length': lines[ i ].length
		};
	}
	// Apply styling to each line...
	for ( i = 0; i < lines.length; i++ ) {
		lines[ i ] = style( lines[ i ] );
	}
	// TODO: apply emojis!

	// Determine the maximum slide text line length...
	len = 0;
	for ( i = 0; i < lines.length; i++ ) {
		len = max( len, lines[ i ].length );
	}
	// Compute how much padding (whitespace) should be present on each line to ensure proper alignment:
	padding = width - len;

	// Format each slide line...
	for ( i = 0; i < lines.length; i++ ) {
		lines[ i ].text = align( width, lines[ i ], fill, padding );
	}
	return lines;
}


// EXPORTS //

module.exports = format;
