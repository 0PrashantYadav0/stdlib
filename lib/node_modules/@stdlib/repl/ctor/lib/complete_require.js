/**
* @license Apache-2.0
*
* Copyright (c) 2019 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var reRelativePath = require( './regexp_relative_require_path.js' );
var completeRelativeRequire = require( './complete_require_relative.js' );
var completePackageRequire = require( './complete_require_package.js' );


// VARIABLES //

var debug = logger( 'repl:completer:require' );
var RE_RELATIVE = reRelativePath();


// MAIN //

/**
* Completes a `require` expression.
*
* @private
* @param {Array} out - output array for storing completions
* @param {string} path - path to complete
* @param {Array} paths - module search paths
* @param {Array} exts - supported `require` extensions
* @returns {Array} output array
*/
function complete( out, path, paths, exts ) {
	if ( path === '.' ) {
		out.push( './', '../' );
		return out;
	}
	if ( path === '..' ) {
		out.push( '../' );
		return out;
	}
	debug( 'Searching for completion candidates...' );
	if ( RE_RELATIVE.test( path ) ) {
		debug( 'Detected a relative require path. Resolving from current working directory...' );
		return completeRelativeRequire( out, path, exts );
	}
	debug( 'Detected a package name. Resolving from known module paths...' );
	return completePackageRequire( out, path, paths, exts );
}


// EXPORTS //

module.exports = complete;
