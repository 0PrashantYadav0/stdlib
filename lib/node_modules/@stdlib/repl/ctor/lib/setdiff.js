/**
* @license Apache-2.0
*
* Copyright (c) 2019 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Returns the set difference between two similarly **sorted** lists.
*
* @private
* @param {Array} A - first sorted list
* @param {Array} B - second sorted list
* @returns {Array} set difference
*
* @example
* var out = setdiff( [ 1, 2, 3 ], [ 2, 4, 5 ] );
* // returns [ 1, 3, 4, 5 ]
*
* @example
* var out = setdiff( [ 1 ], [ 2, 4, 5 ] );
* // returns [ 1, 2, 4, 5 ]
*
* @example
* var out = setdiff( [ 1, 2, 3 ], [ 2 ] );
* // returns [ 1, 3 ]
*
* @example
* var out = setdiff( [ 1, 2, 3 ], [] );
* // returns [ 1, 2, 3 ]
*
* @example
* var out = setdiff( [], [ 2, 4, 5 ] );
* // returns [ 2, 4, 5 ]
*
* @example
* var out = setdiff( [ 1, 2, 3 ], [ 1, 2, 3 ] );
* // returns []
*
* @example
* var out = setdiff( [], [] );
* // returns []
*
* @example
* var out = setdiff( [ 1 ], [ 1 ] );
* // returns []
*
* @example
* var out = setdiff( [ 1, 2, 2, 3, 3 ], [ 2, 4, 5, 5 ] );
* // returns [ 1, 2, 3, 3, 4, 5, 5 ]
*
* @example
* var out = setdiff( [ 1, 2, 3 ], [ 4, 5 ] );
* // returns [ 1, 2, 3, 4, 5 ]
*
* @example
* var out = setdiff( [ 1, 2 ], [ 3, 4, 5 ] );
* // returns [ 1, 2, 3, 4, 5 ]
*
* @example
* var out = setdiff( [ 1, 2, 3, 7 ], [ 0, 1, 2, 4, 5 ] );
* // returns [ 0, 3, 4, 5, 7 ]
*
* @example
* var out = setdiff( [ 1, 2, 3, 7, 9 ], [ -2, -1, 0, 1, 2, 4, 5 ] );
* // returns [ -2, -1, 0, 3, 4, 5, 7, 9 ]
*/
function setdiff( A, B ) {
	var out;
	var la;
	var lb;
	var a;
	var b;
	var i;
	var j;

	la = A.length;
	lb = B.length;
	if ( la === 0 ) {
		return B.slice();
	}
	if ( lb === 0 ) {
		return A.slice();
	}
	out = [];
	i = 0;
	j = 0;
	while ( i < la && j < lb ) {
		a = A[ i ];
		b = B[ j ];
		if ( a < b ) {
			out.push( a );
			i += 1;
		} else if ( b < a ) {
			out.push( b );
			j += 1;
		} else {
			i += 1;
			j += 1;
		}
	}
	if ( i < la ) {
		for ( ; i < la; i++ ) {
			out.push( A[ i ] );
		}
	}
	if ( j < lb ) {
		for ( ; j < lb; j++ ) {
			out.push( B[ j ] );
		}
	}
	return out;
}


// EXPORTS //

module.exports = setdiff;
