'use strict';

/*
* When adding names to the namespace, ensure that they are added in alphabetical order according to alias (namespace key).
*/

var ns = [];

ns.push({
	'alias': 'base.abs',
	'path': '@stdlib/math/base/special/abs',
	'value': require( '@stdlib/math/base/special/abs' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.absdiff',
	'path': '@stdlib/math/base/utils/absolute-difference',
	'value': require( '@stdlib/math/base/utils/absolute-difference' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/relative-difference',
		'@stdlib/math/base/utils/float64-epsilon-difference'
	]
});

ns.push({
	'alias': 'base.absInt32',
	'path': '@stdlib/math/base/special/int32-abs',
	'value': require( '@stdlib/math/base/special/int32-abs' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/abs'
	]
});

ns.push({
	'alias': 'base.acos',
	'path': '@stdlib/math/base/special/acos',
	'value': require( '@stdlib/math/base/special/acos' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/acosh',
		'@stdlib/math/base/special/asin',
		'@stdlib/math/base/special/atan'
	]
});

ns.push({
	'alias': 'base.acosh',
	'path': '@stdlib/math/base/special/acosh',
	'value': require( '@stdlib/math/base/special/acosh' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/acos',
		'@stdlib/math/base/special/asinh',
		'@stdlib/math/base/special/atanh'
	]
});

ns.push({
	'alias': 'base.asin',
	'path': '@stdlib/math/base/special/asin',
	'value': require( '@stdlib/math/base/special/asin' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/acos',
		'@stdlib/math/base/special/asinh',
		'@stdlib/math/base/special/atan'
	]
});

ns.push({
	'alias': 'base.asinh',
	'path': '@stdlib/math/base/special/asinh',
	'value': require( '@stdlib/math/base/special/asinh' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/acosh',
		'@stdlib/math/base/special/asin',
		'@stdlib/math/base/special/atanh'
	]
});

ns.push({
	'alias': 'base.asum',
	'path': '@stdlib/math/base/blas/asum',
	'value': require( '@stdlib/math/base/blas/asum' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/dasum',
		'@stdlib/math/base/blas/sasum'
	]
});

ns.push({
	'alias': 'base.atan',
	'path': '@stdlib/math/base/special/atan',
	'value': require( '@stdlib/math/base/special/atan' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/acos',
		'@stdlib/math/base/special/asin',
		'@stdlib/math/base/special/atanh'
	]
});

ns.push({
	'alias': 'base.atan2',
	'path': '@stdlib/math/base/special/atan2',
	'value': require( '@stdlib/math/base/special/atan2' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/atan'
	]
});

ns.push({
	'alias': 'base.atanh',
	'path': '@stdlib/math/base/special/atanh',
	'value': require( '@stdlib/math/base/special/atanh' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/acosh',
		'@stdlib/math/base/special/asinh',
		'@stdlib/math/base/special/atan'
	]
});

ns.push({
	'alias': 'base.axpy',
	'path': '@stdlib/math/base/blas/axpy',
	'value': require( '@stdlib/math/base/blas/axpy' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/daxpy',
		'@stdlib/math/base/blas/saxpy'
	]
});

ns.push({
	'alias': 'base.beta',
	'path': '@stdlib/math/base/special/beta',
	'value': require( '@stdlib/math/base/special/beta' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.betainc',
	'path': '@stdlib/math/base/special/betainc',
	'value': require( '@stdlib/math/base/special/betainc' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.betaincinv',
	'path': '@stdlib/math/base/special/betaincinv',
	'value': require( '@stdlib/math/base/special/betaincinv' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.betaln',
	'path': '@stdlib/math/base/special/betaln',
	'value': require( '@stdlib/math/base/special/betaln' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.binomcoef',
	'path': '@stdlib/math/base/special/binomcoef',
	'value': require( '@stdlib/math/base/special/binomcoef' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.binomcoefln',
	'path': '@stdlib/math/base/special/binomcoefln',
	'value': require( '@stdlib/math/base/special/binomcoefln' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.cbrt',
	'path': '@stdlib/math/base/special/cbrt',
	'value': require( '@stdlib/math/base/special/cbrt' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.ceil',
	'path': '@stdlib/math/base/special/ceil',
	'value': require( '@stdlib/math/base/special/ceil' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceiln',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/round'
	]
});

ns.push({
	'alias': 'base.ceil10',
	'path': '@stdlib/math/base/special/ceil10',
	'value': require( '@stdlib/math/base/special/ceil10' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/ceil2',
		'@stdlib/math/base/special/floor10',
		'@stdlib/math/base/special/round10'
	]
});

ns.push({
	'alias': 'base.ceil2',
	'path': '@stdlib/math/base/special/ceil2',
	'value': require( '@stdlib/math/base/special/ceil2' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/ceil10',
		'@stdlib/math/base/special/floor2',
		'@stdlib/math/base/special/round2'
	]
});

ns.push({
	'alias': 'base.ceilb',
	'path': '@stdlib/math/base/special/ceilb',
	'value': require( '@stdlib/math/base/special/ceilb' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/ceiln',
		'@stdlib/math/base/special/floorb',
		'@stdlib/math/base/special/roundb'
	]
});

ns.push({
	'alias': 'base.ceiln',
	'path': '@stdlib/math/base/special/ceiln',
	'value': require( '@stdlib/math/base/special/ceiln' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/ceilb',
		'@stdlib/math/base/special/floorn',
		'@stdlib/math/base/special/roundn'
	]
});

ns.push({
	'alias': 'base.ceilsd',
	'path': '@stdlib/math/base/special/ceilsd',
	'value': require( '@stdlib/math/base/special/ceilsd' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/floorsd',
		'@stdlib/math/base/special/roundsd',
		'@stdlib/math/base/special/truncsd'
	]
});

ns.push({
	'alias': 'base.continuedFraction',
	'path': '@stdlib/math/base/tools/continued-fraction',
	'value': require( '@stdlib/math/base/tools/continued-fraction' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.copy',
	'path': '@stdlib/math/base/blas/copy',
	'value': require( '@stdlib/math/base/blas/copy' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/dcopy'
	]
});

ns.push({
	'alias': 'base.copysign',
	'path': '@stdlib/math/base/special/copysign',
	'value': require( '@stdlib/math/base/special/copysign' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/flipsign'
	]
});

ns.push({
	'alias': 'base.cos',
	'path': '@stdlib/math/base/special/cos',
	'value': require( '@stdlib/math/base/special/cos' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cospi',
		'@stdlib/math/base/special/cosm1',
		'@stdlib/math/base/special/sin',
		'@stdlib/math/base/special/tan'
	]
});

ns.push({
	'alias': 'base.cosh',
	'path': '@stdlib/math/base/special/cosh',
	'value': require( '@stdlib/math/base/special/cosh' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cos',
		'@stdlib/math/base/special/sinh',
		'@stdlib/math/base/special/tanh'
	]
});

ns.push({
	'alias': 'base.cosm1',
	'path': '@stdlib/math/base/special/cosm1',
	'value': require( '@stdlib/math/base/special/cosm1' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cos'
	]
});

ns.push({
	'alias': 'base.cospi',
	'path': '@stdlib/math/base/special/cospi',
	'value': require( '@stdlib/math/base/special/cospi' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cos'
	]
});

ns.push({
	'alias': 'base.dasum',
	'path': '@stdlib/math/base/blas/dasum',
	'value': require( '@stdlib/math/base/blas/dasum' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/daxpy',
		'@stdlib/math/base/blas/dcopy'
	]
});

ns.push({
	'alias': 'base.daxpy',
	'path': '@stdlib/math/base/blas/daxpy',
	'value': require( '@stdlib/math/base/blas/daxpy' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/dasum',
		'@stdlib/math/base/blas/dcopy'
	]
});

ns.push({
	'alias': 'base.dcopy',
	'path': '@stdlib/math/base/blas/dcopy',
	'value': require( '@stdlib/math/base/blas/dcopy' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/dasum',
		'@stdlib/math/base/blas/daxpy'
	]
});

ns.push({
	'alias': 'base.deg2rad',
	'path': '@stdlib/math/base/special/deg2rad',
	'value': require( '@stdlib/math/base/special/deg2rad' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/rad2deg'
	]
});

ns.push({
	'alias': 'base.digamma',
	'path': '@stdlib/math/base/special/digamma',
	'value': require( '@stdlib/math/base/special/digamma' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.cdf',
	'path': '@stdlib/math/base/dist/arcsine/cdf',
	'value': require( '@stdlib/math/base/dist/arcsine/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.entropy',
	'path': '@stdlib/math/base/dist/arcsine/entropy',
	'value': require( '@stdlib/math/base/dist/arcsine/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.kurtosis',
	'path': '@stdlib/math/base/dist/arcsine/kurtosis',
	'value': require( '@stdlib/math/base/dist/arcsine/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.logpdf',
	'path': '@stdlib/math/base/dist/arcsine/logpdf',
	'value': require( '@stdlib/math/base/dist/arcsine/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.mean',
	'path': '@stdlib/math/base/dist/arcsine/mean',
	'value': require( '@stdlib/math/base/dist/arcsine/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.median',
	'path': '@stdlib/math/base/dist/arcsine/median',
	'value': require( '@stdlib/math/base/dist/arcsine/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.mode',
	'path': '@stdlib/math/base/dist/arcsine/mode',
	'value': require( '@stdlib/math/base/dist/arcsine/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.pdf',
	'path': '@stdlib/math/base/dist/arcsine/pdf',
	'value': require( '@stdlib/math/base/dist/arcsine/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.quantile',
	'path': '@stdlib/math/base/dist/arcsine/quantile',
	'value': require( '@stdlib/math/base/dist/arcsine/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.skewness',
	'path': '@stdlib/math/base/dist/arcsine/skewness',
	'value': require( '@stdlib/math/base/dist/arcsine/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.arcsine.variance',
	'path': '@stdlib/math/base/dist/arcsine/variance',
	'value': require( '@stdlib/math/base/dist/arcsine/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.cdf',
	'path': '@stdlib/math/base/dist/beta/cdf',
	'value': require( '@stdlib/math/base/dist/beta/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.entropy',
	'path': '@stdlib/math/base/dist/beta/entropy',
	'value': require( '@stdlib/math/base/dist/beta/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.kurtosis',
	'path': '@stdlib/math/base/dist/beta/kurtosis',
	'value': require( '@stdlib/math/base/dist/beta/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.logpdf',
	'path': '@stdlib/math/base/dist/beta/logpdf',
	'value': require( '@stdlib/math/base/dist/beta/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.mean',
	'path': '@stdlib/math/base/dist/beta/mean',
	'value': require( '@stdlib/math/base/dist/beta/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.median',
	'path': '@stdlib/math/base/dist/beta/median',
	'value': require( '@stdlib/math/base/dist/beta/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.mgf',
	'path': '@stdlib/math/base/dist/beta/mgf',
	'value': require( '@stdlib/math/base/dist/beta/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.mode',
	'path': '@stdlib/math/base/dist/beta/mode',
	'value': require( '@stdlib/math/base/dist/beta/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.pdf',
	'path': '@stdlib/math/base/dist/beta/pdf',
	'value': require( '@stdlib/math/base/dist/beta/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.quantile',
	'path': '@stdlib/math/base/dist/beta/quantile',
	'value': require( '@stdlib/math/base/dist/beta/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.skewness',
	'path': '@stdlib/math/base/dist/beta/skewness',
	'value': require( '@stdlib/math/base/dist/beta/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.beta.variance',
	'path': '@stdlib/math/base/dist/beta/variance',
	'value': require( '@stdlib/math/base/dist/beta/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.cdf',
	'path': '@stdlib/math/base/dist/binomial/cdf',
	'value': require( '@stdlib/math/base/dist/binomial/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.entropy',
	'path': '@stdlib/math/base/dist/binomial/entropy',
	'value': require( '@stdlib/math/base/dist/binomial/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.kurtosis',
	'path': '@stdlib/math/base/dist/binomial/kurtosis',
	'value': require( '@stdlib/math/base/dist/binomial/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.mean',
	'path': '@stdlib/math/base/dist/binomial/mean',
	'value': require( '@stdlib/math/base/dist/binomial/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.median',
	'path': '@stdlib/math/base/dist/binomial/median',
	'value': require( '@stdlib/math/base/dist/binomial/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.mgf',
	'path': '@stdlib/math/base/dist/binomial/mgf',
	'value': require( '@stdlib/math/base/dist/binomial/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.mode',
	'path': '@stdlib/math/base/dist/binomial/mode',
	'value': require( '@stdlib/math/base/dist/binomial/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.pmf',
	'path': '@stdlib/math/base/dist/binomial/pmf',
	'value': require( '@stdlib/math/base/dist/binomial/pmf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.quantile',
	'path': '@stdlib/math/base/dist/binomial/quantile',
	'value': require( '@stdlib/math/base/dist/binomial/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.skewness',
	'path': '@stdlib/math/base/dist/binomial/skewness',
	'value': require( '@stdlib/math/base/dist/binomial/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.binomial.variance',
	'path': '@stdlib/math/base/dist/binomial/variance',
	'value': require( '@stdlib/math/base/dist/binomial/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.cdf',
	'path': '@stdlib/math/base/dist/cauchy/cdf',
	'value': require( '@stdlib/math/base/dist/cauchy/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.entropy',
	'path': '@stdlib/math/base/dist/cauchy/entropy',
	'value': require( '@stdlib/math/base/dist/cauchy/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.logcdf',
	'path': '@stdlib/math/base/dist/cauchy/logcdf',
	'value': require( '@stdlib/math/base/dist/cauchy/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.logpdf',
	'path': '@stdlib/math/base/dist/cauchy/logpdf',
	'value': require( '@stdlib/math/base/dist/cauchy/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.median',
	'path': '@stdlib/math/base/dist/cauchy/median',
	'value': require( '@stdlib/math/base/dist/cauchy/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.mode',
	'path': '@stdlib/math/base/dist/cauchy/mode',
	'value': require( '@stdlib/math/base/dist/cauchy/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.pdf',
	'path': '@stdlib/math/base/dist/cauchy/pdf',
	'value': require( '@stdlib/math/base/dist/cauchy/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.cauchy.quantile',
	'path': '@stdlib/math/base/dist/cauchy/quantile',
	'value': require( '@stdlib/math/base/dist/cauchy/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.cdf',
	'path': '@stdlib/math/base/dist/chisquare/cdf',
	'value': require( '@stdlib/math/base/dist/chisquare/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.entropy',
	'path': '@stdlib/math/base/dist/chisquare/entropy',
	'value': require( '@stdlib/math/base/dist/chisquare/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.kurtosis',
	'path': '@stdlib/math/base/dist/chisquare/kurtosis',
	'value': require( '@stdlib/math/base/dist/chisquare/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.mean',
	'path': '@stdlib/math/base/dist/chisquare/mean',
	'value': require( '@stdlib/math/base/dist/chisquare/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.mgf',
	'path': '@stdlib/math/base/dist/chisquare/mgf',
	'value': require( '@stdlib/math/base/dist/chisquare/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.mode',
	'path': '@stdlib/math/base/dist/chisquare/mode',
	'value': require( '@stdlib/math/base/dist/chisquare/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.pdf',
	'path': '@stdlib/math/base/dist/chisquare/pdf',
	'value': require( '@stdlib/math/base/dist/chisquare/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.quantile',
	'path': '@stdlib/math/base/dist/chisquare/quantile',
	'value': require( '@stdlib/math/base/dist/chisquare/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.skewness',
	'path': '@stdlib/math/base/dist/chisquare/skewness',
	'value': require( '@stdlib/math/base/dist/chisquare/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.chisquare.variance',
	'path': '@stdlib/math/base/dist/chisquare/variance',
	'value': require( '@stdlib/math/base/dist/chisquare/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.degenerate.cdf',
	'path': '@stdlib/math/base/dist/degenerate/cdf',
	'value': require( '@stdlib/math/base/dist/degenerate/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.degenerate.logcdf',
	'path': '@stdlib/math/base/dist/degenerate/logcdf',
	'value': require( '@stdlib/math/base/dist/degenerate/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.degenerate.logpdf',
	'path': '@stdlib/math/base/dist/degenerate/logpdf',
	'value': require( '@stdlib/math/base/dist/degenerate/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.degenerate.mgf',
	'path': '@stdlib/math/base/dist/degenerate/mgf',
	'value': require( '@stdlib/math/base/dist/degenerate/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.degenerate.pdf',
	'path': '@stdlib/math/base/dist/degenerate/pdf',
	'value': require( '@stdlib/math/base/dist/degenerate/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.degenerate.pmf',
	'path': '@stdlib/math/base/dist/degenerate/pmf',
	'value': require( '@stdlib/math/base/dist/degenerate/pmf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.degenerate.quantile',
	'path': '@stdlib/math/base/dist/degenerate/quantile',
	'value': require( '@stdlib/math/base/dist/degenerate/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.erlang.cdf',
	'path': '@stdlib/math/base/dist/erlang/cdf',
	'value': require( '@stdlib/math/base/dist/erlang/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.erlang.mgf',
	'path': '@stdlib/math/base/dist/erlang/mgf',
	'value': require( '@stdlib/math/base/dist/erlang/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.erlang.pdf',
	'path': '@stdlib/math/base/dist/erlang/pdf',
	'value': require( '@stdlib/math/base/dist/erlang/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.erlang.quantile',
	'path': '@stdlib/math/base/dist/erlang/quantile',
	'value': require( '@stdlib/math/base/dist/erlang/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.cdf',
	'path': '@stdlib/math/base/dist/exponential/cdf',
	'value': require( '@stdlib/math/base/dist/exponential/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.entropy',
	'path': '@stdlib/math/base/dist/exponential/entropy',
	'value': require( '@stdlib/math/base/dist/exponential/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.kurtosis',
	'path': '@stdlib/math/base/dist/exponential/kurtosis',
	'value': require( '@stdlib/math/base/dist/exponential/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.mean',
	'path': '@stdlib/math/base/dist/exponential/mean',
	'value': require( '@stdlib/math/base/dist/exponential/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.median',
	'path': '@stdlib/math/base/dist/exponential/median',
	'value': require( '@stdlib/math/base/dist/exponential/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.mgf',
	'path': '@stdlib/math/base/dist/exponential/mgf',
	'value': require( '@stdlib/math/base/dist/exponential/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.mode',
	'path': '@stdlib/math/base/dist/exponential/mode',
	'value': require( '@stdlib/math/base/dist/exponential/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.pdf',
	'path': '@stdlib/math/base/dist/exponential/pdf',
	'value': require( '@stdlib/math/base/dist/exponential/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.quantile',
	'path': '@stdlib/math/base/dist/exponential/quantile',
	'value': require( '@stdlib/math/base/dist/exponential/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.skewness',
	'path': '@stdlib/math/base/dist/exponential/skewness',
	'value': require( '@stdlib/math/base/dist/exponential/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.exponential.variance',
	'path': '@stdlib/math/base/dist/exponential/variance',
	'value': require( '@stdlib/math/base/dist/exponential/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.cdf',
	'path': '@stdlib/math/base/dist/f/cdf',
	'value': require( '@stdlib/math/base/dist/f/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.entropy',
	'path': '@stdlib/math/base/dist/f/entropy',
	'value': require( '@stdlib/math/base/dist/f/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.kurtosis',
	'path': '@stdlib/math/base/dist/f/kurtosis',
	'value': require( '@stdlib/math/base/dist/f/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.mean',
	'path': '@stdlib/math/base/dist/f/mean',
	'value': require( '@stdlib/math/base/dist/f/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.mode',
	'path': '@stdlib/math/base/dist/f/mode',
	'value': require( '@stdlib/math/base/dist/f/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.pdf',
	'path': '@stdlib/math/base/dist/f/pdf',
	'value': require( '@stdlib/math/base/dist/f/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.quantile',
	'path': '@stdlib/math/base/dist/f/quantile',
	'value': require( '@stdlib/math/base/dist/f/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.skewness',
	'path': '@stdlib/math/base/dist/f/skewness',
	'value': require( '@stdlib/math/base/dist/f/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.f.variance',
	'path': '@stdlib/math/base/dist/f/variance',
	'value': require( '@stdlib/math/base/dist/f/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.cdf',
	'path': '@stdlib/math/base/dist/gamma/cdf',
	'value': require( '@stdlib/math/base/dist/gamma/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.entropy',
	'path': '@stdlib/math/base/dist/gamma/entropy',
	'value': require( '@stdlib/math/base/dist/gamma/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.kurtosis',
	'path': '@stdlib/math/base/dist/gamma/kurtosis',
	'value': require( '@stdlib/math/base/dist/gamma/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.mean',
	'path': '@stdlib/math/base/dist/gamma/mean',
	'value': require( '@stdlib/math/base/dist/gamma/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.mgf',
	'path': '@stdlib/math/base/dist/gamma/mgf',
	'value': require( '@stdlib/math/base/dist/gamma/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.mode',
	'path': '@stdlib/math/base/dist/gamma/mode',
	'value': require( '@stdlib/math/base/dist/gamma/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.pdf',
	'path': '@stdlib/math/base/dist/gamma/pdf',
	'value': require( '@stdlib/math/base/dist/gamma/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.quantile',
	'path': '@stdlib/math/base/dist/gamma/quantile',
	'value': require( '@stdlib/math/base/dist/gamma/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.skewness',
	'path': '@stdlib/math/base/dist/gamma/skewness',
	'value': require( '@stdlib/math/base/dist/gamma/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gamma.variance',
	'path': '@stdlib/math/base/dist/gamma/variance',
	'value': require( '@stdlib/math/base/dist/gamma/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.cdf',
	'path': '@stdlib/math/base/dist/geometric/cdf',
	'value': require( '@stdlib/math/base/dist/geometric/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.entropy',
	'path': '@stdlib/math/base/dist/geometric/entropy',
	'value': require( '@stdlib/math/base/dist/geometric/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.kurtosis',
	'path': '@stdlib/math/base/dist/geometric/kurtosis',
	'value': require( '@stdlib/math/base/dist/geometric/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.logcdf',
	'path': '@stdlib/math/base/dist/geometric/logcdf',
	'value': require( '@stdlib/math/base/dist/geometric/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.logpmf',
	'path': '@stdlib/math/base/dist/geometric/logpmf',
	'value': require( '@stdlib/math/base/dist/geometric/logpmf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.mean',
	'path': '@stdlib/math/base/dist/geometric/mean',
	'value': require( '@stdlib/math/base/dist/geometric/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.median',
	'path': '@stdlib/math/base/dist/geometric/median',
	'value': require( '@stdlib/math/base/dist/geometric/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.mgf',
	'path': '@stdlib/math/base/dist/geometric/mgf',
	'value': require( '@stdlib/math/base/dist/geometric/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.mode',
	'path': '@stdlib/math/base/dist/geometric/mode',
	'value': require( '@stdlib/math/base/dist/geometric/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.pmf',
	'path': '@stdlib/math/base/dist/geometric/pmf',
	'value': require( '@stdlib/math/base/dist/geometric/pmf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.quantile',
	'path': '@stdlib/math/base/dist/geometric/quantile',
	'value': require( '@stdlib/math/base/dist/geometric/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.skewness',
	'path': '@stdlib/math/base/dist/geometric/skewness',
	'value': require( '@stdlib/math/base/dist/geometric/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.geometric.variance',
	'path': '@stdlib/math/base/dist/geometric/variance',
	'value': require( '@stdlib/math/base/dist/geometric/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.cdf',
	'path': '@stdlib/math/base/dist/gumbel/cdf',
	'value': require( '@stdlib/math/base/dist/gumbel/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.entropy',
	'path': '@stdlib/math/base/dist/gumbel/entropy',
	'value': require( '@stdlib/math/base/dist/gumbel/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.kurtosis',
	'path': '@stdlib/math/base/dist/gumbel/kurtosis',
	'value': require( '@stdlib/math/base/dist/gumbel/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.logcdf',
	'path': '@stdlib/math/base/dist/gumbel/logcdf',
	'value': require( '@stdlib/math/base/dist/gumbel/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.logpdf',
	'path': '@stdlib/math/base/dist/gumbel/logpdf',
	'value': require( '@stdlib/math/base/dist/gumbel/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.mean',
	'path': '@stdlib/math/base/dist/gumbel/mean',
	'value': require( '@stdlib/math/base/dist/gumbel/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.median',
	'path': '@stdlib/math/base/dist/gumbel/median',
	'value': require( '@stdlib/math/base/dist/gumbel/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.mgf',
	'path': '@stdlib/math/base/dist/gumbel/mgf',
	'value': require( '@stdlib/math/base/dist/gumbel/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.mode',
	'path': '@stdlib/math/base/dist/gumbel/mode',
	'value': require( '@stdlib/math/base/dist/gumbel/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.pdf',
	'path': '@stdlib/math/base/dist/gumbel/pdf',
	'value': require( '@stdlib/math/base/dist/gumbel/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.quantile',
	'path': '@stdlib/math/base/dist/gumbel/quantile',
	'value': require( '@stdlib/math/base/dist/gumbel/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.skewness',
	'path': '@stdlib/math/base/dist/gumbel/skewness',
	'value': require( '@stdlib/math/base/dist/gumbel/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.gumbel.variance',
	'path': '@stdlib/math/base/dist/gumbel/variance',
	'value': require( '@stdlib/math/base/dist/gumbel/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.cdf',
	'path': '@stdlib/math/base/dist/hypergeometric/cdf',
	'value': require( '@stdlib/math/base/dist/hypergeometric/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.kurtosis',
	'path': '@stdlib/math/base/dist/hypergeometric/kurtosis',
	'value': require( '@stdlib/math/base/dist/hypergeometric/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.mean',
	'path': '@stdlib/math/base/dist/hypergeometric/mean',
	'value': require( '@stdlib/math/base/dist/hypergeometric/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.mode',
	'path': '@stdlib/math/base/dist/hypergeometric/mode',
	'value': require( '@stdlib/math/base/dist/hypergeometric/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.pmf',
	'path': '@stdlib/math/base/dist/hypergeometric/pmf',
	'value': require( '@stdlib/math/base/dist/hypergeometric/pmf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.quantile',
	'path': '@stdlib/math/base/dist/hypergeometric/quantile',
	'value': require( '@stdlib/math/base/dist/hypergeometric/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.skewness',
	'path': '@stdlib/math/base/dist/hypergeometric/skewness',
	'value': require( '@stdlib/math/base/dist/hypergeometric/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.hypergeometric.variance',
	'path': '@stdlib/math/base/dist/hypergeometric/variance',
	'value': require( '@stdlib/math/base/dist/hypergeometric/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.cdf',
	'path': '@stdlib/math/base/dist/invgamma/cdf',
	'value': require( '@stdlib/math/base/dist/invgamma/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.entropy',
	'path': '@stdlib/math/base/dist/invgamma/entropy',
	'value': require( '@stdlib/math/base/dist/invgamma/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.kurtosis',
	'path': '@stdlib/math/base/dist/invgamma/kurtosis',
	'value': require( '@stdlib/math/base/dist/invgamma/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.mean',
	'path': '@stdlib/math/base/dist/invgamma/mean',
	'value': require( '@stdlib/math/base/dist/invgamma/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.mode',
	'path': '@stdlib/math/base/dist/invgamma/mode',
	'value': require( '@stdlib/math/base/dist/invgamma/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.pdf',
	'path': '@stdlib/math/base/dist/invgamma/pdf',
	'value': require( '@stdlib/math/base/dist/invgamma/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.quantile',
	'path': '@stdlib/math/base/dist/invgamma/quantile',
	'value': require( '@stdlib/math/base/dist/invgamma/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.skewness',
	'path': '@stdlib/math/base/dist/invgamma/skewness',
	'value': require( '@stdlib/math/base/dist/invgamma/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.invgamma.variance',
	'path': '@stdlib/math/base/dist/invgamma/variance',
	'value': require( '@stdlib/math/base/dist/invgamma/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.cdf',
	'path': '@stdlib/math/base/dist/laplace/cdf',
	'value': require( '@stdlib/math/base/dist/laplace/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.entropy',
	'path': '@stdlib/math/base/dist/laplace/entropy',
	'value': require( '@stdlib/math/base/dist/laplace/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.kurtosis',
	'path': '@stdlib/math/base/dist/laplace/kurtosis',
	'value': require( '@stdlib/math/base/dist/laplace/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.logcdf',
	'path': '@stdlib/math/base/dist/laplace/logcdf',
	'value': require( '@stdlib/math/base/dist/laplace/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.logpdf',
	'path': '@stdlib/math/base/dist/laplace/logpdf',
	'value': require( '@stdlib/math/base/dist/laplace/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.mean',
	'path': '@stdlib/math/base/dist/laplace/mean',
	'value': require( '@stdlib/math/base/dist/laplace/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.median',
	'path': '@stdlib/math/base/dist/laplace/median',
	'value': require( '@stdlib/math/base/dist/laplace/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.mgf',
	'path': '@stdlib/math/base/dist/laplace/mgf',
	'value': require( '@stdlib/math/base/dist/laplace/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.mode',
	'path': '@stdlib/math/base/dist/laplace/mode',
	'value': require( '@stdlib/math/base/dist/laplace/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.pdf',
	'path': '@stdlib/math/base/dist/laplace/pdf',
	'value': require( '@stdlib/math/base/dist/laplace/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.quantile',
	'path': '@stdlib/math/base/dist/laplace/quantile',
	'value': require( '@stdlib/math/base/dist/laplace/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.skewness',
	'path': '@stdlib/math/base/dist/laplace/skewness',
	'value': require( '@stdlib/math/base/dist/laplace/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.laplace.variance',
	'path': '@stdlib/math/base/dist/laplace/variance',
	'value': require( '@stdlib/math/base/dist/laplace/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.cdf',
	'path': '@stdlib/math/base/dist/logistic/cdf',
	'value': require( '@stdlib/math/base/dist/logistic/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.entropy',
	'path': '@stdlib/math/base/dist/logistic/entropy',
	'value': require( '@stdlib/math/base/dist/logistic/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.kurtosis',
	'path': '@stdlib/math/base/dist/logistic/kurtosis',
	'value': require( '@stdlib/math/base/dist/logistic/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.logcdf',
	'path': '@stdlib/math/base/dist/logistic/logcdf',
	'value': require( '@stdlib/math/base/dist/logistic/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.logpdf',
	'path': '@stdlib/math/base/dist/logistic/logpdf',
	'value': require( '@stdlib/math/base/dist/logistic/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.mean',
	'path': '@stdlib/math/base/dist/logistic/mean',
	'value': require( '@stdlib/math/base/dist/logistic/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.median',
	'path': '@stdlib/math/base/dist/logistic/median',
	'value': require( '@stdlib/math/base/dist/logistic/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.mgf',
	'path': '@stdlib/math/base/dist/logistic/mgf',
	'value': require( '@stdlib/math/base/dist/logistic/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.mode',
	'path': '@stdlib/math/base/dist/logistic/mode',
	'value': require( '@stdlib/math/base/dist/logistic/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.pdf',
	'path': '@stdlib/math/base/dist/logistic/pdf',
	'value': require( '@stdlib/math/base/dist/logistic/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.quantile',
	'path': '@stdlib/math/base/dist/logistic/quantile',
	'value': require( '@stdlib/math/base/dist/logistic/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.skewness',
	'path': '@stdlib/math/base/dist/logistic/skewness',
	'value': require( '@stdlib/math/base/dist/logistic/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.logistic.variance',
	'path': '@stdlib/math/base/dist/logistic/variance',
	'value': require( '@stdlib/math/base/dist/logistic/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.cdf',
	'path': '@stdlib/math/base/dist/lognormal/cdf',
	'value': require( '@stdlib/math/base/dist/lognormal/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.entropy',
	'path': '@stdlib/math/base/dist/lognormal/entropy',
	'value': require( '@stdlib/math/base/dist/lognormal/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.kurtosis',
	'path': '@stdlib/math/base/dist/lognormal/kurtosis',
	'value': require( '@stdlib/math/base/dist/lognormal/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.mean',
	'path': '@stdlib/math/base/dist/lognormal/mean',
	'value': require( '@stdlib/math/base/dist/lognormal/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.median',
	'path': '@stdlib/math/base/dist/lognormal/median',
	'value': require( '@stdlib/math/base/dist/lognormal/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.mode',
	'path': '@stdlib/math/base/dist/lognormal/mode',
	'value': require( '@stdlib/math/base/dist/lognormal/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.pdf',
	'path': '@stdlib/math/base/dist/lognormal/pdf',
	'value': require( '@stdlib/math/base/dist/lognormal/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.quantile',
	'path': '@stdlib/math/base/dist/lognormal/quantile',
	'value': require( '@stdlib/math/base/dist/lognormal/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.skewness',
	'path': '@stdlib/math/base/dist/lognormal/skewness',
	'value': require( '@stdlib/math/base/dist/lognormal/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.lognormal.variance',
	'path': '@stdlib/math/base/dist/lognormal/variance',
	'value': require( '@stdlib/math/base/dist/lognormal/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.cdf',
	'path': '@stdlib/math/base/dist/negative-binomial/cdf',
	'value': require( '@stdlib/math/base/dist/negative-binomial/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.kurtosis',
	'path': '@stdlib/math/base/dist/negative-binomial/kurtosis',
	'value': require( '@stdlib/math/base/dist/negative-binomial/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.mean',
	'path': '@stdlib/math/base/dist/negative-binomial/mean',
	'value': require( '@stdlib/math/base/dist/negative-binomial/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.mgf',
	'path': '@stdlib/math/base/dist/negative-binomial/mgf',
	'value': require( '@stdlib/math/base/dist/negative-binomial/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.mode',
	'path': '@stdlib/math/base/dist/negative-binomial/mode',
	'value': require( '@stdlib/math/base/dist/negative-binomial/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.pmf',
	'path': '@stdlib/math/base/dist/negative-binomial/pmf',
	'value': require( '@stdlib/math/base/dist/negative-binomial/pmf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.quantile',
	'path': '@stdlib/math/base/dist/negative-binomial/quantile',
	'value': require( '@stdlib/math/base/dist/negative-binomial/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.skewness',
	'path': '@stdlib/math/base/dist/negative-binomial/skewness',
	'value': require( '@stdlib/math/base/dist/negative-binomial/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.negativeBinomial.variance',
	'path': '@stdlib/math/base/dist/negative-binomial/variance',
	'value': require( '@stdlib/math/base/dist/negative-binomial/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.cdf',
	'path': '@stdlib/math/base/dist/normal/cdf',
	'value': require( '@stdlib/math/base/dist/normal/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.entropy',
	'path': '@stdlib/math/base/dist/normal/entropy',
	'value': require( '@stdlib/math/base/dist/normal/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.kurtosis',
	'path': '@stdlib/math/base/dist/normal/kurtosis',
	'value': require( '@stdlib/math/base/dist/normal/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.mean',
	'path': '@stdlib/math/base/dist/normal/mean',
	'value': require( '@stdlib/math/base/dist/normal/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.median',
	'path': '@stdlib/math/base/dist/normal/median',
	'value': require( '@stdlib/math/base/dist/normal/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.mgf',
	'path': '@stdlib/math/base/dist/normal/mgf',
	'value': require( '@stdlib/math/base/dist/normal/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.mode',
	'path': '@stdlib/math/base/dist/normal/mode',
	'value': require( '@stdlib/math/base/dist/normal/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.pdf',
	'path': '@stdlib/math/base/dist/normal/pdf',
	'value': require( '@stdlib/math/base/dist/normal/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.quantile',
	'path': '@stdlib/math/base/dist/normal/quantile',
	'value': require( '@stdlib/math/base/dist/normal/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.skewness',
	'path': '@stdlib/math/base/dist/normal/skewness',
	'value': require( '@stdlib/math/base/dist/normal/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.normal.variance',
	'path': '@stdlib/math/base/dist/normal/variance',
	'value': require( '@stdlib/math/base/dist/normal/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.pareto1.cdf',
	'path': '@stdlib/math/base/dist/pareto-type1/cdf',
	'value': require( '@stdlib/math/base/dist/pareto-type1/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.pareto1.pdf',
	'path': '@stdlib/math/base/dist/pareto-type1/pdf',
	'value': require( '@stdlib/math/base/dist/pareto-type1/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.pareto1.quantile',
	'path': '@stdlib/math/base/dist/pareto-type1/quantile',
	'value': require( '@stdlib/math/base/dist/pareto-type1/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.cdf',
	'path': '@stdlib/math/base/dist/poisson/cdf',
	'value': require( '@stdlib/math/base/dist/poisson/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.entropy',
	'path': '@stdlib/math/base/dist/poisson/entropy',
	'value': require( '@stdlib/math/base/dist/poisson/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.kurtosis',
	'path': '@stdlib/math/base/dist/poisson/kurtosis',
	'value': require( '@stdlib/math/base/dist/poisson/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.mean',
	'path': '@stdlib/math/base/dist/poisson/mean',
	'value': require( '@stdlib/math/base/dist/poisson/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.median',
	'path': '@stdlib/math/base/dist/poisson/median',
	'value': require( '@stdlib/math/base/dist/poisson/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.mgf',
	'path': '@stdlib/math/base/dist/poisson/mgf',
	'value': require( '@stdlib/math/base/dist/poisson/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.mode',
	'path': '@stdlib/math/base/dist/poisson/mode',
	'value': require( '@stdlib/math/base/dist/poisson/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.pmf',
	'path': '@stdlib/math/base/dist/poisson/pmf',
	'value': require( '@stdlib/math/base/dist/poisson/pmf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.quantile',
	'path': '@stdlib/math/base/dist/poisson/quantile',
	'value': require( '@stdlib/math/base/dist/poisson/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.skewness',
	'path': '@stdlib/math/base/dist/poisson/skewness',
	'value': require( '@stdlib/math/base/dist/poisson/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.poisson.variance',
	'path': '@stdlib/math/base/dist/poisson/variance',
	'value': require( '@stdlib/math/base/dist/poisson/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.cdf',
	'path': '@stdlib/math/base/dist/rayleigh/cdf',
	'value': require( '@stdlib/math/base/dist/rayleigh/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.entropy',
	'path': '@stdlib/math/base/dist/rayleigh/entropy',
	'value': require( '@stdlib/math/base/dist/rayleigh/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.kurtosis',
	'path': '@stdlib/math/base/dist/rayleigh/kurtosis',
	'value': require( '@stdlib/math/base/dist/rayleigh/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.logcdf',
	'path': '@stdlib/math/base/dist/rayleigh/logcdf',
	'value': require( '@stdlib/math/base/dist/rayleigh/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.logpdf',
	'path': '@stdlib/math/base/dist/rayleigh/logpdf',
	'value': require( '@stdlib/math/base/dist/rayleigh/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.mean',
	'path': '@stdlib/math/base/dist/rayleigh/mean',
	'value': require( '@stdlib/math/base/dist/rayleigh/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.median',
	'path': '@stdlib/math/base/dist/rayleigh/median',
	'value': require( '@stdlib/math/base/dist/rayleigh/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.mgf',
	'path': '@stdlib/math/base/dist/rayleigh/mgf',
	'value': require( '@stdlib/math/base/dist/rayleigh/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.mode',
	'path': '@stdlib/math/base/dist/rayleigh/mode',
	'value': require( '@stdlib/math/base/dist/rayleigh/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.pdf',
	'path': '@stdlib/math/base/dist/rayleigh/pdf',
	'value': require( '@stdlib/math/base/dist/rayleigh/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.quantile',
	'path': '@stdlib/math/base/dist/rayleigh/quantile',
	'value': require( '@stdlib/math/base/dist/rayleigh/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.skewness',
	'path': '@stdlib/math/base/dist/rayleigh/skewness',
	'value': require( '@stdlib/math/base/dist/rayleigh/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.rayleigh.variance',
	'path': '@stdlib/math/base/dist/rayleigh/variance',
	'value': require( '@stdlib/math/base/dist/rayleigh/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.cdf',
	'path': '@stdlib/math/base/dist/t/cdf',
	'value': require( '@stdlib/math/base/dist/t/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.entropy',
	'path': '@stdlib/math/base/dist/t/entropy',
	'value': require( '@stdlib/math/base/dist/t/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.kurtosis',
	'path': '@stdlib/math/base/dist/t/kurtosis',
	'value': require( '@stdlib/math/base/dist/t/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.mean',
	'path': '@stdlib/math/base/dist/t/mean',
	'value': require( '@stdlib/math/base/dist/t/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.median',
	'path': '@stdlib/math/base/dist/t/median',
	'value': require( '@stdlib/math/base/dist/t/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.mode',
	'path': '@stdlib/math/base/dist/t/mode',
	'value': require( '@stdlib/math/base/dist/t/mode' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.pdf',
	'path': '@stdlib/math/base/dist/t/pdf',
	'value': require( '@stdlib/math/base/dist/t/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.quantile',
	'path': '@stdlib/math/base/dist/t/quantile',
	'value': require( '@stdlib/math/base/dist/t/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.skewness',
	'path': '@stdlib/math/base/dist/t/skewness',
	'value': require( '@stdlib/math/base/dist/t/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.t.variance',
	'path': '@stdlib/math/base/dist/t/variance',
	'value': require( '@stdlib/math/base/dist/t/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.triangular.cdf',
	'path': '@stdlib/math/base/dist/triangular/cdf',
	'value': require( '@stdlib/math/base/dist/triangular/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.triangular.mgf',
	'path': '@stdlib/math/base/dist/triangular/mgf',
	'value': require( '@stdlib/math/base/dist/triangular/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.triangular.pdf',
	'path': '@stdlib/math/base/dist/triangular/pdf',
	'value': require( '@stdlib/math/base/dist/triangular/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.triangular.quantile',
	'path': '@stdlib/math/base/dist/triangular/quantile',
	'value': require( '@stdlib/math/base/dist/triangular/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.cdf',
	'path': '@stdlib/math/base/dist/uniform/cdf',
	'value': require( '@stdlib/math/base/dist/uniform/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.entropy',
	'path': '@stdlib/math/base/dist/uniform/entropy',
	'value': require( '@stdlib/math/base/dist/uniform/entropy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.kurtosis',
	'path': '@stdlib/math/base/dist/uniform/kurtosis',
	'value': require( '@stdlib/math/base/dist/uniform/kurtosis' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.logcdf',
	'path': '@stdlib/math/base/dist/uniform/logcdf',
	'value': require( '@stdlib/math/base/dist/uniform/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.logpdf',
	'path': '@stdlib/math/base/dist/uniform/logpdf',
	'value': require( '@stdlib/math/base/dist/uniform/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.mean',
	'path': '@stdlib/math/base/dist/uniform/mean',
	'value': require( '@stdlib/math/base/dist/uniform/mean' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.median',
	'path': '@stdlib/math/base/dist/uniform/median',
	'value': require( '@stdlib/math/base/dist/uniform/median' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.mgf',
	'path': '@stdlib/math/base/dist/uniform/mgf',
	'value': require( '@stdlib/math/base/dist/uniform/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.pdf',
	'path': '@stdlib/math/base/dist/uniform/pdf',
	'value': require( '@stdlib/math/base/dist/uniform/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.quantile',
	'path': '@stdlib/math/base/dist/uniform/quantile',
	'value': require( '@stdlib/math/base/dist/uniform/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.skewness',
	'path': '@stdlib/math/base/dist/uniform/skewness',
	'value': require( '@stdlib/math/base/dist/uniform/skewness' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.uniform.variance',
	'path': '@stdlib/math/base/dist/uniform/variance',
	'value': require( '@stdlib/math/base/dist/uniform/variance' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.weibull.cdf',
	'path': '@stdlib/math/base/dist/weibull/cdf',
	'value': require( '@stdlib/math/base/dist/weibull/cdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.weibull.logcdf',
	'path': '@stdlib/math/base/dist/weibull/logcdf',
	'value': require( '@stdlib/math/base/dist/weibull/logcdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.weibull.logpdf',
	'path': '@stdlib/math/base/dist/weibull/logpdf',
	'value': require( '@stdlib/math/base/dist/weibull/logpdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.weibull.mgf',
	'path': '@stdlib/math/base/dist/weibull/mgf',
	'value': require( '@stdlib/math/base/dist/weibull/mgf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.weibull.pdf',
	'path': '@stdlib/math/base/dist/weibull/pdf',
	'value': require( '@stdlib/math/base/dist/weibull/pdf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.dist.weibull.quantile',
	'path': '@stdlib/math/base/dist/weibull/quantile',
	'value': require( '@stdlib/math/base/dist/weibull/quantile' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.epsdiff',
	'path': '@stdlib/math/base/utils/float64-epsilon-difference',
	'value': require( '@stdlib/math/base/utils/float64-epsilon-difference' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/absolute-difference',
		'@stdlib/math/base/utils/relative-difference'
	]
});

ns.push({
	'alias': 'base.eta',
	'path': '@stdlib/math/base/special/dirichlet-eta',
	'value': require( '@stdlib/math/base/special/dirichlet-eta' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.erf',
	'path': '@stdlib/math/base/special/erf',
	'value': require( '@stdlib/math/base/special/erf' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/erfc',
		'@stdlib/math/base/special/erfinv',
		'@stdlib/math/base/special/erfcinv'
	]
});

ns.push({
	'alias': 'base.erfc',
	'path': '@stdlib/math/base/special/erfc',
	'value': require( '@stdlib/math/base/special/erfc' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/erf',
		'@stdlib/math/base/special/erfinv',
		'@stdlib/math/base/special/erfcinv'
	]
});

ns.push({
	'alias': 'base.erfcinv',
	'path': '@stdlib/math/base/special/erfcinv',
	'value': require( '@stdlib/math/base/special/erfcinv' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/erf',
		'@stdlib/math/base/special/erfc',
		'@stdlib/math/base/special/erfinv'
	]
});

ns.push({
	'alias': 'base.erfinv',
	'path': '@stdlib/math/base/special/erfinv',
	'value': require( '@stdlib/math/base/special/erfinv' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/erf',
		'@stdlib/math/base/special/erfc',
		'@stdlib/math/base/special/erfcinv'
	]
});

ns.push({
	'alias': 'base.evalpoly',
	'path': '@stdlib/math/base/tools/evalpoly',
	'value': require( '@stdlib/math/base/tools/evalpoly' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/tools/evalrational'
	]
});

ns.push({
	'alias': 'base.evalrational',
	'path': '@stdlib/math/base/tools/evalrational',
	'value': require( '@stdlib/math/base/tools/evalrational' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/tools/evalpoly'
	]
});

ns.push({
	'alias': 'base.exp',
	'path': '@stdlib/math/base/special/exp',
	'value': require( '@stdlib/math/base/special/exp' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp10',
		'@stdlib/math/base/special/exp2',
		'@stdlib/math/base/special/expm1',
		'@stdlib/math/base/special/ln'
	]
});

ns.push({
	'alias': 'base.exponent',
	'path': '@stdlib/math/base/utils/float64-exponent',
	'value': require( '@stdlib/math/base/utils/float64-exponent' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-exponent'
	]
});

ns.push({
	'alias': 'base.exponentf',
	'path': '@stdlib/math/base/utils/float32-exponent',
	'value': require( '@stdlib/math/base/utils/float32-exponent' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-exponent'
	]
});

ns.push({
	'alias': 'base.exp10',
	'path': '@stdlib/math/base/special/exp10',
	'value': require( '@stdlib/math/base/special/exp10' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp',
		'@stdlib/math/base/special/exp2'
	]
});

ns.push({
	'alias': 'base.exp2',
	'path': '@stdlib/math/base/special/exp2',
	'value': require( '@stdlib/math/base/special/exp2' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp',
		'@stdlib/math/base/special/exp10'
	]
});

ns.push({
	'alias': 'base.expm1',
	'path': '@stdlib/math/base/special/expm1',
	'value': require( '@stdlib/math/base/special/expm1' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp'
	]
});

ns.push({
	'alias': 'base.factorial',
	'path': '@stdlib/math/base/special/factorial',
	'value': require( '@stdlib/math/base/special/factorial' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/factorialln'
	]
});

ns.push({
	'alias': 'base.factorialln',
	'path': '@stdlib/math/base/special/factorialln',
	'value': require( '@stdlib/math/base/special/factorialln' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/factorial'
	]
});

ns.push({
	'alias': 'base.flipsign',
	'path': '@stdlib/math/base/special/flipsign',
	'value': require( '@stdlib/math/base/special/flipsign' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/copysign'
	]
});

ns.push({
	'alias': 'base.floor',
	'path': '@stdlib/math/base/special/floor',
	'value': require( '@stdlib/math/base/special/floor' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/round'
	]
});

ns.push({
	'alias': 'base.floor10',
	'path': '@stdlib/math/base/special/floor10',
	'value': require( '@stdlib/math/base/special/floor10' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil10',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/floor2',
		'@stdlib/math/base/special/round10'
	]
});

ns.push({
	'alias': 'base.floor2',
	'path': '@stdlib/math/base/special/floor2',
	'value': require( '@stdlib/math/base/special/floor2' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil2',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/floor10',
		'@stdlib/math/base/special/round2'
	]
});

ns.push({
	'alias': 'base.floorb',
	'path': '@stdlib/math/base/special/floorb',
	'value': require( '@stdlib/math/base/special/floorb' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceilb',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/floorn',
		'@stdlib/math/base/special/roundb'
	]
});

ns.push({
	'alias': 'base.floorn',
	'path': '@stdlib/math/base/special/floorn',
	'value': require( '@stdlib/math/base/special/floorn' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceiln',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/floorb',
		'@stdlib/math/base/special/roundn'
	]
});

ns.push({
	'alias': 'base.floorsd',
	'path': '@stdlib/math/base/special/floorsd',
	'value': require( '@stdlib/math/base/special/floorsd' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceilsd',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/roundsd',
		'@stdlib/math/base/special/truncsd'
	]
});

ns.push({
	'alias': 'base.float32ToInt32',
	'path': '@stdlib/math/base/utils/float32-to-int32',
	'value': require( '@stdlib/math/base/utils/float32-to-int32' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-to-uint32'
	]
});

ns.push({
	'alias': 'base.float32ToUint32',
	'path': '@stdlib/math/base/utils/float32-to-uint32',
	'value': require( '@stdlib/math/base/utils/float32-to-uint32' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-to-int32'
	]
});

ns.push({
	'alias': 'base.float64ToFloat32',
	'path': '@stdlib/math/base/utils/float64-to-float32',
	'value': require( '@stdlib/math/base/utils/float64-to-float32' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.float64ToInt32',
	'path': '@stdlib/math/base/utils/float64-to-int32',
	'value': require( '@stdlib/math/base/utils/float64-to-int32' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-to-uint32'
	]
});

ns.push({
	'alias': 'base.float64ToUint32',
	'path': '@stdlib/math/base/utils/float64-to-uint32',
	'value': require( '@stdlib/math/base/utils/float64-to-uint32' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-to-int32'
	]
});

ns.push({
	'alias': 'base.frexp',
	'path': '@stdlib/math/base/special/frexp',
	'value': require( '@stdlib/math/base/special/frexp' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ldexp'
	]
});

ns.push({
	'alias': 'base.fromBinaryString',
	'path': '@stdlib/math/base/utils/float64-from-binary-string',
	'value': require( '@stdlib/math/base/utils/float64-from-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-from-binary-string',
		'@stdlib/math/base/utils/float64-to-binary-string'
	]
});

ns.push({
	'alias': 'base.fromBinaryStringf',
	'path': '@stdlib/math/base/utils/float32-from-binary-string',
	'value': require( '@stdlib/math/base/utils/float32-from-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-to-binary-string',
		'@stdlib/math/base/utils/float64-from-binary-string'
	]
});

ns.push({
	'alias': 'base.fromBinaryStringUint16',
	'path': '@stdlib/math/base/utils/uint16-from-binary-string',
	'value': require( '@stdlib/math/base/utils/uint16-from-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/uint16-to-binary-string',
		'@stdlib/math/base/utils/uint32-from-binary-string',
		'@stdlib/math/base/utils/uint8-from-binary-string'
	]
});

ns.push({
	'alias': 'base.fromBinaryStringUint32',
	'path': '@stdlib/math/base/utils/uint32-from-binary-string',
	'value': require( '@stdlib/math/base/utils/uint32-from-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/uint16-from-binary-string',
		'@stdlib/math/base/utils/uint32-to-binary-string',
		'@stdlib/math/base/utils/uint8-from-binary-string'
	]
});

ns.push({
	'alias': 'base.fromBinaryStringUint8',
	'path': '@stdlib/math/base/utils/uint8-from-binary-string',
	'value': require( '@stdlib/math/base/utils/uint8-from-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/uint16-from-binary-string',
		'@stdlib/math/base/utils/uint32-from-binary-string',
		'@stdlib/math/base/utils/uint8-to-binary-string'
	]
});

ns.push({
	'alias': 'base.fromWordf',
	'path': '@stdlib/math/base/utils/float32-from-word',
	'value': require( '@stdlib/math/base/utils/float32-from-word' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-from-words'
	]
});

ns.push({
	'alias': 'base.fromWords',
	'path': '@stdlib/math/base/utils/float64-from-words',
	'value': require( '@stdlib/math/base/utils/float64-from-words' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-from-word'
	]
});

ns.push({
	'alias': 'base.gamma',
	'path': '@stdlib/math/base/special/gamma',
	'value': require( '@stdlib/math/base/special/gamma' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/gammainc',
		'@stdlib/math/base/special/gammaincinv',
		'@stdlib/math/base/special/gammaln'
	]
});

ns.push({
	'alias': 'base.gammainc',
	'path': '@stdlib/math/base/special/gammainc',
	'value': require( '@stdlib/math/base/special/gammainc' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/gamma',
		'@stdlib/math/base/special/gammaincinv',
		'@stdlib/math/base/special/gammaln'
	]
});

ns.push({
	'alias': 'base.gammaincinv',
	'path': '@stdlib/math/base/special/gammaincinv',
	'value': require( '@stdlib/math/base/special/gammaincinv' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/gamma',
		'@stdlib/math/base/special/gammainc',
		'@stdlib/math/base/special/gammaln'
	]
});

ns.push({
	'alias': 'base.gammaln',
	'path': '@stdlib/math/base/special/gammaln',
	'value': require( '@stdlib/math/base/special/gammaln' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/gamma',
		'@stdlib/math/base/special/gammainc',
		'@stdlib/math/base/special/gammaincinv'
	]
});

ns.push({
	'alias': 'base.gcd',
	'path': '@stdlib/math/base/special/gcd',
	'value': require( '@stdlib/math/base/special/gcd' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/lcm'
	]
});

ns.push({
	'alias': 'base.getHighWord',
	'path': '@stdlib/math/base/utils/float64-get-high-word',
	'value': require( '@stdlib/math/base/utils/float64-get-high-word' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-get-low-word',
		'@stdlib/math/base/utils/float64-set-high-word'
	]
});

ns.push({
	'alias': 'base.getLowWord',
	'path': '@stdlib/math/base/utils/float64-get-low-word',
	'value': require( '@stdlib/math/base/utils/float64-get-low-word' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-get-high-word',
		'@stdlib/math/base/utils/float64-set-high-word'
	]
});

ns.push({
	'alias': 'base.hypot',
	'path': '@stdlib/math/base/special/hypot',
	'value': require( '@stdlib/math/base/special/hypot' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.int32ToUint32',
	'path': '@stdlib/math/base/utils/int32-to-uint32',
	'value': require( '@stdlib/math/base/utils/int32-to-uint32' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/uint32-to-int32'
	]
});

ns.push({
	'alias': 'base.isEven',
	'path': '@stdlib/math/base/assert/is-even',
	'value': require( '@stdlib/math/base/assert/is-even' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-odd'
	]
});

ns.push({
	'alias': 'base.isEvenInt32',
	'path': '@stdlib/math/base/assert/int32-is-even',
	'value': require( '@stdlib/math/base/assert/int32-is-even' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-even',
		'@stdlib/math/base/assert/int32-is-odd'
	]
});

ns.push({
	'alias': 'base.isFinite',
	'path': '@stdlib/math/base/assert/is-finite',
	'value': require( '@stdlib/math/base/assert/is-finite' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-infinite'
	]
});

ns.push({
	'alias': 'base.isInfinite',
	'path': '@stdlib/math/base/assert/is-infinite',
	'value': require( '@stdlib/math/base/assert/is-infinite' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-finite'
	]
});

ns.push({
	'alias': 'base.isInteger',
	'path': '@stdlib/math/base/assert/is-integer',
	'value': require( '@stdlib/math/base/assert/is-integer' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.isnan',
	'path': '@stdlib/math/base/assert/is-nan',
	'value': require( '@stdlib/math/base/assert/is-nan' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.isNegativeInteger',
	'path': '@stdlib/math/base/assert/is-negative-integer',
	'value': require( '@stdlib/math/base/assert/is-negative-integer' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-integer',
		'@stdlib/math/base/assert/is-nonnegative-integer',
		'@stdlib/math/base/assert/is-nonpositive-integer',
		'@stdlib/math/base/assert/is-positive-integer'
	]
});

ns.push({
	'alias': 'base.isNegativeZero',
	'path': '@stdlib/math/base/assert/is-negative-zero',
	'value': require( '@stdlib/math/base/assert/is-negative-zero' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-positive-zero'
	]
});

ns.push({
	'alias': 'base.isNonNegativeInteger',
	'path': '@stdlib/math/base/assert/is-nonnegative-integer',
	'value': require( '@stdlib/math/base/assert/is-nonnegative-integer' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-integer',
		'@stdlib/math/base/assert/is-negative-integer',
		'@stdlib/math/base/assert/is-nonpositive-integer',
		'@stdlib/math/base/assert/is-positive-integer'
	]
});

ns.push({
	'alias': 'base.isNonPositiveInteger',
	'path': '@stdlib/math/base/assert/is-nonpositive-integer',
	'value': require( '@stdlib/math/base/assert/is-nonpositive-integer' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-integer',
		'@stdlib/math/base/assert/is-negative-integer',
		'@stdlib/math/base/assert/is-nonnegative-integer',
		'@stdlib/math/base/assert/is-positive-integer'
	]
});

ns.push({
	'alias': 'base.isOdd',
	'path': '@stdlib/math/base/assert/is-odd',
	'value': require( '@stdlib/math/base/assert/is-odd' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-even'
	]
});

ns.push({
	'alias': 'base.isOddInt32',
	'path': '@stdlib/math/base/assert/int32-is-odd',
	'value': require( '@stdlib/math/base/assert/int32-is-odd' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/int32-is-even',
		'@stdlib/math/base/assert/is-odd'
	]
});

ns.push({
	'alias': 'base.isPositiveInteger',
	'path': '@stdlib/math/base/assert/is-positive-integer',
	'value': require( '@stdlib/math/base/assert/is-positive-integer' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-integer',
		'@stdlib/math/base/assert/is-negative-integer',
		'@stdlib/math/base/assert/is-nonnegative-integer',
		'@stdlib/math/base/assert/is-nonpositive-integer'
	]
});

ns.push({
	'alias': 'base.isPositiveZero',
	'path': '@stdlib/math/base/assert/is-positive-zero',
	'value': require( '@stdlib/math/base/assert/is-positive-zero' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/assert/is-negative-zero'
	]
});

ns.push({
	'alias': 'base.isPow2Uint32',
	'path': '@stdlib/math/base/assert/uint32-is-pow2',
	'value': require( '@stdlib/math/base/assert/uint32-is-pow2' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.isProbability',
	'path': '@stdlib/math/base/assert/is-probability',
	'value': require( '@stdlib/math/base/assert/is-probability' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.isSafeInteger',
	'path': '@stdlib/math/base/assert/is-safe-integer',
	'value': require( '@stdlib/math/base/assert/is-safe-integer' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.lcm',
	'path': '@stdlib/math/base/special/lcm',
	'value': require( '@stdlib/math/base/special/lcm' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/gcd'
	]
});

ns.push({
	'alias': 'base.ldexp',
	'path': '@stdlib/math/base/special/ldexp',
	'value': require( '@stdlib/math/base/special/ldexp' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/frexp'
	]
});

ns.push({
	'alias': 'base.ln',
	'path': '@stdlib/math/base/special/ln',
	'value': require( '@stdlib/math/base/special/ln' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp',
		'@stdlib/math/base/special/log10',
		'@stdlib/math/base/special/log1p',
		'@stdlib/math/base/special/log2'
	]
});

ns.push({
	'alias': 'base.log',
	'path': '@stdlib/math/base/special/log',
	'value': require( '@stdlib/math/base/special/log' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp',
		'@stdlib/math/base/special/ln',
		'@stdlib/math/base/special/log10',
		'@stdlib/math/base/special/log1p',
		'@stdlib/math/base/special/log2'
	]
});

ns.push({
	'alias': 'base.log10',
	'path': '@stdlib/math/base/special/log10',
	'value': require( '@stdlib/math/base/special/log10' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp10',
		'@stdlib/math/base/special/ln',
		'@stdlib/math/base/special/log'
	]
});

ns.push({
	'alias': 'base.log1p',
	'path': '@stdlib/math/base/special/log1p',
	'value': require( '@stdlib/math/base/special/log1p' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ln',
		'@stdlib/math/base/special/log'
	]
});

ns.push({
	'alias': 'base.log2',
	'path': '@stdlib/math/base/special/log2',
	'value': require( '@stdlib/math/base/special/log2' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp2',
		'@stdlib/math/base/special/ln',
		'@stdlib/math/base/special/log'
	]
});

ns.push({
	'alias': 'base.logit',
	'path': '@stdlib/math/base/special/logit',
	'value': require( '@stdlib/math/base/special/logit' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.max',
	'path': '@stdlib/math/base/special/max',
	'value': require( '@stdlib/math/base/special/max' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/min'
	]
});

ns.push({
	'alias': 'base.min',
	'path': '@stdlib/math/base/special/min',
	'value': require( '@stdlib/math/base/special/min' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/max'
	]
});

ns.push({
	'alias': 'base.modf',
	'path': '@stdlib/math/base/special/modf',
	'value': require( '@stdlib/math/base/special/modf' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.normalize',
	'path': '@stdlib/math/base/utils/float64-normalize',
	'value': require( '@stdlib/math/base/utils/float64-normalize' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-normalize'
	]
});

ns.push({
	'alias': 'base.normalizef',
	'path': '@stdlib/math/base/utils/float32-normalize',
	'value': require( '@stdlib/math/base/utils/float32-normalize' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-normalize'
	]
});

ns.push({
	'alias': 'base.pdiff',
	'path': '@stdlib/math/base/special/pdiff',
	'value': require( '@stdlib/math/base/special/pdiff' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.pow',
	'path': '@stdlib/math/base/special/pow',
	'value': require( '@stdlib/math/base/special/pow' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/exp',
		'@stdlib/math/base/special/powm1'
	]
});

ns.push({
	'alias': 'base.powm1',
	'path': '@stdlib/math/base/special/powm1',
	'value': require( '@stdlib/math/base/special/powm1' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/pow'
	]
});

ns.push({
	'alias': 'base.rad2deg',
	'path': '@stdlib/math/base/special/rad2deg',
	'value': require( '@stdlib/math/base/special/rad2deg' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/deg2rad'
	]
});

ns.push({
	'alias': 'base.random.arcsine',
	'path': '@stdlib/math/base/random/arcsine',
	'value': require( '@stdlib/math/base/random/arcsine' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/random/beta'
	]
});

ns.push({
	'alias': 'base.random.beta',
	'path': '@stdlib/math/base/random/beta',
	'value': require( '@stdlib/math/base/random/beta' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.binomial',
	'path': '@stdlib/math/base/random/binomial',
	'value': require( '@stdlib/math/base/random/binomial' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.boxMuller',
	'path': '@stdlib/math/base/random/box-muller',
	'value': require( '@stdlib/math/base/random/box-muller' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.cauchy',
	'path': '@stdlib/math/base/random/cauchy',
	'value': require( '@stdlib/math/base/random/cauchy' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.chisquare',
	'path': '@stdlib/math/base/random/chisquare',
	'value': require( '@stdlib/math/base/random/chisquare' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.erlang',
	'path': '@stdlib/math/base/random/erlang',
	'value': require( '@stdlib/math/base/random/erlang' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.exponential',
	'path': '@stdlib/math/base/random/exponential',
	'value': require( '@stdlib/math/base/random/exponential' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.f',
	'path': '@stdlib/math/base/random/f',
	'value': require( '@stdlib/math/base/random/f' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.gamma',
	'path': '@stdlib/math/base/random/gamma',
	'value': require( '@stdlib/math/base/random/gamma' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.geometric',
	'path': '@stdlib/math/base/random/geometric',
	'value': require( '@stdlib/math/base/random/geometric' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.gumbel',
	'path': '@stdlib/math/base/random/gumbel',
	'value': require( '@stdlib/math/base/random/gumbel' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.hypergeometric',
	'path': '@stdlib/math/base/random/hypergeometric',
	'value': require( '@stdlib/math/base/random/hypergeometric' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.improvedZiggurat',
	'path': '@stdlib/math/base/random/improved-ziggurat',
	'value': require( '@stdlib/math/base/random/improved-ziggurat' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.invgamma',
	'path': '@stdlib/math/base/random/invgamma',
	'value': require( '@stdlib/math/base/random/invgamma' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.laplace',
	'path': '@stdlib/math/base/random/laplace',
	'value': require( '@stdlib/math/base/random/laplace' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.logistic',
	'path': '@stdlib/math/base/random/logistic',
	'value': require( '@stdlib/math/base/random/logistic' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.lognormal',
	'path': '@stdlib/math/base/random/lognormal',
	'value': require( '@stdlib/math/base/random/lognormal' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.minstd',
	'path': '@stdlib/math/base/random/minstd',
	'value': require( '@stdlib/math/base/random/minstd' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.minstdShuffle',
	'path': '@stdlib/math/base/random/minstd-shuffle',
	'value': require( '@stdlib/math/base/random/minstd-shuffle' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.negativeBinomial',
	'path': '@stdlib/math/base/random/negative-binomial',
	'value': require( '@stdlib/math/base/random/negative-binomial' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.normal',
	'path': '@stdlib/math/base/random/normal',
	'value': require( '@stdlib/math/base/random/normal' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.pareto1',
	'path': '@stdlib/math/base/random/pareto-type1',
	'value': require( '@stdlib/math/base/random/pareto-type1' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.poisson',
	'path': '@stdlib/math/base/random/poisson',
	'value': require( '@stdlib/math/base/random/poisson' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.randn',
	'path': '@stdlib/math/base/random/randn',
	'value': require( '@stdlib/math/base/random/randn' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.randu',
	'path': '@stdlib/math/base/random/randu',
	'value': require( '@stdlib/math/base/random/randu' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.rayleigh',
	'path': '@stdlib/math/base/random/rayleigh',
	'value': require( '@stdlib/math/base/random/rayleigh' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.t',
	'path': '@stdlib/math/base/random/t',
	'value': require( '@stdlib/math/base/random/t' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.triangular',
	'path': '@stdlib/math/base/random/triangular',
	'value': require( '@stdlib/math/base/random/triangular' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.uniform',
	'path': '@stdlib/math/base/random/uniform',
	'value': require( '@stdlib/math/base/random/uniform' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.random.weibull',
	'path': '@stdlib/math/base/random/weibull',
	'value': require( '@stdlib/math/base/random/weibull' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.reldiff',
	'path': '@stdlib/math/base/utils/relative-difference',
	'value': require( '@stdlib/math/base/utils/relative-difference' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/absolute-difference',
		'@stdlib/math/base/utils/float64-epsilon-difference'
	]
});

ns.push({
	'alias': 'base.rotl32',
	'path': '@stdlib/math/base/utils/uint32-rotl',
	'value': require( '@stdlib/math/base/utils/uint32-rotl' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/uint32-rotr'
	]
});

ns.push({
	'alias': 'base.rotr32',
	'path': '@stdlib/math/base/utils/uint32-rotr',
	'value': require( '@stdlib/math/base/utils/uint32-rotr' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/uint32-rotl'
	]
});

ns.push({
	'alias': 'base.round',
	'path': '@stdlib/math/base/special/round',
	'value': require( '@stdlib/math/base/special/round' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/roundn',
		'@stdlib/math/base/special/trunc'
	]
});

ns.push({
	'alias': 'base.round10',
	'path': '@stdlib/math/base/special/round10',
	'value': require( '@stdlib/math/base/special/round10' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil10',
		'@stdlib/math/base/special/floor10',
		'@stdlib/math/base/special/round',
		'@stdlib/math/base/special/round2'
	]
});

ns.push({
	'alias': 'base.round2',
	'path': '@stdlib/math/base/special/round2',
	'value': require( '@stdlib/math/base/special/round2' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil2',
		'@stdlib/math/base/special/floor2',
		'@stdlib/math/base/special/round',
		'@stdlib/math/base/special/round10'
	]
});

ns.push({
	'alias': 'base.roundb',
	'path': '@stdlib/math/base/special/roundb',
	'value': require( '@stdlib/math/base/special/roundb' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceilb',
		'@stdlib/math/base/special/floorb',
		'@stdlib/math/base/special/round',
		'@stdlib/math/base/special/roundn'
	]
});

ns.push({
	'alias': 'base.roundn',
	'path': '@stdlib/math/base/special/roundn',
	'value': require( '@stdlib/math/base/special/roundn' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceiln',
		'@stdlib/math/base/special/floorn',
		'@stdlib/math/base/special/round',
		'@stdlib/math/base/special/roundb'
	]
});

ns.push({
	'alias': 'base.roundsd',
	'path': '@stdlib/math/base/special/roundsd',
	'value': require( '@stdlib/math/base/special/roundsd' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceilsd',
		'@stdlib/math/base/special/floorsd',
		'@stdlib/math/base/special/round',
		'@stdlib/math/base/special/truncsd'
	]
});

ns.push({
	'alias': 'base.sasum',
	'path': '@stdlib/math/base/blas/sasum',
	'value': require( '@stdlib/math/base/blas/sasum' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/dasum'
	]
});

ns.push({
	'alias': 'base.saxpy',
	'path': '@stdlib/math/base/blas/saxpy',
	'value': require( '@stdlib/math/base/blas/saxpy' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/daxpy'
	]
});

ns.push({
	'alias': 'base.scopy',
	'path': '@stdlib/math/base/blas/scopy',
	'value': require( '@stdlib/math/base/blas/scopy' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/blas/dcopy'
	]
});

ns.push({
	'alias': 'base.setHighWord',
	'path': '@stdlib/math/base/utils/float64-set-high-word',
	'value': require( '@stdlib/math/base/utils/float64-set-high-word' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-get-high-word',
		'@stdlib/math/base/utils/float64-set-low-word'
	]
});

ns.push({
	'alias': 'base.setLowWord',
	'path': '@stdlib/math/base/utils/float64-set-low-word',
	'value': require( '@stdlib/math/base/utils/float64-set-low-word' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-get-low-word',
		'@stdlib/math/base/utils/float64-set-high-word'
	]
});

ns.push({
	'alias': 'base.signbit',
	'path': '@stdlib/math/base/utils/float64-signbit',
	'value': require( '@stdlib/math/base/utils/float64-signbit' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-signbit'
	]
});

ns.push({
	'alias': 'base.signbitf',
	'path': '@stdlib/math/base/utils/float32-signbit',
	'value': require( '@stdlib/math/base/utils/float32-signbit' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-signbit'
	]
});

ns.push({
	'alias': 'base.significandf',
	'path': '@stdlib/math/base/utils/float32-significand',
	'value': require( '@stdlib/math/base/utils/float32-significand' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.signum',
	'path': '@stdlib/math/base/special/signum',
	'value': require( '@stdlib/math/base/special/signum' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.sin',
	'path': '@stdlib/math/base/special/sin',
	'value': require( '@stdlib/math/base/special/sin' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cos',
		'@stdlib/math/base/special/sinpi',
		'@stdlib/math/base/special/tan'
	]
});

ns.push({
	'alias': 'base.sinc',
	'path': '@stdlib/math/base/special/sinc',
	'value': require( '@stdlib/math/base/special/sinc' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/sin'
	]
});

ns.push({
	'alias': 'base.sinh',
	'path': '@stdlib/math/base/special/sinh',
	'value': require( '@stdlib/math/base/special/sinh' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cosh',
		'@stdlib/math/base/special/sin',
		'@stdlib/math/base/special/tanh'
	]
});

ns.push({
	'alias': 'base.sinpi',
	'path': '@stdlib/math/base/special/sinpi',
	'value': require( '@stdlib/math/base/special/sinpi' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/sin'
	]
});

ns.push({
	'alias': 'base.sqrt',
	'path': '@stdlib/math/base/special/sqrt',
	'value': require( '@stdlib/math/base/special/sqrt' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.sqrt1pm1',
	'path': '@stdlib/math/base/special/sqrt1pm1',
	'value': require( '@stdlib/math/base/special/sqrt1pm1' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/sqrt'
	]
});

ns.push({
	'alias': 'base.sumSeries',
	'path': '@stdlib/math/base/tools/sum-series',
	'value': require( '@stdlib/math/base/tools/sum-series' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.tan',
	'path': '@stdlib/math/base/special/tan',
	'value': require( '@stdlib/math/base/special/tan' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cos',
		'@stdlib/math/base/special/sin'
	]
});

ns.push({
	'alias': 'base.tanh',
	'path': '@stdlib/math/base/special/tanh',
	'value': require( '@stdlib/math/base/special/tanh' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/cosh',
		'@stdlib/math/base/special/sinh',
		'@stdlib/math/base/special/tan'
	]
});

ns.push({
	'alias': 'base.toBinaryString',
	'path': '@stdlib/math/base/utils/float64-to-binary-string',
	'value': require( '@stdlib/math/base/utils/float64-to-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-from-binary-string',
		'@stdlib/math/base/utils/float32-to-binary-string'
	]
});

ns.push({
	'alias': 'base.toBinaryStringf',
	'path': '@stdlib/math/base/utils/float32-to-binary-string',
	'value': require( '@stdlib/math/base/utils/float32-to-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-from-binary-string',
		'@stdlib/math/base/utils/float64-to-binary-string'
	]
});

ns.push({
	'alias': 'base.toBinaryStringUint16',
	'path': '@stdlib/math/base/utils/uint16-to-binary-string',
	'value': require( '@stdlib/math/base/utils/uint16-to-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-to-binary-string'
	]
});

ns.push({
	'alias': 'base.toBinaryStringUint32',
	'path': '@stdlib/math/base/utils/uint32-to-binary-string',
	'value': require( '@stdlib/math/base/utils/uint32-to-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-to-binary-string'
	]
});

ns.push({
	'alias': 'base.toBinaryStringUint8',
	'path': '@stdlib/math/base/utils/uint8-to-binary-string',
	'value': require( '@stdlib/math/base/utils/uint8-to-binary-string' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-to-binary-string'
	]
});

ns.push({
	'alias': 'base.toWordf',
	'path': '@stdlib/math/base/utils/float32-to-word',
	'value': require( '@stdlib/math/base/utils/float32-to-word' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float32-from-word',
		'@stdlib/math/base/utils/float64-to-words'
	]
});

ns.push({
	'alias': 'base.toWords',
	'path': '@stdlib/math/base/utils/float64-to-words',
	'value': require( '@stdlib/math/base/utils/float64-to-words' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/utils/float64-from-words',
		'@stdlib/math/base/utils/float32-to-word'
	]
});

ns.push({
	'alias': 'base.trunc',
	'path': '@stdlib/math/base/special/trunc',
	'value': require( '@stdlib/math/base/special/trunc' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil',
		'@stdlib/math/base/special/floor',
		'@stdlib/math/base/special/round'
	]
});

ns.push({
	'alias': 'base.trunc10',
	'path': '@stdlib/math/base/special/trunc10',
	'value': require( '@stdlib/math/base/special/trunc10' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil10',
		'@stdlib/math/base/special/floor10',
		'@stdlib/math/base/special/round10',
		'@stdlib/math/base/special/trunc',
		'@stdlib/math/base/special/trunc2'
	]
});

ns.push({
	'alias': 'base.trunc2',
	'path': '@stdlib/math/base/special/trunc2',
	'value': require( '@stdlib/math/base/special/trunc2' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceil2',
		'@stdlib/math/base/special/floor2',
		'@stdlib/math/base/special/round2',
		'@stdlib/math/base/special/trunc',
		'@stdlib/math/base/special/trunc10'
	]
});

ns.push({
	'alias': 'base.truncb',
	'path': '@stdlib/math/base/special/truncb',
	'value': require( '@stdlib/math/base/special/truncb' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceilb',
		'@stdlib/math/base/special/floorb',
		'@stdlib/math/base/special/roundb',
		'@stdlib/math/base/special/trunc',
		'@stdlib/math/base/special/truncn'
	]
});

ns.push({
	'alias': 'base.truncn',
	'path': '@stdlib/math/base/special/truncn',
	'value': require( '@stdlib/math/base/special/truncn' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceiln',
		'@stdlib/math/base/special/floorn',
		'@stdlib/math/base/special/roundn',
		'@stdlib/math/base/special/trunc',
		'@stdlib/math/base/special/truncb'
	]
});

ns.push({
	'alias': 'base.truncsd',
	'path': '@stdlib/math/base/special/truncsd',
	'value': require( '@stdlib/math/base/special/truncsd' ),
	'type': 'Function',
	'related': [
		'@stdlib/math/base/special/ceilsd',
		'@stdlib/math/base/special/floorsd',
		'@stdlib/math/base/special/roundsd',
		'@stdlib/math/base/special/trunc'
	]
});

ns.push({
	'alias': 'base.uint32ToInt32',
	'path': '@stdlib/math/base/utils/uint32-to-int32',
	'value': require( '@stdlib/math/base/utils/uint32-to-int32' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'base.zeta',
	'path': '@stdlib/math/base/special/riemann-zeta',
	'value': require( '@stdlib/math/base/special/riemann-zeta' ),
	'type': 'Function',
	'related': []
});


// EXPORTS //

module.exports = ns;
