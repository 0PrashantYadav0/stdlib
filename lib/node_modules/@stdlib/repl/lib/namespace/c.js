'use strict';

/*
* When adding names to the namespace, ensure that they are added in alphabetical order according to alias (namespace key).
*/

var ns = [];

ns.push({
	'alias': 'capitalize',
	'path': '@stdlib/string/capitalize',
	'value': require( '@stdlib/string/capitalize' ),
	'type': 'Function',
	'related': [
		'@stdlib/string/uncapitalize',
		'@stdlib/string/uppercase'
	]
});

ns.push({
	'alias': 'CATALAN',
	'path': '@stdlib/math/constants/float64-catalan',
	'value': require( '@stdlib/math/constants/float64-catalan' ),
	'type': 'number',
	'related': []
});

ns.push({
	'alias': 'chi2gof',
	'path': '@stdlib/math/statistics/chi2gof',
	'value': require( '@stdlib/math/statistics/chi2gof' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'Complex64',
	'path': '@stdlib/types/complex/complex64',
	'value': require( '@stdlib/types/complex/complex64' ),
	'type': 'Function',
	'related': [
		'@stdlib/types/complex/complex128'
	]
});

ns.push({
	'alias': 'Complex128',
	'path': '@stdlib/types/complex/complex128',
	'value': require( '@stdlib/types/complex/complex128' ),
	'type': 'Function',
	'related': [
		'@stdlib/types/complex/complex64'
	]
});

ns.push({
	'alias': 'compose',
	'path': '@stdlib/utils/compose',
	'value': require( '@stdlib/utils/compose' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/compose-async'
	]
});

ns.push({
	'alias': 'composeAsync',
	'path': '@stdlib/utils/compose-async',
	'value': require( '@stdlib/utils/compose-async' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/compose'
	]
});

ns.push({
	'alias': 'configdir',
	'path': '@stdlib/utils/configdir',
	'value': require( '@stdlib/utils/configdir' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/homedir',
		'@stdlib/utils/tmpdir'
	]
});

ns.push({
	'alias': 'conj',
	'path': '@stdlib/types/complex/utils/conj',
	'value': require( '@stdlib/types/complex/utils/conj' ),
	'type': 'Function',
	'related': [
		'@stdlib/types/complex/utils/imag',
		'@stdlib/types/complex/utils/real',
		'@stdlib/types/complex/utils/reim'
	]
});

ns.push({
	'alias': 'constantFunction',
	'path': '@stdlib/utils/constant-function',
	'value': require( '@stdlib/utils/constant-function' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/identity-function'
	]
});

ns.push({
	'alias': 'constructorName',
	'path': '@stdlib/utils/constructor-name',
	'value': require( '@stdlib/utils/constructor-name' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/function-name'
	]
});

ns.push({
	'alias': 'contains',
	'path': '@stdlib/assert/contains',
	'value': require( '@stdlib/assert/contains' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'convertPath',
	'path': '@stdlib/utils/convert-path',
	'value': require( '@stdlib/utils/convert-path' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'copy',
	'path': '@stdlib/utils/copy',
	'value': require( '@stdlib/utils/copy' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/merge'
	]
});

ns.push({
	'alias': 'countBy',
	'path': '@stdlib/utils/count-by',
	'value': require( '@stdlib/utils/count-by' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/group',
		'@stdlib/utils/group-by'
	]
});

ns.push({
	'alias': 'countByAsync',
	'path': '@stdlib/utils/count-by-async',
	'value': require( '@stdlib/utils/count-by-async' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/count-by',
		'@stdlib/utils/group-by-async',
		'@stdlib/utils/tabulate-by-async'
	]
});

ns.push({
	'alias': 'curry',
	'path': '@stdlib/utils/curry',
	'value': require( '@stdlib/utils/curry' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/curry-right',
		'@stdlib/utils/uncurry',
		'@stdlib/utils/uncurry-right'
	]
});

ns.push({
	'alias': 'curryRight',
	'path': '@stdlib/utils/curry-right',
	'value': require( '@stdlib/utils/curry-right' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/curry',
		'@stdlib/utils/uncurry',
		'@stdlib/utils/uncurry-right'
	]
});

ns.push({
	'alias': 'cwd',
	'path': '@stdlib/utils/cwd',
	'value': require( '@stdlib/utils/cwd' ),
	'type': 'Function',
	'related': []
});


// EXPORTS //

module.exports = ns;
