/*
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// TypeScript Version: 2.0

/* tslint:disable:max-line-length */
/* tslint:disable:max-file-line-count */

import httpServer = require( '@stdlib/net/http-server' );

/**
* Interface describing the `net` namespace.
*/
interface Namespace {
	/**
	* Returns a function which creates an HTTP server.
	*
	* @param options - server options
	* @param options.port - server port (default: 0)
	* @param options.maxport - max server port
	* @param options.hostname - server hostname
	* @param options.address - server address (default: '127.0.0.1')
	* @param requestListener - callback invoked upon receiving an HTTP request
	* @throws must provide valid options
	* @returns function which creates an HTTP server
	*
	* @example
	* var opts = {
	*     'port': 7331,
	*     'address': '0.0.0.0'
	* };
	* var createServer = ns.httpServer( opts );
	*
	* @example
	* var opts = {
	*     'port': 7331,
	*     'address': '0.0.0.0'
	* };
	* function onRequest( request, response ) {
	*     console.log( request.url );
	*     response.end( 'OK' );
	* }
	* var createServer = ns.httpServer( opts, onRequest );
	*/
	httpServer: typeof httpServer;
}

/**
* Standard library networking.
*/
declare var ns: Namespace;


// EXPORTS //

export = ns;
