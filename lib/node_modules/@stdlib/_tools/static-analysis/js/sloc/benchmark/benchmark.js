'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;
var pkg = require( './../package.json' ).name;
var sloc = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var values;
	var n;
	var i;

	values = [
		'var x = 5;\n',
		'y = foo( 3.14 );\n',
		'o = {\n\t"x": 1,\n\t"y": 2\n};\n',
		'f = new Foo();\n\n',
		'"beep";\n'
	];

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		n = sloc( values[ i%values.length] );
		if ( n !== n ) {
			b.fail( 'should not return NaN' );
		}
	}
	b.toc();
	if ( !isNonNegativeInteger( n ) ) {
		b.fail( 'should return a nonnegative integer' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
