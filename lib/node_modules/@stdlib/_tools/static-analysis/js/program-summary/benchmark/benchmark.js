'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isPlainObject = require( '@stdlib/assert/is-plain-object' );
var pkg = require( './../package.json' ).name;
var analyze = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var values;
	var o;
	var i;

	values = [
		'var x = 5;\n',
		'y = foo( 3.14 );\n',
		'o = {\n\t"x": 1,\n\t"y": 2\n};\n',
		'f = new Foo();\n\n',
		'"beep";\n'
	];

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		o = analyze( values[ i%values.length] );
		if ( typeof o !== 'object' ) {
			b.fail( 'should return an object' );
		}
	}
	b.toc();
	if ( !isPlainObject( o ) ) {
		b.fail( 'should return an object' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
