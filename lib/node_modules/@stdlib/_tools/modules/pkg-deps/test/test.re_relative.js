'use strict';

// MODULES //

var tape = require( 'tape' );
var instanceOf = require( '@stdlib/assert/instance-of' );
var RE_RELATIVE = require( './../lib/re_relative.js' );


// TESTS //

tape( 'main export is a regular expression', function test( t ) {
	t.ok( true, __filename );
	t.equal( instanceOf( RE_RELATIVE, RegExp ), true, 'main export is a regular expression' );
	t.end();
});

tape( 'the regular expression matches a relative require/import literal', function test( t ) {
	var values;
	var i;

	values = [
		'..',
		'../',
		'.',
		'/',
		'C:\\',
		'c:/',
		'./foo/bar.js',
		'/Beep/boop.js',
		'../../foo/../bar/../beep/../../boop.js'
	];
	for ( i = 0; i < values.length; i++ ) {
		t.equal( RE_RELATIVE.test( values[ i ] ), true, 'matches a relative require/import literal' );
	}
	t.end();
});

tape( 'the regular expression does not match a non-relative require/import literal', function test( t ) {
	var values;
	var i;

	values = [
		'beep',
		'boop',
		'foo.js',
		'beep-boop',
		'@stdlib/beep/boop',
		'foo/bar',
		'@foo/bar',
		'@foo/bar-beep'
	];
	for ( i = 0; i < values.length; i++ ) {
		t.equal( RE_RELATIVE.test( values[ i ] ), false, 'does not match' );
	}
	t.end();
});
