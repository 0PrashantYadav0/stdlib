'use strict';

// MODULES //

var tape = require( 'tape' );
var filter = require( './../lib/filter_literals.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof filter, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function bifurcates a list of strings into relative require/import literals and packages', function test( t ) {
	var expected;
	var actual;
	var arr;

	arr = [
		'./beep.js',
		'boop',
		'../boop/foo',
		'fs',
		'net',
		'stream',
		'C:/foo/bar.js',
		'beep',
		'c:\\bar\\bip\\bop.js',
		'os',
		'@stdlib/math/base/special/gamma'
	];

	expected = {
		'relative': [
			'./beep.js',
			'../boop/foo',
			'C:/foo/bar.js',
			'c:\\bar\\bip\\bop.js'
		],
		'packages': [
			'boop',
			'fs',
			'net',
			'stream',
			'beep',
			'os',
			'@stdlib/math/base/special/gamma'
		]
	};

	actual = filter( arr );
	t.deepEqual( actual, expected, 'returns expected results' );

	t.end();
});

tape( 'if provided an empty array, the function returns empty arrays', function test( t ) {
	var expected;
	var actual;

	expected = {
		'relative': [],
		'packages': []
	};
	actual = filter( [] );

	t.deepEqual( actual, expected, 'returns expected results' );
	t.end();
});
