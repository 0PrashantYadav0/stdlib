#!/usr/bin/env node
'use strict';

// MODULES //

var join = require( 'path' ).join;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var CLI = require( '@stdlib/tools/cli' );
var importRequireGlob = require( './../lib' );


// MAIN //

/**
* Main execution sequence.
*
* @private
* @returns {void}
*/
function main() {
	var flags;
	var args;
	var opts;
	var cli;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( join( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});

	// Get any provided command-line arguments:
	args = cli.args();

	// Get any provided command-line options:
	flags = cli.flags();

	opts = {};
	if ( args[ 0 ] ) {
		opts.dir = args[ 0 ];
	}
	if ( flags.pattern ) {
		opts.pattern = flags.pattern;
	}
	importRequireGlob( opts, onResults );

	/**
	* Callback invoked upon completion.
	*
	* @private
	* @param {(Error|null)} error - error object
	* @param {(ObjectArray|EmptyArray)} results - results
	* @returns {void}
	*/
	function onResults( error, results ) {
		var i;
		if ( error ) {
			process.exitCode = 1;
			return console.error( 'Error: %s', error.message ); // eslint-disable-line no-console
		}
		for ( i = 0; i < results.length; i++ ) {
			console.log( JSON.stringify( results[ i ] ) ); // eslint-disable-line no-console
		}
	} // end FUNCTION onResults()
} // end FUNCTION main()

main();

