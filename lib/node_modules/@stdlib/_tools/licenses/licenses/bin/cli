#!/usr/bin/env node
'use strict';

// MODULES //

var join = require( 'path' ).join;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var CLI = require( '@stdlib/tools/cli' );
var licenses = require( './../lib' );


// FUNCTIONS //

/**
* Callback invoked after processing license results.
*
* @private
* @param {(Error|null)} error - error object
* @param {(ObjectArray|EmptyArray)} results - results
* @throws {Error} unexpected error
*/
function onResults( error, results ) {
	var i;
	if ( error ) {
		throw error;
	}
	for ( i = 0; i < results.length; i++ ) {
		console.log( JSON.stringify( results[ i ] ) ); // eslint-disable-line no-console
	}
}


// MAIN //

/**
* Main execution sequence.
*
* @private
* @returns {void}
*/
function main() {
	var flags;
	var opts;
	var cli;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( join( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});

	// Get any provided command-line options:
	flags = cli.flags();

	opts = {};
	if ( flags.dir ) {
		opts.dir = flags.dir;
	}
	if ( flags.depth ) {
		opts.depth = parseInt( flags.depth, 10 );
	}
	if ( flags.dev === false ) {
		opts.dev = flags.dev;
	}
	licenses( opts, onResults );
}

main();
