'use strict';

// MODULES //

var contains = require( '@stdlib/assert/contains' );
var type2key = require( './type2key.js' );
var statements = require( './statements.json' );


// MAIN //

/**
* Tabulates the number of select AST node types.
*
* @private
* @param {Object} results - output results object
* @param {Array<Node>} nodes - AST nodes
* @returns {Object} results object
*/
function tabulate( results, nodes ) {
	var node;
	var type;
	var key;
	var i;

	for ( i = 0; i < nodes.length; i++ ) {
		node = nodes[ i ];
		type = node.type;
		key = type2key( type );
		if ( key ) {
			if ( typeof results[ key ] === 'object' ) {
				results[ key ].count += 1;
			} else {
				results[ key ] += 1;
			}
		}
		if ( contains( statements, type ) ) {
			results.statements += 1;
		}
	}
	return results;
} // end FUNCTION tabulate()


// EXPORTS //

module.exports = tabulate;
