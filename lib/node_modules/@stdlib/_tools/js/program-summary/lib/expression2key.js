'use strict';

// VARIABLES //

var table = {
	'ThisExpression': 'this',
	'ArrayExpression': 'array',
	'ObjectExpression': 'object',
	'FunctionExpression': 'function',
	'UnaryExpression': 'unary',
	'UpdateExpression': 'update',
	'BinaryExpression': 'binary',
	'AssignmentExpression': 'assignment',
	'LogicalExpression': 'logical',
	'MemberExpression': 'member',
	'ConditionalExpression': 'conditional',
	'CallExpression': 'call',
	'NewExpression': 'new',
	'SequenceExpression': 'sequence'
};


// MAIN //

/**
* Returns the key corresponding to a AST node type.
*
* @private
* @param {string} type - node type
* @returns {(string|null)} key
*/
function type2key( type ) {
	return table[ type ] || null;
} // end FUNCTION type2key()


// EXPORTS //

module.exports = type2key;
