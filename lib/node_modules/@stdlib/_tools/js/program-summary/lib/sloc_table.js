'use strict';

// MAIN //

// Mapping from AST node types to source lines of code (SLOC)...
var sloc = { // Note: arrange alphabetically
	// One `break` statement per line:
	'BreakStatement': 1,

	// One `continue` statement per line:
	'ContinueStatement': 1,

	// Opening line + closing condition:
	'DoWhileStatement': 2,

	// One expression per line:
	'ExpressionStatement': 1,

	// Init + closing brace:
	'ForInStatement': 2,

	// Init + closing brace:
	'ForOfStatement': 2,

	// Init + closing brace:
	'ForStatement': 2,

	// Opening line + closing brace (empty functions are defined as `1` SLOC):
	'FunctionDeclaration': 2,

	// Condition + closing brace (`else` block must be programmatically accounted for):
	'IfStatement': 2,

	// One `return` statement per line:
	'ReturnStatement': 1,

	// Case line:
	'SwitchCase': 1,

	// Opening line + closing brace:
	'SwitchStatement': 2,

	// One `throw` statement per line:
	'ThrowStatement': 1,

	// Opening + catch + closing brace:
	'TryStatement': 3,

	// Variables are defined 1 per line:
	'VariableDeclaration': 1,

	// Condition + closing brace:
	'WhileStatement': 2
};


// EXPORTS //

module.exports = sloc;
