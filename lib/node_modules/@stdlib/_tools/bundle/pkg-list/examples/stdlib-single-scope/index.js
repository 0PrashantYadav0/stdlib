'use strict';

var join = require( 'path' ).join;
var mkdirp = require( 'mkdirp' ).sync;
var packFlat = require( 'browser-pack-flat/plugin' );
var uglify = require( 'uglify-es' );
var pkgNames = require( '@stdlib/_tools/pkgs/names' );
var writeFile = require( '@stdlib/fs/write-file' ).sync;
var bundle = require( './../../lib' );

var fopts = {
	'pattern': '**/package.json',
	'ignore': [
		'**/_**/**'     // ignore "private" packages
	]
};

var bopts = {
	'namespace': 'flat',
	'exportName': '@stdlib',
	'plugins': [
		packFlat       // bundle as a single scope
	]
};

var dir = join( __dirname, 'build' );
pkgNames( fopts, onNames );

function onNames( error, names ) {
	if ( error ) {
		throw error;
	}
	bundle( names, bopts, onBundle );
}

function onBundle( error, bundle ) {
	var fpath;
	if ( error ) {
		throw error;
	}
	bundle = uglify.minify( bundle.toString() ).code;

	mkdirp( dir );
	fpath = join( dir, 'bundle.min.js' );

	writeFile( fpath, bundle );
}
