/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var basename = require( 'path' ).basename; // TODO: replace with stdlib pkg
var logger = require( 'debug' );
var readFile = require( '@stdlib/fs/read-file' ).sync;
var extname = require( '@stdlib/utils/extname' );


// VARIABLES //

var debug = logger( 'lint:file-license-header:linter:sync' );
var FOPTS = {
	'encoding': 'utf8'
};


// MAIN //

/**
* Synchronously lints each file in a provided file list.
*
* @private
* @param {StringArray} files - file list
* @param {Object} header - object containing license headers against which to lint
* @returns {(EmptyArray|ObjectArray|Error)} lint errors
*/
function lint( files, header ) {
	var total;
	var errs;
	var file;
	var ext;
	var tmp;
	var re;
	var f;
	var i;

	total = files.length;
	errs = [];
	for ( i = 0; i < total; i++ ) {
		f = files[ i ];

		debug( 'Linting file (%d of %d): %s', i+1, total, f );
		file = readFile( f, FOPTS );
		if ( file instanceof Error ) {
			debug( 'Encountered an error when attempting to read file: %s. Error: %s', f, file.message );
			return file;
		}
		ext = extname( f ).slice( 1 ); // ignore leading `.`
		re = header[ ext ];
		if ( !re ) {
			// E.g., account for files such as `Makefile` which lack a filename extension...
			re = header[ basename( f ) ] || header.default || null;
		}
		if ( re ) {
			tmp = file.match( re );
			if ( tmp === null ) {
				errs.push({
					'name': f,
					'error': 'file either has a malformed license header or does not contain a license header.'
				});
			} else if ( tmp.length > 1 ) {
				errs.push({
					'name': f,
					'error': 'file contains more than 1 license header.'
				});
			}
		}
		debug( 'Finished linting file %d of %d.', i+1, total );
	}
	return errs;
} // end FUNCTION lint()


// EXPORTS //

module.exports = lint;
