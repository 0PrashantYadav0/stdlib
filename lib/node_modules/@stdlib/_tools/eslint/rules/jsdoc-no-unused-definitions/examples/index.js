'use strict';

var Linter = require( 'eslint' ).Linter;
var rule = require( './../lib' );

var linter = new Linter();
var result;
var code;

// Generate our source code:
code = [
	'/**',
	'* Beep boop.',
	'*',
	'* [foo]: http://foo.bar/baz',
	'*',
	'* @param {string} str - input value',
	'* @returns {string} output value',
	'*',
	'* @example',
	'* var out = beep( "boop" );',
	'* // returns "beepboop"',
	'*/',
	'function beep( str ) {',
	'\treturn "beep" + str;',
	'}'
].join( '\n' );

// Register the ESLint rule:
linter.defineRule( 'jsdoc-no-unused-definitions', rule );

// Lint the code:
result = linter.verify( code, {
	'rules': {
		'jsdoc-no-unused-definitions': 'error'
	}
});
console.log( result );
/* =>
	[
		{
			'ruleId': 'jsdoc-no-unused-definitions',
			'severity': 2,
			'message': 'Found unused definition',
			'line': 4,
			'column': 3,
			'nodeType': null,
			'source': '* [foo]: http://foo.bar/baz',
			'endLine': 12,
			'endColumn': 3
		}
	]
*/
