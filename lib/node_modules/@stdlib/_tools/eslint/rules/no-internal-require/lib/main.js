'use strict';

// MODULES //

var startsWith = require( '@stdlib/string/starts-with' );
var contains = require( '@stdlib/assert/contains' );


// VARIABLES //


// MAIN //

/**
* Rule for validating that require() calls do not walk internals of another stdlib package.
*
* @param {Object} context - ESLint context
* @returns {Object} validators
*/
function main( context ) {
	/**
	* Reports the error message.
	*
	* @private
	* @param {ASTNode} node - node to report
	*/
	function report( node ) {
		context.report({
			'node': node,
			'message': 'require() call contains path walking another stdlib package'
		});
	} // end FUNCTION report()

	/**
	* Checks whether require path walks internals of a stdib package.
	*
	* @private
	* @param {ASTNode} node - node to examine
	*/
	function validate( node ) {
		var requirePath;

		if ( node.callee.name === 'require' ) {
			requirePath = node.arguments[ 0 ].value;
			if (
				startsWith( requirePath, '@stdlib' ) &&
				contains( requirePath, '/lib/' )
			) {
				report( node );
			}
		}
	} // end FUNCTION validate()

	return {
		'CallExpression': validate
	};
} // end FUNCTION main()


// EXPORTS //

module.exports = {
	'meta': {
		'docs': {
			'description': 'disallow require() calls into internals of other stdlib packages'
		},
		'schema': []
	},
	'create': main
};
