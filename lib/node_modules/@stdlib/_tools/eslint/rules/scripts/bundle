#!/usr/bin/env node

/**
* Script to bundle the project-specific ESLint plugin.
*
* ## Usage
*
* ```bash
* $ DEBUG=* node /path/to/eslint/rules/scripts/bundle
* ```
*
*
* @private
*/

'use strict'

// MODULES //

var fs = require( 'fs' );
var join = require( 'path' ).join;
var browserify = require( 'browserify' );
var exists = require( '@stdlib/fs/exists' );


// VARIABLES //

var b = browserify( [ join( __dirname, './plugin.js' ) ], {
	'standalone': 'eslint-plugin-stdlib'
});


// MAIN //

b.bundle( clbk );

/**
* Callback invoked upon bundling of plugin.
*
* @private
* @param {(Error|null)} error - error object
* @param {string} bundle - bundled code
* @returns {void}
*/
function clbk( error, bundle ) {
	var pluginDir;
	if ( error ) {
		throw error;
	}
	pluginDir = join( 'node_modules', 'eslint-plugin-stdlib' );

	if ( !exists.sync( pluginDir ) ) {
		fs.mkdirSync( pluginDir );
	}
	fs.writeFileSync( join( pluginDir, 'index.js' ), bundle.toString() );
} // end FUNCTION clbk()
