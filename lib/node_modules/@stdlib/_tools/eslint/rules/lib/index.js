'use strict';

/*
* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );


// MAIN //

/**
* Top-level namespace.
*
* @namespace rules
*/
var rules = {};

/**
* @name empty-line-before-comment
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/empty-line-before-comment}
*/
setReadOnly( rules, 'empty-line-before-comment', require( '@stdlib/_tools/eslint/rules/empty-line-before-comment' ) );

/**
* @name jsdoc-blockquote-indentation
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/jsdoc-blockquote-indentation}
*/
setReadOnly( rules, 'jsdoc-blockquote-indentation', require( '@stdlib/_tools/eslint/rules/jsdoc-blockquote-indentation' ) );

/**
* @name jsdoc-checkbox-content-indent
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/jsdoc-checkbox-content-indent}
*/
setReadOnly( rules, 'jsdoc-checkbox-content-indent', require( '@stdlib/_tools/eslint/rules/jsdoc-checkbox-content-indent' ) );

/**
* @name jsdoc-leading-description-sentence
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/jsdoc-leading-description-sentence}
*/
setReadOnly( rules, 'jsdoc-leading-description-sentence', require( '@stdlib/_tools/eslint/rules/jsdoc-leading-description-sentence' ) );

/**
* @name jsdoc-markdown-remark
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/jsdoc-markdown-remark}
*/
setReadOnly( rules, 'jsdoc-markdown-remark', require( '@stdlib/_tools/eslint/rules/jsdoc-markdown-remark' ) );

/**
* @name jsdoc-tag-names
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/jsdoc-tag-names}
*/
setReadOnly( rules, 'jsdoc-tag-names', require( '@stdlib/_tools/eslint/rules/jsdoc-tag-names' ) );

/**
* @name new-cap-array
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/new-cap-array}
*/
setReadOnly( rules, 'new-cap-array', require( '@stdlib/_tools/eslint/rules/new-cap-array' ) );

/**
* @name new-cap-error
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/new-cap-error}
*/
setReadOnly( rules, 'new-cap-error', require( '@stdlib/_tools/eslint/rules/new-cap-error' ) );

/**
* @name new-cap-regexp
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/new-cap-regexp}
*/
setReadOnly( rules, 'new-cap-regexp', require( '@stdlib/_tools/eslint/rules/new-cap-regexp' ) );

/**
* @name no-dynamic-require
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/no-dynamic-require}
*/
setReadOnly( rules, 'no-dynamic-require', require( '@stdlib/_tools/eslint/rules/no-dynamic-require' ) );

/**
* @name no-immediate-require
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/no-immediate-require}
*/
setReadOnly( rules, 'no-immediate-require', require( '@stdlib/_tools/eslint/rules/no-immediate-require' ) );

/**
* @name no-internal-require
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/no-internal-require}
*/
setReadOnly( rules, 'no-internal-require', require( '@stdlib/_tools/eslint/rules/no-internal-require' ) );

/**
* @name no-nested-require
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/no-nested-require}
*/
setReadOnly( rules, 'no-nested-require', require( '@stdlib/_tools/eslint/rules/no-nested-require' ) );

/**
* @name no-redeclare
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/no-redeclare}
*/
setReadOnly( rules, 'no-redeclare', require( '@stdlib/_tools/eslint/rules/no-redeclare' ) );

/**
* @name require-file-extensions
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/require-file-extensions}
*/
setReadOnly( rules, 'require-file-extensions', require( '@stdlib/_tools/eslint/rules/require-file-extensions' ) );

/**
* @name require-globals
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/require-globals}
*/
setReadOnly( rules, 'require-globals', require( '@stdlib/_tools/eslint/rules/require-globals' ) );

/**
* @name section-headers
* @memberof rules
* @readonly
* @type {Function}
* @see {@link module:@stdlib/_tools/eslint/rules/section-headers}
*/
setReadOnly( rules, 'section-headers', require( '@stdlib/_tools/eslint/rules/section-headers' ) );


// EXPORTS //

module.exports = rules;
