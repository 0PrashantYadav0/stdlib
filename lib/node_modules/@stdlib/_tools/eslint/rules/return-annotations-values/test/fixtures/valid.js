/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var valid = [];
var test;

test = {
	'code': [
		'var isLowercase = require( \'@stdlib/assert/is-lowercase\' );',
		'',
		'console.log( isLowercase( \'hello\' ) );',
		'// => true',
		'',
		'console.log( isLowercase( \'\' ) );',
		'// => false',
		'',
		'console.log( isLowercase( \'Hello\' ) );',
		'// => false'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'var isLowercase = require( \'@stdlib/assert/is-lowercase\' );',
		'',
		'var bool = isLowercase( \'hello\' );',
		'// returns true',
		'',
		'bool = isLowercase( \'\' );',
		'// returns false',
		'',
		'bool = isLowercase( \'Hello\' );',
		'// returns false'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		' var SharedArrayBuffer = require( \'@stdlib/array/shared-buffer\' );',
		'',
		' try {',
		'     var bool = isSharedArrayBuffer( new SharedArrayBuffer( 10 ) );',
		'     // returns true',
		' } catch ( err ) {',
		'     console.log( \'Environment does not support SharedArrayBuffers.\' );',
		' }',
		''
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'var functionName = require( \'@stdlib/utils/function-name\' );',
		'',
		'console.log( functionName( Math.sqrt ) ); // eslint-disable-line stdlib/no-builtin-math',
		'// => \'sqrt\'',
		'',
		'console.log( functionName( Float64Array ) );',
		'// => \'Float64Array\'',
		'',
		'console.log( functionName( Date ) );',
		'// => \'Date\'',
		'',
		'console.log( functionName( String ) );',
		'// => \'String\''
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'tape( \'due to floating-point rounding error, rounding a numeric value can result in unexpected behavior\', function test( t ) {',
		'  var x;',
		'',
		'  x = 0.2 + 0.1; // => 0.30000000000000004',
		'  t.strictEqual( ceilb( x, -16, 10 ), 0.3000000000000001, \'equals 0.3000000000000001 and not 0.3\' );',
		'',
		'  x = 24.616838129811768;',
		'  t.strictEqual( ceilb( x, 2, 7 ), 48.99999999999999, \'equals 48.99999999999999 and not 49\' );',
		'',
		'  t.end();',
		'});'
	].join( '\n' )
};
valid.push( test );

test = {
	'code': [
		'var startsWith = require( \'@stdlib/string/starts-with\' );',
		'',
		'var str = \'Fair is foul, and foul is fair, hover through fog and filthy air\';',
		'',
		'console.log( startsWith( str, \'Fair\' ) );',
		'// => true',
		'',
		'console.log( startsWith( str, \'fair\' ) );',
		'// => false',
		'',
		'console.log( startsWith( str, \'foul\', 8 ) );',
		'// => true',
		'',
		'console.log( startsWith( str, \'filthy\', -10 ) );',
		'// => true',
		'',
		''
	].join( '\n' )
};
valid.push( test );


// EXPORTS //

module.exports = valid;
