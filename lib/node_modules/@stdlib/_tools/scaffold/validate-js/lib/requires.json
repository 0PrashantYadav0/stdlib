{
	"Array": "require( '@stdlib/assert/is-array' );",
	"boolean": "require( '@stdlib/assert/is-boolean' ).isPrimitive;",
	"BooleanArray": "require( '@stdlib/assert/is-boolean-array' ).primitives;",
	"Buffer": "require( '@stdlib/assert/is-buffer' );",
	"Function": "require( '@stdlib/assert/is-function' );",
	"FunctionArray": "require( '@stdlib/assert/is-function-array' );",
	"NegativeInteger": "require( '@stdlib/assert/is-negative-integer' );",
	"NonNegativeInteger": "require( '@stdlib/assert/is-nonnegative-integer' );",
	"NonPositiveInteger": "require( '@stdlib/assert/is-nonpositive-integer' );",
	"number": "require( '@stdlib/assert/is-number' ).isPrimitive;",
	"NumberArray": "require( '@stdlib/assert/is-number' ).primitives;",
	"ObjectArray": "require( '@stdlib/assert/is-object-array' );",
	"PositiveInteger": "require( '@stdlib/assert/is-positive-integer' );",
	"PositiveIntegerArray": "require( '@stdlib/assert/is-positive-integer-array' ).primitives;",
	"string": "require( '@stdlib/assert/is-string' ).isPrimitive;",
	"StringArray": "require( '@stdlib/assert/is-string-array' ).primitives;"
}
