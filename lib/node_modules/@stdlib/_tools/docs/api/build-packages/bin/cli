#!/usr/bin/env node
'use strict';

// MODULES //

var join = require( 'path' ).join;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var CLI = require( '@stdlib/tools/cli' );
var build = require( './../lib' );


// FUNCTIONS //

/**
* Callback invoked upon completion.
*
* @private
* @param {(Error|null)} error - error object
*/
function clbk( error ) {
	if ( error ) {
		throw error;
	}
}


// MAIN //

/**
* Main execution sequence.
*
* @private
* @returns {void}
*/
function main() {
	var flags;
	var opts;
	var cli;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( join( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});

	// Get any provided command-line options:
	flags = cli.flags();

	opts = {
		'packages': {},
		'tests': {},
		'benchmarks': {}
	};
	if ( flags.dir ) {
		opts.dir = flags.dir;
	}
	if ( flags.readme ) {
		opts.readme = flags.readme;
	}
	if ( flags.index ) {
		opts.index = flags.index;
	}
	if ( flags.mount ) {
		opts.mount = flags.mount;
	}
	if ( flags[ 'packages-pattern' ] ) {
		opts.packages.pattern = flags[ 'packages-pattern' ];
	}
	if ( flags[ 'packages-ignore' ] ) {
		opts.packages.ignore = flags[ 'packages-ignore' ];
		if ( typeof opts.packages.ignore === 'string' ) {
			opts.packages.ignore = [ opts.packages.ignore ];
		}
	}
	if ( flags[ 'tests-pattern' ] ) {
		opts.tests.pattern = flags[ 'tests-pattern' ];
	}
	if ( flags[ 'tests-folder' ] ) {
		opts.tests.folder = flags[ 'tests-folder' ];
	}
	if ( flags[ 'tests-bundle' ] ) {
		opts.tests.bundle = flags[ 'tests-bundle' ];
	}
	if ( flags[ 'tests-html' ] ) {
		opts.tests.html = flags[ 'tests-html' ];
	}
	if ( flags[ 'benchmarks-pattern' ] ) {
		opts.benchmarks.pattern = flags[ 'benchmarks-pattern' ];
	}
	if ( flags[ 'benchmarks-folder' ] ) {
		opts.benchmarks.folder = flags[ 'benchmarks-folder' ];
	}
	if ( flags[ 'benchmarks-bundle' ] ) {
		opts.benchmarks.bundle = flags[ 'benchmarks-bundle' ];
	}
	if ( flags[ 'benchmarks-html' ] ) {
		opts.benchmarks.html = flags[ 'benchmarks-html' ];
	}

	build( flags.out, opts, clbk );
}

main();
