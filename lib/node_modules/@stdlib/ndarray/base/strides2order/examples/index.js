'use strict';

var discreteUniform = require( '@stdlib/random/base/discrete-uniform' );
var shape2strides = require( '@stdlib/ndarray/base/shape2strides' );
var randu = require( '@stdlib/random/base/randu' );
var strides2order = require( './../lib' );

var strides;
var order;
var shape;
var i;
var j;

shape = new Array( 3 );

for ( i = 0; i < 20; i++ ) {
	// Generate a random array shape:
	shape[ 0 ] = discreteUniform( 1, 10 );
	shape[ 1 ] = discreteUniform( 1, 10 );
	shape[ 2 ] = discreteUniform( 1, 10 );

	// Compute the strides:
	if ( randu() < 0.5 ) {
		strides = shape2strides( shape, 'row-major' );
	} else {
		strides = shape2strides( shape, 'column-major' );
	}
	j = discreteUniform( 0, shape.length-1 );
	strides[ j ] *= ( randu() < 0.5 ) ? -1 : 1;

	// Determine the order:
	order = strides2order( strides );
	console.log( 'Strides: %s. Order: %s.', strides.join( ',' ), order );
}
