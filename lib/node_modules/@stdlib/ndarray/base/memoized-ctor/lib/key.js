'use strict';

// MODULES //

var options = require( './options.json' );


// VARIABLES //

var nopts = options.length;
var N = nopts - 1;


// MAIN //

/**
* Returns a cache key.
*
* @private
* @param {string} dtype - data type
* @param {Options} opts - function options
* @param {boolean} opts.codegen - boolean indicating whether to use code generation
* @returns {string} cache key
*
* @example
* var opts = {
*     'codegen': true
* };
* var key = getKey( 'float64', opts );
* // returns 'float64;codegen=true'
*/
function getKey( dtype, opts ) {
	var key;
	var i;

	key = dtype + ';';
	for ( i = 0; i < nopts; i++ ) {
		// Note: we assume that an option value can be uniquely serialized to a `string` via `toString()`...
		key += options[ i ] + '=' + opts[ options[i] ];
		if ( i < N ) {
			key += ',';
		}
	}
	return key;
} // end FUNCTION getKey()


// EXPORTS //

module.exports = getKey;
