'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var pkg = require( './../package.json' ).name;
var bytesPerElement = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var dtypes;
	var dtype;
	var out;
	var i;

	dtypes = [
		'float64',
		'float32',
		'int8',
		'uint8',
		'uint8c',
		'int16',
		'uint16',
		'int32',
		'uint32',
		'binary',
		'generic',
		'foobar'
	];

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		dtype = dtypes[ i%dtypes.length ];
		out = bytesPerElement( dtype );
		if ( out !== out ) {
			b.fail( 'should not return NaN' );
		}
	}
	b.toc();
	if ( out !== out ) {
		b.fail( 'should not return NaN' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
