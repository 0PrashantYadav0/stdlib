'use strict';

// MODULES //

var minmax = require( '@stdlib/ndarray/base/minmax-view-buffer-index' );


// MAIN //

/**
* Returns a boolean indicating if a buffer length is compatible with provided ndarray meta data.
*
* @param {NonNegativeInteger} len - buffer length
* @param {NonNegativeIntegerArray} shape - array shape
* @param {IntegerArray} strides - stride array
* @param {NonNegativeInteger} offset - index offset
* @returns {boolean} boolean indicating if a buffer length is compatible
*
* @example
* var shape = [ 2, 2 ];
* var strides = [ 2, 1 ];
* var offset = 0;
*
* var bool = isBufferLengthCompatible( 4, shape, strides, offset );
* // returns true
*
* @example
* var shape = [ 2, 2 ];
* var strides = [ 2, 1 ];
* var offset = 2;
*
* var bool = isBufferLengthCompatible( 4, shape, strides, offset );
* // returns false
*/
function isBufferLengthCompatible( len, shape, strides, offset ) {
	// Determine the minimum and maximum linear indices which are accessible by the array view:
	var idx = minmax( shape, strides, offset );

	// If the indices are "inbounds", then the buffer length is compatible:
	return ( idx[ 0 ] >= 0 && idx[ 1 ] < len );
} // end FUNCTION isBufferLengthCompatible()


// EXPORTS //

module.exports = isBufferLengthCompatible;
