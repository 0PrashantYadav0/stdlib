'use strict';

var shape2strides = require( '@stdlib/ndarray/base/shape2strides' );
var strides2offset = require( '@stdlib/ndarray/base/strides2offset' );
var dicreteUniform = require( '@stdlib/random/base/discrete-uniform' );
var ndarray2array = require( './../lib' );

// Create a data buffer:
var buffer = new Array( 27 );
var len = buffer.length;
var i;
for ( i = 0; i < len; i++ ) {
	buffer[ i ] = i;
}

// Specify array meta data:
var shape = [ 3, 3, 3 ];
var order = 'column-major';
var ndims = shape.length;

// Compute array meta data:
var strides = shape2strides( shape, order );
var offset = strides2offset( shape, strides );

// Print array information:
console.log( '' );
console.log( 'Dims: %s', shape.join( 'x' ) );

// Random flip strides and convert an ndarray to a nested array...
var arr;
var j;
for ( i = 0; i < 20; i++ ) {
	j = dicreteUniform( 0, ndims-1 );
	strides[ j ] *= -1;
	offset = strides2offset( shape, strides );

	console.log( '' );
	console.log( 'Strides: %s', strides.join( ',' ) );
	console.log( 'Offset: %d', offset );

	arr = ndarray2array( buffer, shape, strides, offset, order );
	console.log( JSON.stringify( arr ) );
}
