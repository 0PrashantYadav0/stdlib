'use strict';

// MODULES //

var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;
var getIndex = require( '@stdlib/ndarray/base/ind' );


// FUNCTIONS //

/**
* Returns a method for setting an array element.
*
* @private
* @param {StringArray} mode - specifies how to handle indices which exceed array dimensions
* @returns {Function} method for setting an array element
*/
function wrap( mode ) {
	mode = mode[ 0 ];
	return set;

	/**
	* Sets an array element.
	*
	* @private
	* @param {integer} i - index
	* @param {*} v - value to set
	* @throws {TypeError} index must be an integer value
	* @throws {RangeError} index exceeds array dimensions
	* @returns {ndarray} ndarray instance
	*/
	function set( i, v ) {
		/* eslint-disable no-invalid-this */
		if ( !isInteger( i ) ) {
			throw new TypeError( 'invalid input argument. Index must be an integer value. Value: `'+i+'`.' );
		}
		i = getIndex( i, this._shape[0]-1, mode );
		this._buffer[ this._offset + ( this._strides[0]*i ) ] = v;
		return this;
	} // end FUNCTION set()
} // end FUNCTION wrap()


// EXPORTS //

module.exports = wrap;
