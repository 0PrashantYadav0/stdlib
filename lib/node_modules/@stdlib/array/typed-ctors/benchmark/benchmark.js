'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var dtypes = require( '@stdlib/array/typed-dtypes' );
var isFunction = require( '@stdlib/assert/is-function' );
var pkg = require( './../package.json' ).name;
var ctors = require( './../lib' );


// VARIABLES //

var DTYPES = dtypes();


// MAIN //

bench( pkg, function benchmark( b ) {
	var ctor;
	var i;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		ctor = ctors( DTYPES[ i%DTYPES.length ] );
		if ( typeof ctor !== 'function' ) {
			b.fail( 'should return a function' );
		}
	}
	b.toc();
	if ( !isFunction( ctor ) ) {
		b.fail( 'should return a function' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
