'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var hasArrayBufferSupport = require( '@stdlib/utils/detect-arraybuffer-support' );
var isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );
var pkg = require( './../package.json' ).name;
var ctor = require( './../lib' );


// VARIABLES //

var opts = {
	'skip': !hasArrayBufferSupport() // TODO: remove once ArrayBuffer polyfill is written
};


// MAIN //

bench( pkg, opts, function benchmark( b ) {
	var buf;
	var i;
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		buf = new ctor( 0 );
		if ( buf.byteLength !== 0 ) {
			b.fail( 'should have length 0' );
		}
	}
	b.toc();
	if ( !isArrayBuffer( buf ) ) {
		b.fail( 'should return an ArrayBuffer' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
