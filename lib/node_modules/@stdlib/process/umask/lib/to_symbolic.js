'use strict';

// MODULES //

var lpad = require( '@stdlib/string/left-pad' );
var OCTAL_CODES = require( './octal_codes.json' );


// MAIN //

/**
* Converts an integer mask to symbolic notation.
*
* @private
* @param {NonNegativeInteger} mask - integer mask
* @returns {string} mask in symbolic notation
*/
function toSymbolic( mask ) {
	var out;

	// Convert the mask to a four-digit octal string representation (e.g., 0077):
	mask = mask.toString( 8 );
	mask = lpad( mask, 4, '0' );

	// For each digit, get the permissions: (NOTE: we skip the special modes digit, as only the file permission bits of the mask are used)
	out = '';
	out += 'u='+OCTAL_CODES[ mask[1] ];
	out += ',';
	out += 'g='+OCTAL_CODES[ mask[2] ];
	out += ',';
	out += 'o='+OCTAL_CODES[ mask[3] ];

	return out;
}


// EXPORTS //

module.exports = toSymbolic;
