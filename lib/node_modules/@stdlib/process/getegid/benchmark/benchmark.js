'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;
var isNull = require( '@stdlib/assert/is-null' );
var pkg = require( './../package.json' ).name;
var getegid = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var uid;
	var i;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		// Note: the following *could* be optimized away via loop-invariant code motion. If so, the entire loop will disappear.
		uid = getegid();
		if ( !isNumber( uid ) && !isNull( uid ) ) {
			b.fail( 'should return a number or null' );
		}
	}
	b.toc();
	if ( !isNumber( uid ) && !isNull( uid ) ) {
		b.fail( 'should return a number or null' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
