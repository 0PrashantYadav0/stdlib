'use strict';

// MODULES //

var tape = require( 'tape' );
var cwd = require( '@stdlib/process/cwd' );
var chdir = require( './../lib' );


// VARIABLES //

var DIR = cwd();


// FUNCTIONS //

/**
* Restores the current working directory.
*
* @private
*/
function restore() {
	chdir( DIR );
} // end FUNCTION restore()


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof chdir, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function changes the working directory', function test( t ) {
	var err = chdir( __dirname );

	t.equal( err, null, 'returns expected value' );
	t.equal( cwd(), __dirname, 'sets working directory' );

	// Restore current working directory:
	restore();

	t.end();
});

tape( 'if the function encounters an error when attempting to change the working directory, the function returns the error', function test( t ) {
	var err = chdir( 'kjflajflsda/bkadlfjadlfksabldjkfklajsf/dkfaljsf' ); // non-existent directory

	t.equal( err instanceof Error, true, 'returns an error' );
	t.equal( cwd(), DIR, 'does not change working directory' );

	// Restore current working directory:
	restore();

	t.end();
});
