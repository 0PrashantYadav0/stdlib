'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var IS_BROWSER = require( '@stdlib/assert/is-browser' );
var getuid = require( './../lib' );


// VARIABLES //

var opts = {
	'skip': IS_BROWSER
};


// TESTS //

tape( 'main export is a function', opts, function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof getuid, 'function', 'main export is a function' );
	t.end();
});

tape( 'if `process.getuid` is a function, the main export aliases `process.getuid`', opts, function test( t ) {
	var getuid = proxyquire( './../lib/main.js', {
		'@stdlib/assert/is-function': isFunction
	});
	t.strictEqual( getuid, process.getuid, 'is alias' );
	t.end();

	function isFunction() {
		return true;
	}
});

tape( 'if an environment does not support `process.getuid`, the main export always returns `null`', opts, function test( t ) {
	var getuid = proxyquire( './../lib/main.js', {
		'@stdlib/assert/is-function': isFunction
	});
	t.strictEqual( typeof getuid, 'function', 'main export is a function' );
	t.strictEqual( getuid(), null, 'returns null' );
	t.strictEqual( getuid(), null, 'returns null' );
	t.strictEqual( getuid(), null, 'returns null' );
	t.strictEqual( getuid(), null, 'returns null' );
	t.end();

	function isFunction() {
		return false;
	}
});
