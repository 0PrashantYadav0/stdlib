'use strict';

/**
* Regular expression to capture the last part of a POSIX path.
*
* @module @stdlib/regexp/basename-posix
* @type {RegExp}
*
* @example
* var RE_BASENAME_POSIX = require( '@stdlib/regexp/basename-posix' );
*
* var base = RE_BASENAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];
* // returns 'index.js'
*/

// MAIN //

/**
* Captures a POSIX path basename. Modified from Node.js [source]{@link https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406}.
*
* Regular expression: `/^(?:\/?|)(?:[\s\S]*?)((?:\.{1,2}|[^\/]+?|)(?:\.[^.\/]*|))(?:[\/]*)$/`
*
* * `\^`
*   - match any string which begins with
* * `(?:)`
*   - capture but do not remember (root)
* * `\/?`
*   - match a / literal zero or one time
* * `|)`
*   - OR capture nothing
* * `(?:)`
*   - capture but do not remember (directory)
* * `[\s\S]`
*   - any space or non-space character
* * `*?`
*   - zero or more times, but non-greedily (shortest possible match)
* * `()`
*   - capture (basename)
* * `\.{1,2}`
*   - match a `.` literal one or two times
* * `|`
*   - OR
* * `[^\/]+?`
*   - match anything which is not a `/` literal one or more times, but do so non-greedily
* * `|)`
*   - OR capture nothing
* * `(?:)`
*   - capture but do not remember (extname)
* * `\.`
*   - match a `.` literal
* * `[^.\/]`
*   - match anything which is not a `.` or `/` literal
* * `*`
*   - zero or more times
* * `|)`
*   - OR capture nothing
* * `(?:)`
*   - capture but do not remember (trailing slash)
* * `[\/]`
*   - match a `/` literal
* * `*`
*   - zero or more times
* * `$`
*   - end of string
*
* @constant
* @type {RegExp}
* @default /^(?:\/?|)(?:[\s\S]*?)((?:\.{1,2}|[^\/]+?|)(?:\.[^.\/]*|))(?:[\/]*)$/
*/
var RE_BASENAME_POSIX = /^(?:\/?|)(?:[\s\S]*?)((?:\.{1,2}|[^\/]+?|)(?:\.[^.\/]*|))(?:[\/]*)$/; // eslint-disable-line no-useless-escape


// EXPORTS //

module.exports = RE_BASENAME_POSIX;
