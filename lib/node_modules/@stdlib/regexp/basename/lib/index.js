'use strict';

/**
* Regular expression to capture the last part of a path.
*
* @module @stdlib/regexp/basename
* @type {RegExp}
*
* @example
* var RE_BASENAME = require( '@stdlib/regexp/basename' );
*
* // On a POSIX platform...
* var base = RE_BASENAME.exec( '/foo/bar/index.js' )[ 1 ];
* // returns 'index.js'
*
* @example
* var RE_BASENAME = require( '@stdlib/regexp/basename' );
*
* // On a Windows platform...
* var base = RE_BASENAME.exec( 'C:\\foo\\bar\\index.js' )[ 1 ];
* // returns 'index.js'
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var copy = require( '@stdlib/utils/copy' );
var IS_WINDOWS = require( '@stdlib/assert/is-windows' );


// MAIN //

var posix = require( '@stdlib/regexp/basename-posix' );
var win32 = require( '@stdlib/regexp/basename-windows' );

var RE_BASENAME;
if ( IS_WINDOWS ) {
	RE_BASENAME = win32;
} else {
	RE_BASENAME = posix;
}
RE_BASENAME = copy( RE_BASENAME );

setReadOnly( RE_BASENAME, 'posix', posix );
setReadOnly( RE_BASENAME, 'win32', win32 );


// EXPORTS //

module.exports = RE_BASENAME;
