'use strict';

/**
* Regular expression to split a Windows filename.
*
* @module @stdlib/regexp/filename-windows
* @type {RegExp}
*
* @example
* var RE_FILENAME_WINDOWS = require( '@stdlib/regexp/filename-windows' );
*
* var parts = RE_FILENAME_WINDOWS.exec( 'C:\\foo\\bar\\index.js' ).slice();
* // returns [ 'C:\\foo\\bar\\index.js', 'C:', '\\', 'foo\\bar\\', 'index.js', '.js' ]
*/


// MAIN //

/**
* Splits a Windows filename. Modified from Node.js [source]{@link https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65}.
*
* Regular expression: `/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+|)([\\\/]|)([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/`
*
* * `^`
*   - match any string which begins with
* * `()`
*   - capture (device)
* * `[a-zA-Z]:`
*   - match any upper or lowercase letter and a `:` literal
* * `|`
*   - OR
* * `[\\\/]`
*   - match a `\` or `/` literal character
* * `{2}`
*   - exactly two times
* * `[^\\\/]+`
*   - match anything but a `\` or `/` literal one or more times
* * `[\\\/]+`
*   - match a `\` or `/` literal one or more times
* * `[^\\\/]+`
*   - match anything but a `\` or `/` literal one or more times
* * `|)`
*   - OR capture nothing
* * `()`
*   - capture (slash)
* * `[\\\/]`
*   - match a `\` or `/` literal
* * `|)`
*   - OR capture nothing
* * `()`
*   - capture (dirname)
* * `[\s\S]`
*   - match any space or non-space character
* * `*?`
*   - zero or more times but do so non-greedily
* * `()`
*   - capture (basename)
* * `(?:)`
*   - capture but do not remember
* * `\.{1,2}`
*   - match a `.` literal one or two times
* * `|`
*   - OR
* * `[^\\\/]+?`
*   - match anything but a `\` or `/` literal one or more times, but do so non-greedily
* * `|)`
*   - OR capture nothing
* * `()`
*   - capture (extname)
* * `\.`
*   - match a `.` literal
* * `[^.\/\\]*`
*   - match anything but a `.`, `/`, or `\` literal zero or more times
* * `|)`
*   - OR capture nothing
* * `(?:)`
*   - capture but do not remember (trailing slash)
* * `[\\\/]*`
*   - match a `\` or `/` literal zero or more times
* * `$`
*   - end of string
*
* @constant
* @type {RegExp}
* @default /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+|)([\\\/]|)([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/
*/
var RE_FILENAME_WINDOWS = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+|)([\\\/]|)([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/; // eslint-disable-line no-useless-escape


// EXPORTS //

module.exports = RE_FILENAME_WINDOWS;
