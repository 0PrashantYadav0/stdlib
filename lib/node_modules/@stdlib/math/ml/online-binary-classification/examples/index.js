'use strict';

var normal = require( '@stdlib/math/base/random/normal' );
var binomial = require( '@stdlib/math/base/random/binomial' );
var exp = require( '@stdlib/math/base/special/exp' );
var onlineBinaryClassification = require( './../lib' );

var phat;
var lp;
var x1;
var x2;
var y;
var i;

// Create model:
var model = onlineBinaryClassification({
	'lambda': 1e-3,
	'loss': 'log',
	'intercept': true
});

// Update model as data comes in...
for ( i = 0; i < 10000; i++ ) {
	x1 = normal( 0.0, 1.0 );
	x2 = normal( 0.0, 1.0 );
	lp = 3.0 * x1 - 2.0 * x2 + 1.0;
	phat = 1.0 / ( 1.0 + exp( -lp ) );
	y = binomial( 1, phat ) ? 1.0 : -1.0;
	model.update( [ x1, x2 ], y );
}

// Extract model coefficients:
console.log( model.coefs );

// Predict new observations:
console.log( 'Pr(Y=1)_hat = %d; x1 = %d; x2 = %d', model.predict( [0.9,0.1], 'probability' ), 0.9, 0.1 );
console.log( 'y_hat = %d; x1 = %d; x2 = %d', model.predict( [0.1,0.9], 'link' ), 0.1, 0.9 );
console.log( 'y_hat = %d; x1 = %d; x2 = %d', model.predict( [0.9,0.9], 'link' ), 0.9, 0.9 );
