'use strict';

// MODULES //

var tape = require( 'tape' );
var WeightVector = require( './../lib/weight_vector.js' );
var squaredErrorLoss = require( './../lib/loss/squared_error.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof squaredErrorLoss, 'function', 'main export is a function' );
	t.end();
});

tape( 'the sub-gradient of the squared-error loss times the learning rate is added to the weights', function test( t ) {
	var expected;
	var weights;
	var epsilon;
	var eta;
	var x;
	var y;

	weights = new WeightVector( 3, false );
	weights.add( [1.0,2.0,3.0] );
	epsilon = 0.1;
	eta = 0.02;

	x = [ 1.0, 1.0, 1.0 ];
	y = 6.2; // <w,x> = 1*1 + 2*1 + 3*1 = 6

	// w := w - eta * ( <w,x> - y ) = [1,2,3] - 0.02 * ( 6.0 - 6.2 )
	expected = [ 1.004, 2.004, 3.004 ];

	squaredErrorLoss( weights, x, y, eta, epsilon );

	t.deepEqual( weights._data, expected, 'weights are correctly updated' );
	t.end();
});
