'use strict';

/**
* Given a new observation `(x,y)`, updates the weights using the [Huber loss]{@link https://en.wikipedia.org/wiki/Huber_loss} function.
*
* #### Notes
*
* The Huber loss uses squared-error loss for observations with error smaller than epsilon in magnitude and linear loss above that in order to decrease the influence of outliers on the model fit.
*
* @private
* @param {WeightVector} weights - current model coefficients
* @param {NumericArray} x - feature vector
* @param {number} y - response value
* @param {PositiveNumber} eta - current learning rate
* @param {PositiveNumber} epsilon - insensitivity parameter
*/
function huberLoss( weights, x, y, eta, epsilon ) {
	var p = weights.innerProduct( x ) - y;
	if ( p > epsilon ) {
		weights.add( x, -eta );
	} else if ( p < -epsilon ) {
		weights.add( x, +eta );
	} else {
		weights.add( x, -eta * p );
	}
} // end FUNCTION huberLoss()


// EXPORTS //

module.exports = huberLoss;
