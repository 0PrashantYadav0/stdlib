'use strict';

/**
* Update weights given new observation (y,x) when the used loss function is the squared error loss,
* i.e. the squared difference from the observed and fitted value.
*
* @private
* @param {WeightVector} weights - current model coefficients
* @param {number} y - response value
* @param {NumericArray} x - feature vector
* @param {PositiveNumber} eta - current learning rate
*/
function leastSquaresLoss( weights, y, x, eta ) {
	var loss = y - weights.innerProduct( x );
	weights.add( x, ( eta * loss ) );
} // end FUNCTION leastSquaresLoss()


// EXPORTS //

module.exports = leastSquaresLoss;
