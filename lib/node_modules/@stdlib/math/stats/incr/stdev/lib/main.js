/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var sqrt = require( '@stdlib/math/base/special/sqrt' );


// MAIN //

/**
* Returns an accumulator function which incrementally computes a corrected sample standard deviation.
*
* @returns {Function} accumulator function
*
* @example
* var accumulator = incrstdev();
*/
function incrstdev() {
	var mu = 0.0;
	var M2 = 0.0;
	var N = 0;
	var delta;

	return accumulator;

	/**
	* If provided a value, the accumulator function returns an updated corrected sample standard deviation. If not provided a value, the accumulator function returns the current corrected sample standard deviation.
	*
	* ## Method
	*
	* -   This implementation uses [Welford's method][algorithms-variance] for efficient computation.
	*
	* [algorithms-variance]: https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance
	*
	* @private
	* @param {number} [x] - new value
	* @returns {number} corrected sample standard deviation
	*
	* @example
	* var s = accumulator();
	* // returns 0.0
	*
	* s = accumulator( 2.0 );
	* // returns 0.0
	*
	* s = accumulator( -5.0 );
	* // returns ~4.95
	*
	* s = accumulator();
	* // returns ~4.95
	*/
	function accumulator( x ) {
		if ( arguments.length === 0 ) {
			if ( N < 2 ) {
				return 0.0;
			}
			return sqrt( M2 / (N-1) );
		}
		N += 1;
		delta = x - mu;
		mu += delta / N;
		M2 += delta * ( x - mu );
		if ( N < 2 ) {
			return 0.0;
		}
		return sqrt( M2 / (N-1) );
	}
}


// EXPORTS //

module.exports = incrstdev;
