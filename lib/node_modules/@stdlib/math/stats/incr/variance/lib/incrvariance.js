'use strict';

/**
* Returns an accumulator function which incrementally computes an unbiased sample variance.
*
* @returns {Function} accumulator function
*
* @example
* var accumulator = incrvariance();
*/
function incrvariance() {
	var mu = 0.0;
	var M2 = 0.0;
	var N = 0;
	var delta;

	return accumulator;

	/**
	* If provided a value, the accumulator function returns an updated unbiased sample variance. If not provided a value, the accumulator function returns the current unbiased sample variance.
	*
	* ## Method
	*
	* -   This implementation uses [Welford's method][algorithms-variance] for efficient computation.
	*
	* [algorithms-variance]: https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance
	*
	* @param {number} [x] - new value
	* @returns {number} unbiased sample variance
	*
	* @example
	* var s2 = accumulator();
	* // returns 0.0
	*
	* s2 = accumulator( 2.0 );
	* // returns 0.0
	*
	* s2 = accumulator( -5.0 );
	* // returns 24.5
	*
	* s2 = accumulator();
	* // returns 24.5
	*/
	function accumulator( x ) {
		if ( arguments.length === 0 ) {
			if ( N < 2 ) {
				return 0.0;
			}
			return M2 / (N-1);
		}
		N += 1;
		delta = x - mu;
		mu += delta / N;
		M2 += delta * ( x - mu );
		if ( N < 2 ) {
			return 0.0;
		}
		return M2 / (N-1);
	}
}


// EXPORTS //

module.exports = incrvariance;
