'use strict';

// MAIN //

/**
* Returns an accumulator function which incrementally computes a minimum value.
*
* @returns {Function} accumulator function
*
* @example
* var accumulator = incrmin();
*/
function incrmin() {
	var min = null;
	return accumulator;

	/**
	* If provided a value, the accumulator function returns an updated minimum value. If not provided a value, the accumulator function returns the current min.
	*
	* @param {number} [x] - new value
	* @returns {(number|null)} min value or null
	*
	* @example
	* var min = accumulator();
	* // returns null
	*
	* min = accumulator( 3.14 );
	* // returns 3.14
	*
	* min = accumulator( -5.0 );
	* // returns -5.0
	*
	* min = accumulator( 10.1 );
	* // returns -5.0
	*
	* min = accumulator();
	* // returns -5.0
	*/
	function accumulator( x ) {
		if ( arguments.length === 0 ) {
			return min;
		}
		if ( x < min || min === null ) {
			min = x;
		}
		return min;
	}
}


// EXPORTS //

module.exports = incrmin;
