'use strict';

// MODULES //

var max = require( '@stdlib/math/base/special/max' );
var min = require( '@stdlib/math/base/special/min' );
var stdev = require( './stdev.js' );
var mean = require( './mean.js' );


// MAIN //

/**
* Computes the Pearson product-moment correlation coefficient between `x` and `y`.
*
* @private
* @param {NumericArray} x - first data array
* @param {NumericArray} y - second data array
* @returns {number} correlation coefficient
*
* @example
* var x = [ 1.0, 2.0, 2.0, 1.0 ];
* var y = [ 1.8, 2.2, 2.5, 1.4 ];
* var r = pcorr( x, y );
* // returns ~0.905
*/
function pcorr( x, y ) {
	var denom;
	var num;
	var out;
	var xy;
	var xm;
	var ym;
	var i;
	var n;

	n = x.length;
	xm = mean( x );
	ym = mean( y );
	xy = 0.0;
	for ( i = 0; i < n; i++ ) {
		xy += x[ i ] * y[ i ];
	}
	num = xy - ( n * xm * ym );
	denom = ( n-1 ) * stdev( x ) * stdev( y );
	out = num / denom;

	// Handle rounding errors:
	return max( min( out, 1.0 ), -1.0 );
}


// EXPORTS //

module.exports = pcorr;
