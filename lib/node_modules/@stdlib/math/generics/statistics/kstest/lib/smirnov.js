'use strict';

// MODULES //

var binomcoefln = require( '@stdlib/math/base/special/binomcoefln' );
var incrspace = require( '@stdlib/math/generics/utils/incrspace' );
var floor = require( '@stdlib/math/base/special/floor' );
var exp = require( '@stdlib/math/base/special/exp' );
var ln = require( '@stdlib/math/base/special/ln' );


// PKOLMOGOROV1 //

/**
* Evaluates the CDF for the one-sided test statistics, i.e. the maximum by which the empirical cdf exceeds / is less than the hypothesized cdf
*
* @private
* @param {number} d - the argument of the CDF of D_n^+ / D_n^-
* @param {PositiveInteger} n - number of variates
* @returns {number} evaluated CDF, i.e. P( D_n^+ < d )
*/
function pKolmogorov1( d, n ) {
	var len;
	var ret;
	var i;

	if ( d <= 0.0 ) {
		return 0.0;
	}
	if ( d >= 1.0 ) {
		return 1.0;
	}
	len = floor( n * (1.0-d) ) + 1;
	ret = 0.0;
	for ( i = 0; i < len; i++ ) {
		ret += exp( binomcoefln( n, i ) + ( n - i ) * ln( 1.0 -
		d - i/n ) + ( i - 1.0 ) * ln( d + i/n ) );
	}
	return 1.0 - d * ret;
} // end FUNCTION pKolmogorov1()


// EXPORTS //

module.exports = pKolmogorov1;
