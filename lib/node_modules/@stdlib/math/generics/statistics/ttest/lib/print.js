'use strict';

// MODULES //

var isPositiveInteger = require( '@stdlib/utils/is-positive-integer' );
var isObject = require( '@stdlib/utils/is-plain-object' );
var hasOwnProp = require( '@stdlib/utils/has-own-property' );
var roundn = require( '@stdlib/math/base/special/roundn' );


// MAIN //

/**
* Pretty-print output of test.
*
* @param {Object} [opts] - options object
* @param {PositiveInteger} [opts.numdigits=4] - number of degits after the decimal point
* @returns {string} formatted output
*/
function print( opts ) {
	/* jshint validthis: true */ // TODO: eslint
	var dgts;
	var str;

	dgts = 4;
	if ( arguments.length > 0 ) {
		if ( !isObject( opts ) ) {
			throw new TypeError( 'invalid input argument. First argument must be an options object. Value: `' + opts + '`.' );
		}
		if ( hasOwnProp( opts, 'numdigits' ) ) {
			if ( !isPositiveInteger( opts.numdigits ) ) {
				throw new TypeError( 'invalid option. numdigits option must be a positive integer. Option: `' + opts.numdigits + '`.' );
			}
			dgts = opts.numdigits;
		}
	}

	str = '';
	str += this.method;
	str += '\n\n';
	str += 'Alternative hypothesis: ';
	if ( this.method === 'Paired t-test' ) {
		str += 'True difference in means is ';
	} else {
		str += 'True mean is ';
	}
	switch ( this.alternative ) {
	case 'two-sided':
		str += 'not equal to ';
	break;
	case 'less':
		str += 'less than ';
	break;
	case 'greater':
		str += 'greater than ';
	break;
	}
	str += this.nullValue;
	str += '\n\n';
	str += '\tpValue: ' + roundn( this.pValue, -dgts ) + '\n';
	str += '\tstatistic: ' + roundn( this.statistic, -dgts ) + '\n';
	str += '\tdf: ' + this.df + '\n';
	str += '\t' + (1.0-this.alpha)*100 + '% confidence interval: [' +
		roundn( this.ci[0], -dgts ) +
		',' +
		roundn( this.ci[1], -dgts ) +
	']';
	str += '\n\n';
	str += 'Test Decision: ';
	str += this.rejected ?
		'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level' :
		'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level' ;
	str += '\n';
	return str;
} // end FUNCTION print()


// EXPORTS //

module.exports = print;
