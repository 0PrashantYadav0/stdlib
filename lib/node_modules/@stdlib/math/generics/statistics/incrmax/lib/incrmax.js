'use strict';

// INCREMENTAL MAX //

/**
* Returns an accumulator function which incrementally computes a maximum value.
*
* @returns {Function} accumulator function
*
* @example
* var accumulator = incrmax();
*/
function incrmax() {
	var max = null;

	/**
	* If provided a value, the accumulator function returns an updated maximum value. If not provided a value, the accumulator function returns the current max.
	*
	* @param {number} [x] - new value
	* @returns {number|null} max value or null
	*
	* @example
	* var max = accumulator();
	* // returns null
	*
	* max = accumulator( 3.14 );
	* // returns 3.14
	*
	* max = accumulator( -5.0 );
	* // returns 3.14
	*
	* max = accumulator( 10.1 );
	* // returns 10.1
	*
	* max = accumulator();
	* // returns 10.1
	*/
	return function accumulator( x ) {
		if ( arguments.length === 0 ) {
			return max;
		}
		if ( x > max || max === null ) {
			max = x;
		}
		return max;
	};
} // end FUNCTION incrmax()


// EXPORTS //

module.exports = incrmax;
