#!/usr/bin/env julia

using Distributions
import JSON

"""
	gen( x, m, n, k , name )

Generate fixture data and write to file.

# Arguments

* `x`: input value
* `m`: number of white balls in urn
* `n`: number of black balls in urn
* `k`: number of draws
* `name::AbstractString`: output filename

"""
function gen( x, m, n, k, name )
	z = Array( Float64, length(x) );
	for i in eachindex(x)
		z[ i ] = pdf( Hypergeometric( m[i], n[i], k[i] ), x[i] );
	end

	# Store data to be written to file as a collection:
	data = Dict([
		("x", x),
		("m", m),
		("n", n),
		("k", k),
		("expected", z)
	]);

	# Based on the script directory, create an output filepath:
	filepath = joinpath( dir, name );

	# Write the data to the output filepath as JSON:
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Random (small n, small p):
x = round( rand( 1000 ) * 200 );
m = round( rand( 1000 ) * 200 + 20 );
n = round( rand( 1000 ) * 200 + 20 );
k = round( rand() * (m+n) );
gen( x, m, n, k, "data.json" );
