'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var expm1 = require( '@stdlib/math/base/special/expm1' );
var log1p = require( '@stdlib/math/base/special/log1p' );
var LNHALF = require( '@stdlib/math/constants/float64-ln-half' );


// MAIN //

/**
* Evaluates the logarithm of the cumulative distribution function (CDF) for a Laplace distribution with location parameter `mu` and scale parameter `b` at value `x`.
*
* @param {number} x - input value
* @param {number} mu - location parameter
* @param {PositiveNumber} b - scale parameter
* @returns {number} evaluated logarithm of CDF
*
* @example
* var y = logcdf( 2.0, 0.0, 1.0 );
* // returns ~-0.07
* @example
* var y = logcdf( 5.0, 10.0, 3.0 );
* // returns ~-2.364
* @example
* var y = logcdf( NaN, 0.0, 1.0 );
* // returns NaN
* @example
* var y = logcdf( 2, NaN, 1.0 );
* // returns NaN
* @example
* var y = logcdf( 2.0, 0.0, NaN );
* // returns NaN
* @example
* // Negative scale parameter:
* var y = logcdf( 2.0, 0.0, -1.0 );
* // returns NaN
*/
function logcdf( x, mu, b ) {
	var z;
	if (
		isnan( x ) ||
		isnan( mu ) ||
		isnan( b )
	) {
		return NaN;
	}
	if ( b <= 0.0 ) {
		return NaN;
	}
	z = ( x - mu ) / b;
	if ( x < mu ) {
		return LNHALF + z;
	} else {
		return LNHALF + log1p( -expm1( -z ) );
	}
} // end FUNCTION logcdf()


// EXPORTS //

module.exports = logcdf;
