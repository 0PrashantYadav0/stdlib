'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );


// MAIN //

/**
* Returns the expected value of a negative binomial distribution.
*
* @param {PositiveNumber} r - number of failures until experiment is stopped
* @param {Probability} p - success probability
* @returns {NonNegativeNumber} expected value
*
* @example
* var mean = getMean( 100, 0.2 );
* // returns 400
* @example
* var mean = getMean( 20, 0.5 );
* // returns 20
* @example
* var mean = getMean( 10.3, 0.8 );
* // returns ~2.575
* @example
* var mean = getMean( -2, 0.5 );
* // returns NaN
* @example
* var mean = getMean( 20, 1.1 );
* // returns NaN
* @example
* var mean = getMean( 20, NaN );
* // returns NaN
* @example
* var mean = getMean( NaN, 0.5 );
* // returns NaN
*/
function getMean( r, p ) {
	if (
		isnan( r ) ||
		isnan( p )
	) {
		return NaN;
	}
	if (
		r <= 0.0 ||
		p < 0.0 ||
		p > 1.0
	) {
		return NaN;
	}
	return ( (1.0-p) * r ) / p;
} // end FUNCTION getMean()


// EXPORTS //

module.exports = getMean;
