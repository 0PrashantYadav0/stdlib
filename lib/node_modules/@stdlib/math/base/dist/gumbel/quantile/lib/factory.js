'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var ln = require( '@stdlib/math/base/special/ln' );
var nan = require( './nan.js' );


// MAIN //

/**
* Returns a function for evaluating the quantile function for a Gumbel distribution with location parameter `mu` and scale parameter `beta`.
*
* @param {number} mu - location parameter
* @param {PositiveNumber} beta - scale parameter
* @returns {Function} quantile function
*/
function factory( mu, beta ) {
	if ( isnan( mu ) || isnan( beta ) ) {
		return nan;
	}
	if ( beta <= 0.0 ) {
		return nan;
	}
	return quantile;

	/**
	* Evaluates the quantile function for a Gumbel distribution.
	*
	* @private
	* @param {Probability} p - input value
	* @returns {number} evaluated quantile function
	*
	* @example
	* var y = quantile( 0.3 );
	* // returns <number>
	*/
	function quantile( p ) {
		if ( isnan( p ) || p < 0.0 || p > 1.0 ) {
			return NaN;
		}
		return mu - (beta * ln( -ln( p ) ));
	} // end FUNCTION quantile()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
