'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var gamma = require( '@stdlib/math/base/special/gamma' );
var exp = require( '@stdlib/math/base/special/exp' );
var nan = require( './nan.js' );


// MAIN //

/**
* Returns a function for evaluating the moment-generating function (MGF) of a Gumbel distribution with location parameter `mu` and scale parameter `b`.
*
* @param {number} mu - mean
* @param {PositiveNumber} beta - scale parameter
* @returns {Function} MGF
*
* @example
* var mgf = factory( 0.0, 3.0 );
*
* var y = mgf( 1.5 );
* // returns ~0.27
*
* y = mgf( -1.0 );
* // returns 6.0
*/
function factory( mu, beta ) {
	if (
		isnan( mu ) ||
		isnan( beta ) ||
		beta <= 0.0
	) {
		return nan;
	}
	return mgf;

	/**
	* Evaluates the moment-generating function (MGF) for a Gumbel distribution.
	*
	* @private
	* @param {number} t - input value
	* @returns {number} evaluated MGF
	*
	* @example
	* var y = mgf( 0.5 );
	* // returns <number>
	*/
	function mgf( t ) {
		if ( t >= 1.0/beta ) {
			return NaN;
		}
		return gamma( 1.0 - (beta * t) ) * exp( mu * t );
	} // end FUNCTION mgf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
