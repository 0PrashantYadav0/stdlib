#!/usr/bin/env julia

import Distributions: entropy, Gumbel
import JSON

"""
	gen( mu, beta, name )

Generate fixture data and write to file.

# Arguments

* `mu`: location parameter
* `beta`: scale parameter
* `name::AbstractString`: output filename

# Examples

``` julia
julia> mu = rand( 1000 ) * -10.0;
julia> sigma = rand( 1000 ) * 5.0;
julia> gen( mu, beta, "data.json" );
```
"""
function gen( mu, beta, name )
	z = Array( Float64, length(mu) );
	for i in eachindex(mu)
		z[ i ] = entropy( Gumbel( mu[i], beta[i] ) );
	end

	# Store data to be written to file as a collection:
	data = Dict([
		("mu", mu),
		("beta", beta),
		("expected", z)
	]);

	# Based on the script directory, create an output filepath:
	filepath = joinpath( dir, name );

	# Write the data to the output filepath as JSON:
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Generate fixtures:
mu = rand( 100 ) * 2.0 - 4.0;
beta = rand( 100 ) * 5.0;
gen( mu, beta, "data.json" );
