'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/assert/is-nan' );


// MAIN //

/**
* Returns the variance of a beta prime distribution.
*
* @param {PositiveNumber} alpha - first shape parameter
* @param {PositiveNumber} beta - second shape parameter
* @returns {PositiveNumber} variance
*
* @example
* var v = variance( 1.0, 3.0 );
* // returns ~0.75
* @example
* var v = variance( 4.0, 12.0 );
* // returns ~0.05
* @example
* var v = variance( 8.0, 2.5 );
* // returns ~67.556
* @example
* var v = variance( 8.0, 2.0 );
* // returns NaN
* @example
* var v = variance( 1.0, -0.1 );
* // returns NaN
* @example
* var v = variance( -0.1, 1.0 );
* // returns NaN
* @example
* var v = variance( 2.0, NaN );
* // returns NaN
* @example
* var v = variance( NaN, 2.0 );
* // returns NaN
*/
function variance( alpha, beta ) {
	var bm1;
	if (
		isnan( alpha ) ||
		alpha <= 0.0 ||
		isnan( beta ) ||
		beta <= 2.0
	) {
		return NaN;
	}
	bm1 = beta - 1.0;
	return ( alpha * ( alpha + bm1 ) ) / ( ( bm1-1.0 ) * bm1*bm1 );
} // end FUNCTION variance()


// EXPORTS //

module.exports = variance;
