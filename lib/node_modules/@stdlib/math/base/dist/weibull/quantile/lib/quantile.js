'use strict';

// FUNCTIONS //

var ln = require( '@stdlib/math/base/special/ln' );
var pow = require( '@stdlib/math/base/special/pow' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );


// QUANTILE //

/**
* Evaluates the quantile function for a Weibull distribution with shape parameter `lambda` and scale parameter `k` at a probability `p`.
*
* @param {Number} p - input value
* @param {Number} lambda - shape parameter
* @param {Number} k - scale parameter
* @returns {Number} evaluated quantile function
*/
function quantile( p, lambda, k ) {
	if ( lambda <= 0 || k <= 0 ) {
		return NaN;
	}
	if ( isnan( lambda ) || isnan( k ) ) {
		return NaN;
	}
	if ( p !== p || p < 0.0 || p > 1.0 ) {
		return NaN;
	}
	return lambda * pow( -ln( 1.0 - p ) , 1.0/k );
} // end FUNCTION quantile()


// EXPORTS //

module.exports = quantile;
