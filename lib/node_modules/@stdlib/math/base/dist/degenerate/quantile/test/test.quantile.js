'use strict';

// MODULES //

var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var quantile = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof quantile, 'function', 'main export is a function' );
	t.end();
});

tape( 'if provided `NaN` for any parameter, the function returns `NaN`', function test( t ) {
	var y;

	y = quantile( NaN, 0.0 );
	t.equal( isnan( y ), true, 'returns NaN' );

	y = quantile( 0.0, NaN );
	t.equal( isnan( y ), true, 'returns NaN' );

	y = quantile( NaN, NaN );
	t.equal( isnan( y ), true, 'returns NaN' );

	t.end();
});

tape( 'if provided a number outside the interval `[0,1]` for `p`, the function returns `NaN`', function test( t ) {
	var y;

	y = quantile( 1.1, 2.0 );
	t.equal( isnan( y ), true, 'returns NaN' );

	y = quantile( -0.1, 2.0 );
	t.equal( isnan( y ), true, 'returns NaN' );

	t.end();
});

tape( 'if provided a number on the interval `[0,1]` for `p`, the function returns `mu`', function test( t ) {
	var mu;
	var y;

	mu = 2.0;

	y = quantile( 0.3, mu );
	t.equal( y, mu, 'returns `mu`' );

	y = quantile( 0.8, mu );
	t.equal( y, mu, 'returns `mu`' );

	t.end();
});
