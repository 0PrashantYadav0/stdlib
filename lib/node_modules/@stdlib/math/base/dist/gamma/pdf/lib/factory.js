'use strict';

// MODULES //

var gamma = require( 'gamma' );


// FUNCTIONS //

var exp = require( '@stdlib/math/base/special/exp' ),
	ln = require( '@stdlib/math/base/special/log' ),
	pow = require( '@stdlib/math/base/special/pow' );


// FACTORY //

/**

*	Partially applies shape parameter `alpha` and rate parameter `beta` and returns a function for evaluating the probability density function (PDF) for a Gamma distribution.
*
* @param {Number} alpha - shape parameter
* @param {Number} beta - rate parameter
* @returns {Function} PDF
*/
function factory( alpha, beta ) {

	/**

	*	Evaluates the probability density function (PDF) for a Gamma distribution.
	*

	* @param {Number} x - input value
	* @returns {Number} evaluated PDF
	*/
	return function pdf( x ) {
		var lnl;
		if ( x > 0 ) {
			lnl = alpha * ln( beta ) - gamma.log( alpha ) + ( alpha - 1 ) * ln( x ) - beta * x;
			return exp( lnl );
		} else if ( x === 0 ) {
			return ( pow( beta, alpha ) * pow( x, alpha - 1 ) * exp( - beta * x ) ) / gamma( alpha );
		} else {
			return 0;
		}
	};
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
