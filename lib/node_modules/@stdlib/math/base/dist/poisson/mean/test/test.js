'use strict';

// MODULES //

var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );
var NINF = require( '@stdlib/math/constants/float64-ninf' );
var getMean = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof getMean, 'function', 'main export is a function' );
	t.end();
});

tape( 'if provided `NaN` for `lambda`, the function returns `NaN`', function test( t ) {
	var mean = getMean( NaN );
	t.equal( isnan( mean ), true, 'returns NaN' );
	t.end();
});

tape( 'if provided a mean parameter `lambda` that is not a nonnegative number, the function returns `NaN`', function test( t ) {
	var mean;

	mean = getMean( -1.0 );
	t.equal( isnan( mean ), true, 'returns NaN' );

	mean = getMean( NINF );
	t.equal( isnan( mean ), true, 'returns NaN' );

	t.end();
});

tape( 'the function returns the expected value for a Poisson distribution with the given `lambda` parameter', function test( t ) {
	var mean = getMean( 0.5 );
	t.equal( mean, 0.5, 'returns 0.5' );

	mean = getMean( 9 );
	t.equal( mean, 9, 'returns 9' );

	t.end();
});
