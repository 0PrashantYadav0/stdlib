'use strict';

// MODULES //

var factorialln = require( 'compute-factorialln' ),
	isNonNegativeInteger = require( 'validate.io-nonnegative-integer');


// FUNCTIONS //

var exp = require( '@stdlib/math/base/special/exp' ),
	ln = require( '@stdlib/math/base/special/log' );


// FACTORY //

/**

*	Partially applies mean parameter `lambda` and returns a function for evaluating the probability density function (PDF) for a Poisson distribution.
*
* @param {Number} lambda - mean parameter
* @returns {Function} PDF
*/
function factory( lambda ) {
	/**

	*	Evaluates the probability density function (PDF) for a Poisson distribution.
	*

	* @param {Number} x - input value
	* @returns {Number} evaluated PDF
	*/
	return function pdf( x ) {
		var lnl;
		if ( isNonNegativeInteger( x ) ) {
			lnl = x * ln( lambda ) - lambda - factorialln( x );
			return exp( lnl );
		} else {
			return 0;
		}
	};
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
