'use strict';

// MODULES //

var betainc = require( '@stdlib/math/base/special/betainc' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );
var nan = require( './nan.js' );


// MAIN //

/**
* Returns a function for evaluating the cumulative distribution function (CDF) for a beta distribution with first shape parameter `alpha` and second shape parameter `beta`.
*
* @param {PositiveNumber} alpha - first shape parameter
* @param {PositiveNumber} beta - second shape parameter
* @returns {Function} CDF
*
* @example
* var mycdf = factory( 0.5, 0.5 );
*
* var y = mycdf( 0.8 );
* // returns ~0.705
*
* y = mycdf( 0.3 );
* // returns ~0.369
*/
function factory( alpha, beta ) {
	if (
		isnan( alpha ) ||
		isnan( beta )
	) {
		return nan;
	}
	if (
		alpha <= 0.0 ||
		beta <= 0.0
	) {
		return nan;
	}
	/**
	* Evaluates the cumulative distribution function (CDF) for a beta distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {number} evaluated CDF
	*
	* @example
	* var y = cdf( 2.0 );
	* // returns <number>
	*/
	return function cdf( x ) {
		if ( isnan( x ) ) {
			return NaN;
		}
		if ( x <= 0.0 ) {
			return 0.0;
		}
		if ( x >= 1.0 ) {
			return 1.0;
		}
		return betainc( x, alpha, beta );
	}; // end FUNCTION cdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
