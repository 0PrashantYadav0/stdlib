'use strict';

// MODULES //

var isNonNegativeInteger = require( '@stdlib/math/base/utils/is-nonnegative-integer' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );


// MAIN //

/**
* Returns the mode of an Erlang distribution.
*
* @param {NonNegativeInteger} k - shape parameter
* @param {PositiveNumber} lambda - rate parameter
* @returns {NonNegativeNumber} mode
*
* @example
* var v = mode( 1, 1.0 );
* // returns 0.0
* @example
* var v = mode( 4, 12.0 );
* // returns 0.25
* @example
* var v = mode( 8, 2.0 );
* // returns 3.5
* @example
* var v = mode( 1.5, 2.0 );
* // returns NaN
* @example
* var v = mode( 1, -0.1 );
* // returns NaN
* @example
* var v = mode( -0.1, 1.0 );
* // returns NaN
* @example
* var v = mode( 2, NaN );
* // returns NaN
* @example
* var v = mode( NaN, 2.0 );
* // returns NaN
*/
function mode( k, lambda ) {
	if (
		!isNonNegativeInteger( k ) ||
		isnan( lambda ) ||
		lambda <= 0.0
	) {
		return NaN;
	}
	return ( k - 1 ) / lambda;
} // end FUNCTION mode()


// EXPORTS //

module.exports = mode;
