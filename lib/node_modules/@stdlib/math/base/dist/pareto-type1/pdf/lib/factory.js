'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var pow = require( '@stdlib/math/base/special/pow' );
var nan = require( './nan.js' );


// MAIN //

/**
* Returns a function for evaluating the probability density function (PDF) for a Pareto distribution with shape parameter `alpha` and scale parameter `beta`.
*
* @param {PositiveNumber} alpha - shape parameter
* @param {PositiveNumber} beta - scale parameter
* @returns {Function} PDF
*
* @example
* var mypdf = factory( 0.5, 0.5 );
*
* var y = mypdf( 0.8 );
* // returns ~0.494
*
* y = mypdf( 2.0 );
* // returns ~0.125
*/
function factory( alpha, beta ) {
	if ( isnan( alpha ) || isnan( beta ) ) {
		return nan;
	}
	if ( alpha <= 0.0 || beta <= 0.0 ) {
		return nan;
	}
	return pdf;

	/**
	* Evaluates the probability density function (PDF) for a Pareto distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {number} evaluated PDF
	*
	* @example
	* var y = pdf( 4.0 );
	* // returns <number>
	*/
	function pdf( x ) {
		var denom;
		var num;
		if ( isnan( x ) ) {
			return NaN;
		}
		if ( x >= beta ) {
			num = alpha * pow( beta, alpha );
			denom = pow( x, alpha + 1.0 );
			return num / denom;
		}
		return 0.0;
	} // end FUNCTION pdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
