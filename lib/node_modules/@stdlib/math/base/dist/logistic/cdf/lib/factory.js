'use strict';

// MODULES //

var degenerate = require( '@stdlib/math/base/dist/degenerate/cdf' ).factory;
var isnan = require( '@stdlib/math/base/utils/is-nan' );
var exp = require( '@stdlib/math/base/special/exp' );
var nan = require( './nan.js' );


// FACTORY //

/**
* Partially applies location parameter `mu` and scale parameter `s` and returns a function for evaluating the cumulative distribution function (CDF) for a Logistic distribution.
*
* @param {number} mu - location parameter
* @param {NonNegativeNumber} s - scale parameter
* @returns {Function} CDF
*
* @example
* var cdf = factory( 3.0, 1.5 );
*
* var y = cdf( 1.0 );
* // returns ~0.209
*
* y = cdf( 4.0 );
* // returns ~0.661
*/
function factory( mu, s ) {
	if ( isnan( mu ) || isnan( s ) ) {
		return nan;
	}
	if ( s < 0.0 ) {
		return nan;
	}
	if ( s === 0.0 ) {
		return degenerate( mu );
	}
	/**
	* Evaluates the cumulative distribution function (CDF) for a Logistic distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {Probability} evaluated CDF
	*
	* @example
	* var y = cdf( 2.0 );
	* // returns <number>
	*/
	return function cdf( x ) {
		var z;
		if ( isnan( x ) ) {
			return NaN;
		}
		z = ( x - mu ) / s;
		return 1.0 / ( 1.0 + exp( -z ) );
	}; // end FUNCTION cdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
