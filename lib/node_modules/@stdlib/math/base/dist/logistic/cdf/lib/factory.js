'use strict';

// FUNCTIONS //

var exp = require( '@stdlib/math/base/special/exp' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );
var nan = require( './nan.js' );
var degenerate = require( './degenerate.js' );


// FACTORY //

/**
* Partially applies location parameter `mu` and scale parameter `s` and returns a function for evaluating the cumulative distribution function (CDF) for a Logistic distribution.
*
* @param {Number} mu - location parameter
* @param {Number} s - scale parameter
* @returns {Function} CDF
*/
function factory( mu, s ) {
	if ( isnan( mu ) || isnan( s ) ) {
		return nan;
	}
	if ( s < 0.0 ) {
		return nan;
	}
	if ( s === 0.0 ) {
		return degenerate( mu );
	}
	/**
	* Evaluates the cumulative distribution function (CDF) for a Logistic distribution.
	*
	* @param {Number} x - input value
	* @returns {Number} evaluated CDF
	*/
	return function cdf( x ) {
		if ( isnan( x ) ) {
			return NaN;
		}
		var z = ( x - mu ) / s;
		return 1 / ( 1 + exp( -z ) );
	};
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
