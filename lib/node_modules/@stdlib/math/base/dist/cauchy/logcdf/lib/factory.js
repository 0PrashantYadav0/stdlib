'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var atan2 = require( '@stdlib/math/base/special/atan2' );
var ln = require( '@stdlib/math/base/special/ln' );
var nan = require( './nan.js' );


// VARIABLES //

var ONE_OVER_PI = 0.3183098861837907;


// FACTORY //

/**
* Returns a function for evaluating the logarithm of the cumulative distribution function (CDF) for a Cauchy distribution with scale parameter `gamma` and location parameter `x0`.
*
* @param {number} x0 - location parameter
* @param {PositiveNumber} gamma - scale parameter
* @returns {Function} logCDF
*
**@example
* var logcdf = factory( 10.0, 2.0 );
* var y = logcdf( 10.0 );
* // returns -0.693
*
* y = logcdf( 12.0 );
* // returns -0.288
*/
function factory( x0, gamma ) {
	if (
		isnan( gamma ) ||
		isnan( x0 ) ||
		gamma <= 0.0
	) {
		return nan;
	}
	/**
	* Evaluates the logarithm of the cumulative distribution function (CDF) for a Cauchy distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {Probability} evaluated logCDF
	*
	* @example
	* var y = logcdf( 2.0 );
	* // returns <number>
	*/
	return function logcdf( x ) {
		if ( isnan( x ) ) {
			return NaN;
		}
		return ln( ONE_OVER_PI * atan2( x - x0, gamma ) + 0.5 );
	}; // end FUNCTION logcdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
