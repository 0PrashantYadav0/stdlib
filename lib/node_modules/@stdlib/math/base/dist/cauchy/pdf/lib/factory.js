'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var pow = require( '@stdlib/math/base/special/pow' );
var PI = require( '@stdlib/math/constants/float64-pi' );
var nan = require( './nan.js' );


// MAIN //

/**
* Returns a function for evaluating the probability density function (PDF) for a Cauchy distribution with scale parameter `gamma` and location parameter `x0`.
*
* @param {number} x0 - location parameter
* @param {PositiveNumber} gamma - scale parameter
* @returns {Function} PDF
*
* @example
* var pdf = factory( 4.0, 2.0 );
*
* var y = pdf( 10.0 );
* // returns ~0.0159
*
* y = pdf( 3.0 );
* // returns ~0.127
*/
function factory( x0, gamma ) {
	if (
		isnan( gamma ) ||
		isnan( x0 ) ||
		gamma <= 0.0
	) {
		return nan;
	}
	/**
	* Evaluates the probability density function (PDF) for a Cauchy distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {number} evaluated PDF
	*
	* @example
	* var y = pdf( 2.3 );
	* // returns <number>
	*/
	return function pdf( x ) {
		var denom;
		if ( isnan( x ) ) {
			return NaN;
		}
		denom = PI * gamma * ( 1.0 + pow( (x - x0) / gamma, 2.0 ) );
		return 1.0 / denom;
	}; // end FUNCTION pdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
