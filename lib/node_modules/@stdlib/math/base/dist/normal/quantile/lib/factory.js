'use strict';

// MODULES //

var erfinv = require( '@stdlib/math/base/special/erfinv' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );
var nan = require( './nan.js' );
var degenerate = require( './degenerate.js' );


// FACTORY //

/**
* Returns a function for evaluating the quantile function of a Normal distribution.
*
* @param {Number} mu - mean
* @param {Number} sigma - standard deviation
* @returns {Function} quantile function
*
* @example
* var quantile = factory( 10, 2 );
* var y = quantile( 0.5 );
* // returns 10
* y = quantile( 0.8 );
* // returns ~11.683
*/
function factory( mu, sigma ) {
	var A = mu;
	var B = sigma * sqrt( 2 );

	if ( sigma < 0 ) {
		return nan;
	}
	if ( sigma === 0 ) {
		degenerate( mu );
	}
	/**
	* Evaluates the quantile function for a Normal distribution.
	*
	* @param {Number} p - input value
	* @returns {Number} evaluated quantile function
	*
	* @example
	* var y = quantile( 0.3 );
	* // returns <number>
	*/
	return function quantile( p ) {
		if ( p !== p || p < 0 || p > 1 ) {
			return NaN;
		}
		return A + B * erfinv( 2 * p - 1 );
	};
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
