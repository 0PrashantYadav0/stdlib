'use strict';

// MODULES //

var erfinv = require( '@stdlib/math/base/special/erfinv' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );


// QUANTILE //

/**
* Evaluates the quantile function for a Normal distribution with mean `mu` and standard deviation `sigma` at a probability `p`.
*
* @param {Number} p - input value
* @param {Number} mu - mean
* @param {Number} sigma - standard deviation
* @returns {Number} evaluated quantile function
*
* @example
* var y = quantile( 0.8, 0, 1 );
* // returns ~0.842
* @example
* var y = quantile( 0.5, 4, 2 );
* // returns 4
* @example
* var y = quantile( 1.1, 0, 1 );
* // returns NaN
* @example
* var y = quantile( -0.2, 0, 1 );
* // returns NaN
* @example
* var y = quantile( NaN, 0, 1 );
* // returns NaN
* @example
* var y = quantile( 0, NaN, 1 );
* // returns NaN
* @example
* var y = quantile( 0, 0, NaN );
* // returns NaN
* @example
* // Negative standard deviation:
* var y = quantile( 0.5, 0, -1 );
* // returns NaN
*/
function quantile( p, mu, sigma ) {
	if ( p !== p || p < 0 || p > 1 ) {
		return NaN;
	}
	if ( sigma < 0 ) {
		return NaN;
	}
	if ( sigma === 0 ) {
		return mu;
	}

	var A = mu;
	var B = sigma * sqrt( 2 );

	return A + B * erfinv( 2 * p - 1 );
} // end FUNCTION quantile()


// EXPORTS //

module.exports = quantile;
