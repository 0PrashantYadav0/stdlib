'use strict';

// MODULES //

var degenerate = require( '@stdlib/math/base/dist/degenerate/cdf' ).factory;
var isnan = require( '@stdlib/math/base/utils/is-nan' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );
var erf = require( '@stdlib/math/base/special/erf' );
var nan = require( './nan.js' );


// FACTORY //

/**
* Returns a function for evaluating the cumulative distribution function (CDF) for a Normal distribution.
*
* @param {number} mu - mean
* @param {NonNegativeNumber} sigma - standard deviation
* @returns {Function} function to evaluate the cumulative distribution function
*
* @example
* var cdf = factory( 10.0, 2.0 );
* var y = cdf( 10.0 );
* // returns 0.5
* y = cdf( 12.0 );
* // returns ~0.841
*/
function factory( mu, sigma ) {
	var A = 0.5;
	var B = sigma * sqrt( 2.0 );

	if ( isnan( mu ) || isnan( sigma ) ) {
		return nan;
	}
	if ( sigma < 0.0 ) {
		return nan;
	}
	if ( sigma === 0.0 ) {
		return degenerate( mu );
	}
	/**
	* Evaluates the cumulative distribution function (CDF) for a Normal distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {Probability} evaluated CDF
	*
	* @example
	* var y = cdf( 2 );
	* // returns <number>
	*/
	return function cdf( x ) {
		if ( isnan( x ) ) {
			return NaN;
		}
		var C = x - mu;
		return A * ( 1.0 + erf( C / B ) );
	};
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
