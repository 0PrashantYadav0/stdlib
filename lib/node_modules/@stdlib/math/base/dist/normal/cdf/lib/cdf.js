'use strict';

// MODULES //

var erf = require( '@stdlib/math/base/special/erf' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );


// CDF //

/**
* Evaluates the cumulative distribution function (CDF) for a Normal distribution with mean `mu` and standard deviation `sigma` at a value `x`.
*
* @param {number} x - input value
* @param {number} mu - mean
* @param {NonNegativeNumber} sigma - standard deviation
* @returns {Probability} evaluated cumulative distribution function
*
* @example
* var y = cdf( 2.0, 0.0, 1.0 );
* // returns ~0.977
* @example
* var y = cdf( -1.0, -1.0, 2.0 );
* // returns 0.5
* @example
* var y = cdf( -1.0, 4.0, 2.0 );
* // returns ~0.006
* @example
* var y = cdf( NaN, 0.0, 1.0 );
* // returns NaN
* @example
* var y = cdf( 0.0, NaN, 1.0 );
* // returns NaN
* @example
* var y = cdf( 0.0, 0.0, NaN );
* // returns NaN
* @example
* // Negative standard deviation:
* var y = cdf( 2.0, 0.0, -1.0 );
* // returns NaN
*/
function cdf( x, mu, sigma ) {
	if (
		isnan( x ) ||
		isnan( mu ) ||
		isnan( sigma )
	) {
		return NaN;
	}
	if ( sigma < 0.0 ) {
		return NaN;
	}
	if ( sigma === 0.0 ) {
		return (x < mu) ? 0.0 : 1.0;
	}
	var A = 0.5;
	var B = sigma * sqrt( 2.0 );
	var C = x - mu;
	return A * ( 1.0 + erf( C / B ) );
} // end FUNCTION cdf()


// EXPORTS //

module.exports = cdf;
