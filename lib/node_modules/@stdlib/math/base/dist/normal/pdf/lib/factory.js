'use strict';

// MODULES //

var exp = require( '@stdlib/math/base/special/exp' );
var pow = require( '@stdlib/math/base/special/pow' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );
var TWO_PI = require( '@stdlib/math/constants/float64-two-pi' );
var nan = require( './nan.js' );
var degenerate = require( './degenerate.js' );


// FACTORY //

/**
* Returns a function for evaluating the probability density function (PDF) for a normal distribution.
*
* @param {Number} mu - mean
* @param {Number} sigma - standard deviation
* @returns {Function} function to evaluate the probability density function
*
* @example
* var pdf = factory( 10, 2 );
* var y = pdf( 10 );
* // returns ~0.199
* y = pdf( 5 );
* // returns ~0.009
*/
function factory( mu, sigma ) {
	var s2;
	var A;
	var B;

	if ( sigma < 0.0 ) {
		return nan;
	}
	if ( sigma === 0.0 ) {
		return degenerate( mu );
	}
	s2 = pow( sigma, 2.0 );
	A = 1.0 / sqrt( s2*TWO_PI );
	B = -1.0 / ( 2.0*s2 );

	/**
	* Evaluates the probability density function (PDF) for a normal distribution.
	*
	* @param {Number} x - input value
	* @returns {Number} evaluated probability density function
	*
	* @example
	* var y = pdf( -3.14 );
	* // returns <number>
	*/
	return function pdf( x ) {
		return A * exp( B * pow(x-mu, 2.0) );
	}; // end FUNCTION pdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
