'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var exp = require( '@stdlib/math/base/special/exp' );
var PINF = require( '@stdlib/math/constants/float64-pinf' );


// PDF //

/**
* Evaluates the probability density function (PDF) for an exponential distribution with rate parameter `lambda` at a value `x`.
*
* @param {Number} x - input value
* @param {Number} lambda - rate parameter
* @returns {Number} evaluated PDF
*
* @example
* var y = pdf( 0.3, 4 );
* // returns ~1.205
* @example
* var y = pdf( 2, 0.7 );
* // returns ~0.173
* @example
* var y = pdf( -1, 0.5 );
* // returns 0
* @example
* var y = pdf( 0, NaN );
* // returns NaN
* @example
* var y = pdf( NaN, 2 );
* // returns NaN
* @example
* // Negative rate:
* var y = pdf( 2, -1 );
* // returns NaN
*/
function pdf( x, lambda ) {
	if ( isnan( x ) || isnan( lambda ) ) {
		return NaN;
	}
	if ( lambda < 0.0 ) {
		return NaN;
	}
	if ( lambda === PINF ) {
		return NaN;
	}
	if ( x < 0.0 ) {
		return 0.0;
	}
	return lambda * exp( -lambda*x );
} // end FUNCTION pdf()


// EXPORTS //

module.exports = pdf;
