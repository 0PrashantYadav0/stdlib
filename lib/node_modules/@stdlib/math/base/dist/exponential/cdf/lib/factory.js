'use strict';

// FUNCTIONS //

var exp = require( '@stdlib/math/base/special/exp' );
var nan = require( './nan.js' );
var PINF = require( '@stdlib/math/constants/float64-pinf' );


// FACTORY //

/**
* Returns a function for evaluating the cumulative distribution function (CDF) for an exponential distribution with rate parameter `lambda`.
*
* @param {PositiveNumber} lambda - rate parameter
* @returns {Function} CDF
*
* @example
* var cdf = factory( 0.5 );
* var y = cdf( 3.0 );
* // returns ~0.777
* y = cdf( 1.0 );
* // returns ~0.393
*/
function factory( lambda ) {
	if ( lambda < 0.0 || lambda === PINF ) {
		return nan;
	}
	/**
	* Evaluates the cumulative distribution function (CDF) for an exponential distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {number} evaluated CDF
	*
	* @example
	* var y = cdf( 2 );
	* // returns <number>
	*/
	return function cdf( x ) {
		if ( x < 0.0 ) {
			return 0.0;
		}
		return 1.0 - exp( -lambda * x );
	}; // end FUNCTION cdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
