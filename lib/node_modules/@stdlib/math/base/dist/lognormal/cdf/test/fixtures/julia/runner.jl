#!/usr/bin/env julia

using Distributions
import JSON

"""
	gen( x, mu, sigma, name )

Generate fixture data and write to file.

# Arguments

* `x`: input value
* `mu`: location parameter
* `sigma`: scale parameter
* `name::AbstractString`: output filename

"""
function gen( x, mu, sigma, name )
	z = Array( Float64, length(x) );
	for i in eachindex(x)
		z[ i ] = cdf( LogNormal( mu[i], sigma[i] ), x[i] );
	end

	# Store data to be written to file as a collection:
	data = Dict([
		("x", x),
		("mu", mu),
		("sigma", sigma),
		("expected", z)
	]);

	# Based on the script directory, create an output filepath:
	filepath = joinpath( dir, name );

	# Write the data to the output filepath as JSON:
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Negative mean:
x = rand( 1000 ) * 20.0;
mu = rand( 1000 ) * -10.0;
sigma = rand( 1000 ) * 5.0;
gen( x, mu, sigma, "negative_mean.json" );

# Positive mean:
x = rand( 1000 ) * 20.0;
mu = rand( 1000 ) * 10.0;
sigma = rand( 1000 ) * 5.0;
gen( x, mu, sigma, "positive_mean.json" );

# Large variance:
x = rand( 1000 ) * 20.0;
mu = rand( 1000 );
sigma = rand( 1000 ) * 20.0;
gen( x, mu, sigma, "large_variance.json" );
