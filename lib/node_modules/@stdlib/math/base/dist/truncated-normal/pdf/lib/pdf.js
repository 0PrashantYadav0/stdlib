'use strict';

// MODULES //

var exp = require( '@stdlib/math/base/special/exp' );
var pow = require( '@stdlib/math/base/special/pow' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );
var Phi = require( '@stdlib/math/base/dist/normal/cdf' );
var PINF = require( '@stdlib/math/constants/float64-pinf' );
var PI = require( '@stdlib/math/constants/float64-pi' );


// MAIN //

/**
* Evaluates the probability density function (PDF) for a truncated normal distribution with endpoints `a` and `b`, location parameter `mu` and scale parameter `sigma` at a value `x`.
*
* @param {Number} x - input value
* @param {Number} a - minimum support
* @param {Number} b - maximum support
* @param {Number} mu - location parameter
* @param {Number} sigma - scale parameter
* @returns {Number} evaluated PDF
*/
function pdf( x, a, b, mu, sigma ) {
	if ( x < a || x > b ) {
		return 0;
	}
	var s2 = pow( sigma, 2 );
	var A = 1 / ( sqrt( 2 * s2 * PI ) );
	var B = -1 / ( 2 * s2 );

	/* jshint newcap: false */
	var C = Phi( (b-mu)/sigma ) - Phi( (a-mu)/sigma );

	return A * exp( B * pow( x - mu, 2 ) ) / C;
} // end FUNCTION pdf()


// EXPORTS //

module.exports = pdf;
