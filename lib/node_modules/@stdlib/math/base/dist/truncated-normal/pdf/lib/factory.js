'use strict';

// MODULES //

var exp = require( '@stdlib/math/base/special/exp' );
var pow = require( '@stdlib/math/base/special/pow' );
var isnan = require( '@stdlib/math/base/utils/is-nan' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );
var Phi = require( '@stdlib/math/base/dist/normal/cdf' );
var PINF = require( '@stdlib/math/constants/float64-pinf' );
var PI = require( '@stdlib/math/constants/float64-pi' );


// MAIN //

/**
* Returns a function for evaluating the probability density function (PDF) for a truncated normal distribution with endpoints `a` and `b`, mean  `mu` and standard deviation `sigma`.
*
* @param {Number} a - minimum support
* @param {Number} b - maximum support
* @param {Number} mu - location parameter
* @param {Number} sigma - scale parameter
* @returns {Function} PDF
*/
function factory( a, b, mu, sigma ) {
	var s2 = pow( sigma, 2 );
	var A = 1 / ( sqrt( 2 * s2 * PI ) );
	var B = -1 / ( 2 * s2 );
	/* jshint newcap: false */
	var C = Phi( (b-mu)/sigma ) - Phi( (a-mu)/sigma );

	/**
	* Evaluates the probability density function (PDF) for a truncated normal distribution.
	*
	* @private
	* @param {number} x - input value
	* @returns {number} evaluated PDF
	*/
	return function pdf( x ) {
		if ( x < a || x > b ) {
			return 0.0;
		}
		return A * exp( B * pow( x - mu, 2.0 ) ) / C;
	}; // end FUNCTION pdf()
} // end FUNCTION factory()


// EXPORTS //

module.exports = factory;
