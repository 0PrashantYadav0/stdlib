#!/usr/bin/env julia

import JSON

"""
    gen( re, im, name )

Generate fixture data and write to file.

# Arguments

* `re`: domain (real components)
* `im`: domain (imaginary components)
* `name::AbstractString`: output filename

# Examples

``` julia
julia> re = linspace( -1.0, 1.0, 2001 );
julia> im = linspace( -1.0, 1.0, 2001 );
julia> gen( re, im, \"data.json\" );
```
"""
function gen( re, im, name )
	z = complex( re, im );
	y = abs2( z );

	# Store data to be written to file as a collection:
	data = Dict([
		("re", re),
		("im", im),
		("expected", y)
	]);

	# Based on the script directory, create an output filepath:
	filepath = joinpath( dir, name );

	# Write the data to the output filepath as JSON:
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Generate fixture data:
re = linspace( -1000.0, 1000.0, 2003 );
im = linspace( -1000.0, 1000.0, 2003 );
gen( re, im, "data.json" );
