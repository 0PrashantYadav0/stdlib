'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var Complex128 = require( '@stdlib/types/complex128' );
var randu = require( '@stdlib/math/base/random/randu' );
var isArrayLike = require( '@stdlib/assert/is-array-like' );
var pkg = require( './../package.json' ).name;
var reim = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var arr;
	var z;
	var i;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		z = new Complex128( randu(), randu() );
		arr = reim( z );
		if ( arr.length === 0 ) {
			b.fail( 'should not be empty' );
		}
	}
	b.toc();
	if ( !isArrayLike( arr ) ) {
		b.fail( 'should return an array' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
