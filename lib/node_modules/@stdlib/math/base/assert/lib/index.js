'use strict';

/*
* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );


// MAIN //

/**
* Top-level namespace.
*
* @namespace ns
*/
var ns = {};

/**
* @name isEvenInt32
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/int32-is-even}
*/
setReadOnly( ns, 'isEvenInt32', require( '@stdlib/math/base/utils/int32-is-even' ) );

/**
* @name isOddInt32
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/int32-is-odd}
*/
setReadOnly( ns, 'isOddInt32', require( '@stdlib/math/base/utils/int32-is-odd' ) );

/**
* @name int32ToUint32
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/int32-to-uint32}
*/
setReadOnly( ns, 'int32ToUint32', require( '@stdlib/math/base/utils/int32-to-uint32' ) );

/**
* @name isEven
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-even}
*/
setReadOnly( ns, 'isEven', require( '@stdlib/math/base/utils/is-even' ) );

/**
* @name isfinite
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-finite}
*/
setReadOnly( ns, 'isfinite', require( '@stdlib/math/base/utils/is-finite' ) );

/**
* @name isInfinite
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-infinite}
*/
setReadOnly( ns, 'isInfinite', require( '@stdlib/math/base/utils/is-infinite' ) );

/**
* @name isInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-integer}
*/
setReadOnly( ns, 'isInteger', require( '@stdlib/math/base/utils/is-integer' ) );

/**
* @name isnan
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-nan}
*/
setReadOnly( ns, 'isnan', require( '@stdlib/math/base/utils/is-nan' ) );

/**
* @name isNegativeInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-negative-integer}
*/
setReadOnly( ns, 'isNegativeInteger', require( '@stdlib/math/base/utils/is-negative-integer' ) );

/**
* @name isNegativeZero
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-negative-zero}
*/
setReadOnly( ns, 'isNegativeZero', require( '@stdlib/math/base/utils/is-negative-zero' ) );

/**
* @name isNonNegativeInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-nonnegative-integer}
*/
setReadOnly( ns, 'isNonNegativeInteger', require( '@stdlib/math/base/utils/is-nonnegative-integer' ) );

/**
* @name isNonPositiveInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-nonpositive-integer}
*/
setReadOnly( ns, 'isNonPositiveInteger', require( '@stdlib/math/base/utils/is-nonpositive-integer' ) );

/**
* @name isOdd
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-odd}
*/
setReadOnly( ns, 'isOdd', require( '@stdlib/math/base/utils/is-odd' ) );

/**
* @name isPositiveInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-positive-integer}
*/
setReadOnly( ns, 'isPositiveInteger', require( '@stdlib/math/base/utils/is-positive-integer' ) );

/**
* @name isPositiveZero
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-positive-zero}
*/
setReadOnly( ns, 'isPositiveZero', require( '@stdlib/math/base/utils/is-positive-zero' ) );

/**
* @name isProbability
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-probability}
*/
setReadOnly( ns, 'isProbability', require( '@stdlib/math/base/utils/is-probability' ) );

/**
* @name isSafeInteger
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/math/base/utils/is-safe-integer}
*/
setReadOnly( ns, 'isSafeInteger', require( '@stdlib/math/base/utils/is-safe-integer' ) );


// EXPORTS //

module.exports = ns;
