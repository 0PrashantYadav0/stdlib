/*
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* tslint:disable:no-unused-expression */

import assert = require( './index' );


// TESTS //

// The exported object has the expected function interfaces...
{
	assert.isEvenInt32; // $ExpectType (x: number) => boolean
	assert.isOddInt32; // $ExpectType (x: number) => boolean
	assert.isComposite; // $ExpectType (x: number) => boolean
	assert.isCoprime; // $ExpectType (a: number, b: number) => boolean
	assert.isEven; // $ExpectType (x: number) => boolean
	assert.isFinite; // $ExpectType (x: number) => boolean
	assert.isFinitef; // $ExpectType (x: number) => boolean
	assert.isInfinite; // $ExpectType (x: number) => boolean
	assert.isInfinitef; // $ExpectType (x: number) => boolean
	assert.isInteger; // $ExpectType (x: number) => boolean
	assert.isnan; // $ExpectType (x: number) => boolean
	assert.isnanf; // $ExpectType (x: number) => boolean
	assert.isNegativeInteger; // $ExpectType (x: number) => boolean
	assert.isNegativeZero; // $ExpectType (x: number) => boolean
	assert.isNegativeZerof; // $ExpectType (x: number) => boolean
	assert.isNonNegativeInteger; // $ExpectType (x: number) => boolean
	assert.isNonPositiveInteger; // $ExpectType (x: number) => boolean
	assert.isOdd; // $ExpectType (x: number) => boolean
	assert.isPositiveInteger; // $ExpectType (x: number) => boolean
	assert.isPositiveZero; // $ExpectType (x: number) => boolean
	assert.isPositiveZerof; // $ExpectType (x: number) => boolean
	assert.isPrime; // $ExpectType (x: number) => boolean
	assert.isProbability; // $ExpectType (x: number) => boolean
	assert.isSafeInteger; // $ExpectType (x: number) => boolean
	assert.isPow2Uint32; // $ExpectType (x: number) => boolean
}
