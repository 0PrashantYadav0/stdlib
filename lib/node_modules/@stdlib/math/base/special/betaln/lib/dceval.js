'use strict';

/**
* NOTE: the code is adapted from the Fortran routine `dcseval` from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.org/slatec/fnlib/}.
*
* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain software.
*/

// MODULES //

var isArrayLike = require( '@stdlib/utils/is-array-like' );


// DCSEVAL //

/**
* Evaluate the n-term Chebyshev series `cs` at `x`.
*
* #### References
*
* * R. Broucke, Ten subroutines for the manipulation of
*   Chebyshev series, Algorithm 446, Communications of
*   the A.C.M. 16, (1973) pp. 254-256.
* * L. Fox and I. B. Parker, Chebyshev Polynomials in
*   Numerical Analysis, Oxford University Press, 1968,
*   page 56.
*
* @private
* @param {number} x - value at which the series is to be evaluated
* @param {NumericArray} cs - array of n terms of a Chebyshev series.
* @returns {number} series value
*/
function dcseval( x, cs ) {
	var twox;
	var b2;
	var b1;
	var b0;
	var i;
	var n;

	if ( !isArrayLike( cs ) ) {
		throw new TypeError( 'invalid input argument. Second argument `cs` must be array-like. Value: `' + cs + '`.' );
	}
	n = cs.length;

	if ( n < 1 || n > 1000 ) {
		return NaN;
	}
	if ( x < -1.1 || x > 1.1 ) {
		return NaN;
	}

	b1 = 0.0;
	b0 = 0.0;
	twox = 2.0 * x;
	for ( i = 1; i <= n; i++ ) {
		b2 = b1;
		b1 = b0;
		b0 = twox * b1 - b2 + cs[ n - i ];
	}
	return ( b0 - b2 ) * 0.5;
} // end FUNCTION dcseval()


// EXPORTS //

module.exports = dcseval;
