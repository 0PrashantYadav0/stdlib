#!/usr/bin/env julia

import JSON

"""
    gen( x, filepath )

Generate fixture data and write to file.

# Arguments

* `x`: domain
* `filepath::AbstractString`: filepath of the output file

# Examples

``` julia
julia> x = linspace( -100, 100, 2001 );
julia> gen( x, \"./data.json\" );
```
"""
function gen( x, filepath )
	y = exp2( x );
	data = Dict([
		("x", x),
		("expected", y)
	]);
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Medium negative values:
x = linspace( -1022.0, -1.0, 1000 );
out = joinpath( dir, "./medium_negative.json" );
gen( x, out );

# Medium positive values:
x = linspace( 1.0, 1023.0, 1000 );
out = joinpath( dir, "./medium_positive.json" );
gen( x, out );

# Small negative values:
x = linspace( -1.0, -2.0^-54, 1000 );
out = joinpath( dir, "./small_negative.json" );
gen( x, out );

# Small positive values:
x = linspace( 2.0^-54, 1.0, 1000 );
out = joinpath( dir, "./small_positive.json" );
gen( x, out );

# Tiny values:
x = linspace( -2.0^-54, 2.0^-54, 1000 );
out = joinpath( dir, "./tiny.json" );
gen( x, out );
