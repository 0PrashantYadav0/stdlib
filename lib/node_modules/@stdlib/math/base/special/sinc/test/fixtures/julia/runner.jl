#!/usr/bin/env julia

import JSON

"""
    gen( x, name )

Generate fixture data and write to file.

# Arguments

* `x`: domain
* `name::AbstractString`: output filename

# Examples

``` julia
julia> x = linspace( -708, 709, 2001 );
julia> gen( x, \"data.json\" );
```
"""
function gen( x, name )
	y = sinc( x );

	# Store data to be written to file as a collection:
	data = Dict([
		("x", x),
		("expected", y)
	]);

	# Based on the script directory, create an output filepath:
	filepath = joinpath( dir, name );

	# Write the data to the output filepath as JSON:
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Generate fixture data for decimal values:
x = linspace( -100, 100, 4003 );
gen( x, "data.json" );

# Large negative values:
x = linspace( -709.0895, -100, 1003 );
gen( x, "large_negative.json" );

# Large positive values:
x = linspace( 100, 710.475, 1003 );
gen( x, "large_positive.json" );

# Tiny negative values:
x = linspace( -1e-200, -1e-208, 503 );
gen( x, "tiny_negative.json" );

# Tiny positive values:
x = linspace( 1e-300, 1e-308, 503 );
gen( x, "tiny_positive.json" );
