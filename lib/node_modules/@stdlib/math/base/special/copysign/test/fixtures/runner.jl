#!/usr/bin/env julia

import JSON

"""
   gen( exp, filepath )

Generate fixture data and write to file.

# Arguments

* `exp`: exponents used to randomly generate numbers of varying magnitudes
* `name::AbstractString`: filepath of the output file

# Examples

``` julia
julia> exp = linspace( 0, 308, 5001 );
julia> gen( exp, \"./data.json\" );
```
"""
function gen( exp, filepath )
	len = length( exp );

	x = Array( Float64, len );
	y = rand( len ) - 0.5;
	z = Array( Float64, len );
	for i in eachindex(x)
		x[i] = (rand()-0.5) * 10^exp[i];
		z[i] = copysign( x[i], y[i] );
	end

	data = Dict([
		("x", x),
		("y", y),
		("expected", z)
	]);

	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Generate fixture data from 0 to 10**308:
exp = linspace( 0, 308, 5001 );
out = joinpath( dir, "data.json" );
gen( exp, out );
