'use strict';

// MODULES //

var betaln = require( '@stdlib/math/base/special/betaln' );
var exp = require( '@stdlib/math/base/special/exp' );
var gamma = require( '@stdlib/math/base/special/gamma' );
var PINF = require( '@stdlib/math/constants/float64-pinf' );


// VARIABLES //

var GAMMA_XMAX = 171.61447887182298;


// MAIN //

/**
* Evaluates the beta function.
*
* @param {Number} x - input value
* @param {Number} y - input value
* @returns {Number} evaluated beta function
*/
function beta( x, y  ) {
	if ( x < 0 || y < 0 ) {
		return NaN;
	}
	if ( x === 0 || y === 0 ) {
		return PINF;
	}
	if ( x + y > GAMMA_XMAX ) {
		return exp( betaln( x, y ) );
	}
	return gamma( x ) * gamma( y ) / gamma( x + y );
} // end FUNCTION beta()


// EXPORTS //

module.exports = beta;
