
{{alias}}( x )
    Splits a double-precision floating-point number into a normalized fraction
    and an integer power of two.

    The first element of the returned `array` is the normalized fraction and the
    second is the exponent. The normalized fraction and exponent satisfy the
    relation `x = frac * 2^exp`.

    If provided positive or negative `zero`, `NaN`, or positive or negative
    `infinity`, the function returns a two-element `array` containing the input
    value and an exponent equal to `0`.

    For all other `numeric` input values, the absolute value of the normalized
    fraction resides on the interval `[1/2,1)`.

    Parameters
    ----------
    x: number
        Input value.

    Returns
    -------
    arr: Array<double>
        Two element array containing a normalized fraction and an exponent.

    Examples
    --------
    > var out = {{alias}}( 4.0 )
    [ 0.5, 3 ]
    > out = {{alias}}( 0.0 )
    [ 0.0, 0 ]
    > out = {{alias}}( -0.0 )
    [ -0.0, 0 ]
    > out = {{alias}}( NaN )
    [ NaN, 0 ]
    > out = {{alias}}( {{alias:@stdlib/math/constants/float64-pinf}} )
    [ infinity, 0 ]
    > out = {{alias}}( {{alias:@stdlib/math/constants/float64-ninf}} )
    [ -infinity, 0 ]

    See Also
    --------

