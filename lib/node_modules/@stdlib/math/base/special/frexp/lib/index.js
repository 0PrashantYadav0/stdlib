'use strict';

/**
* Split a double-precision floating-point number into a normalized fraction and an integer power of two.
*
* @module @stdlib/math/base/special/frexp
*
* @example
* var frexp = require( '@stdlib/math/base/special/frexp' );
*
* var out = frexp( 4.0 );
* // returns [ 0.5, 3 ]
*
* out = frexp( 0.0 );
* // returns [ 0.0, 0 ]
*
* out = frexp( -0.0 );
* // returns [ -0.0, 0 ]
*
* out = frexp( NaN );
* // returns [ NaN, 0 ]
*
* out = frexp( Infinity );
* // returns [ Infinity , 0 ]
*
* out = frexp( -Infinity );
* // returns [ -Infinity , 0 ]
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var frexp = require( '@stdlib/math/base/special/frexp' );
*
* var out = new Float64Array( 2 );
*
* var y = frexp( out, 4.0 );
* // returns <Float64Array>[ 0.5, 3 ]
*
* var bool = ( y === out );
* // returns true
*/

// MODULES //

var frexp = require( './main.js' );


// EXPORTS //

module.exports = frexp;
