'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var ibeta_inv_imp = require( './ibeta_inv_imp.js' );


// BETAINCINV //

function betaincinv( p, a, b, upper ) {
	var vals;
	if (
		isnan( p ) ||
		isnan( a ) ||
		isnan( b )
	) {
		return NaN;
	}
	// The arguments and b to the incomplete beta function inverse must be greater than zero.
	if ( a <= 0.0 || b <= 0.0 ) {
		return NaN;
	}
	// p must be inside the range [0,1]
	if ( p < 0.0 || p > 1.0 ) {
		return NaN;
	}
	vals = ibeta_inv_imp( a, b, p, 1.0 - p );
	return upper ? vals[ 1 ] : vals[ 0 ];
} // end FUNCTION betaincinv()


// EXPORTS //

module.exports = betaincinv;
