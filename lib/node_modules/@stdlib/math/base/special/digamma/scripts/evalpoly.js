/*
* This script compiles modules for evaluating polynomial functions. If any polynomial coefficients change, this script should be rerun to update the compiled files.
*/
'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var writeFileSync = require( '@stdlib/fs/write-file' ).sync;
var compile = require( '@stdlib/math/base/tools/evalpoly-compile' );


// VARIABLES //

// Polynomial coefficients ordered in ascending degree...
var P = [
	0.083333333333333333333333333333333333333333333333333,
	-0.0083333333333333333333333333333333333333333333333333,
	0.003968253968253968253968253968253968253968253968254,
	-0.0041666666666666666666666666666666666666666666666667,
	0.0075757575757575757575757575757575757575757575757576,
	-0.021092796092796092796092796092796092796092796092796,
	0.083333333333333333333333333333333333333333333333333,
	-0.44325980392156862745098039215686274509803921568627
];

// Header line to add to output files:
var header = '/* This is a generated file. Do not edit directly. */\n';


// MAIN //

/**
* Main execution sequence.
*/
function main() {
	var fpath;
	var opts;
	var str;

	opts = {
		'encoding': 'utf8'
	};

	fpath = resolve( __dirname, '..', 'lib', 'polyval_p.js' );
	str = header + compile( P );
	writeFileSync( fpath, str, opts );
}

main();
