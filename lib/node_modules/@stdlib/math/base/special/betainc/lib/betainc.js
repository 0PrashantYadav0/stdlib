'use strict';

// MODULES //

var kernelBetainc = require( '@stdlib/math/base/special/kernel-betainc' );


// VARIABLES //

var out = new Array( 2 );


// MAIN //

/**
* Evaluates the incomplete beta function.
*
* @param {Probability} x - function parameter
* @param {NonNegativeNumber} a - function parameter
* @param {NonNegativeNumber} b - function parameter
* @param {boolean} [regularized=true] - boolean indicating if the function should evaluate the regularized or non-regularized incomplete beta function
* @param {boolean} [upper=false] - boolean indicating if the function should return the upper tail of the incomplete beta function
* @returns {number} function value
*
* @example
* var y = betainc( 0.5, 2.0, 2.0 );
* // returns 0.5
*
* @example
* var y = betainc( 0.5, 2.0, 2.0, false );
* // returns ~0.083
*
* @example
* var y = betainc( 0.2, 1.0, 2.0 );
* // returns 0.36
*/
function betainc( x, a, b, regularized, upper ) {
	if ( regularized !== false ) {
		out = upper ?
			kernelBetainc( out, x, a, b, true, true ) :
			kernelBetainc( out, x, a, b, false, true );
		return out[ 0 ];
	}
	out = upper ?
		kernelBetainc( out, x, a, b, true, false ) :
		kernelBetainc( out, x, a, b, false, false );
	return out[ 0 ];
} // end FUNCTION betainc()


// EXPORTS //

module.exports = betainc;
