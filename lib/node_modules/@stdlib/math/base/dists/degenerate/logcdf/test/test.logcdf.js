'use strict';

// MODULES //

var tape = require( 'tape' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var NINF = require( '@stdlib/constants/math/float64-ninf' );
var logcdf = require( './../lib/logcdf.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof logcdf, 'function', 'main export is a function' );
	t.end();
});

tape( 'if provided `NaN` for any parameter, the function returns `NaN`', function test( t ) {
	var y;

	y = logcdf( NaN, 3.0 );
	t.equal( isnan( y ), true, 'returns NaN' );

	y = logcdf( 0.0, NaN );
	t.equal( isnan( y ), true, 'returns NaN' );

	y = logcdf( NaN, NaN );
	t.equal( isnan( y ), true, 'returns NaN' );

	t.end();
});

tape( 'the function returns `0.0` if `x` is greater than or equal to `mu`', function test( t ) {
	var y;

	y = logcdf( 3.0, 3.0 );
	t.equal( y, 0.0, 'returns 0.0' );

	y = logcdf( 4.0, 3.0 );
	t.equal( y, 0.0, 'returns 0.0' );

	t.end();
});

tape( 'the created function returns `-Infinity` if `x` is less than `mu`', function test( t ) {
	var y;

	y = logcdf( 2.9, 3.0 );
	t.equal( y, NINF, 'returns -Infinity' );

	y = logcdf( -2.0, 3.0 );
	t.equal( y, NINF, 'returns -Infinity' );

	t.end();
});
