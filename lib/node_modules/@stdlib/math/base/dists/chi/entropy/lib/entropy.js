'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/assert/is-nan' );
var digamma = require( '@stdlib/math/base/special/digamma' );
var gammaln = require( '@stdlib/math/base/special/gammaln' );
var LN2 = require( '@stdlib/math/constants/float64-ln-two' );


// MAIN //

/**
* Returns the differential entropy of a chi distribution.
*
* @param {PositiveNumber} k - degrees of freedom
* @returns {number} entropy
*
* @example
* var v = entropy( 9.0 );
* // returns ~1.052
* @example
* var v = entropy( 1.0 );
* // returns ~0.726
* @example
* var v = entropy( -0.2 );
* // returns NaN
* @example
* var v = entropy( NaN );
* // returns NaN
*/
function entropy( k ) {
	var kh;
	if ( isnan( k ) || k <= 0.0 ) {
		return NaN;
	}
	kh = k / 2.0;
	return gammaln( kh ) + ( 0.5 * ( k - LN2 - ( ( k-1.0 )*digamma( kh ) ) ) );
} // end FUNCTION entropy()


// EXPORTS //

module.exports = entropy;
