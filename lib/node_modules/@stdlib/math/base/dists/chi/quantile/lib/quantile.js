'use strict';

// MODULES //

var gammaQuantile = require( '@stdlib/math/base/dists/gamma/quantile' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );


// MAIN //

/**
* Evaluates the quantile function for a chi distribution with degrees of freedom `k` at a probability `p`.
*
* @param {Probability} p - input value
* @param {NonNegativeNumber} k - degrees of freedom
* @returns {number} evaluated quantile function
*
* @example
* var y = quantile( 0.8, 1.0 );
* // returns ~1.282
* @example
* var y = quantile( 0.5, 4.0 );
* // returns ~1.832
* @example
* var y = quantile( 0.8, 0.1 );
* // returns ~0.116
* @example
* var y = quantile( -0.2, 0.5 );
* // returns NaN
* @example
* var y = quantile( 1.1, 0.5 );
* // returns NaN
* @example
* var y = quantile( NaN, 1.0 );
* // returns NaN
* @example
* var y = quantile( 0.0, NaN );
* // returns NaN
* @example
* // Negative degrees of freedom:
* var y = quantile( 0.5, -1.0 );
* // returns NaN
*/
function quantile( p, k ) {
	return sqrt( gammaQuantile( p, k/2.0, 0.5 ) );
} // end FUNCTION quantile()


// EXPORTS //

module.exports = quantile;
