
{{alias}}( a, b, c )
    Returns a pseudorandom number drawn from a triangular distribution.

    If the condition `a <= c <= b` is not satisfied, the function returns `NaN`.

    If either `a`, `b`, or `c` is `NaN`, the function returns `NaN`.

    Parameters
    ----------
    a: scalar
        Minimum support.

    b: scalar
        Maximum support.

    c: scalar
        Mode.

    Returns
    -------
    r: integer
        Pseudorandom number.

    Examples
    --------
    > var r = {{alias}}( 2.0, 5.0, 3.33 );


{{alias}}.factory( [a, b, c, ][options] )
    Returns a pseudorandom number generator (PRNG) for generating pseudorandom
    numbers drawn from a triangular distribution.

    If provided `a`, `b`, and `c`, the returned PRNG returns random variates
    drawn from the specified distribution.

    If not provided `a`, `b`, and `c`, the returned PRNG requires that `a`, `b`,
    and `c` be provided at each invocation.

    Parameters
    ----------
    a: scalar (optional)
        Minimum support.

    b: scalar (optional)
        Maximum support.

    c: scalar (optional)
        Mode.

    options: Object (optional)
        Options.

    options.seed: any (optional)
        Pseudorandom number generator seed.

    Returns
    -------
    rand: Function
        Pseudorandom number generator (PRNG).

    Examples
    --------
    // Basic usage:
    > var rand = {{alias}}.factory();
    > var r = rand( 0.0, 1.0, 0.5 );
    > r = rand( -2.0, 2.0, 1.0 );

    // Provide `a`, `b`, and `c`:
    > rand = {{alias}}.factory( 0.0, 1.0, 0.5 );
    > r = rand();
    > r = rand();


{{alias}}.NAME
    Generator name.

    Examples
    --------
    > var name = {{alias}}.NAME
    'triangular'


{{alias}}.PRNG
    Underlying pseudorandom number generator.

    Examples
    --------
    > var prng = {{alias}}.PRNG;


{{alias}}.SEED
    Pseudorandom number generator seed.

    Examples
    --------
    > var seed = {{alias}}.SEED;

    See Also
    --------

