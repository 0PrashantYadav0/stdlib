'use strict';

// MODULES //

var sqrt = require( '@stdlib/math/base/special/sqrt' );


// MAIN //

/**
* Returns a pseudorandom number drawn from a triangular distribution with minimum support `a`, maximum support `b` and mode `c`.
*
* @private
* @param {Function} rand - PRNG for generating uniformly distributed numbers
* @param {number} a - minimum support
* @param {number} b - maximum support
* @param {number} c - mode
* @returns {number} pseudorandom number
*/
function triangular( rand, a, b, c ) {
	var fc;
	var x;
	var u;
	fc = (c - a) / (b - a);
	u = rand();
	if ( u < fc ) {
		x = (b - a) * (c - a);
		return a + sqrt( x * u );
	}
	x = (b - a) * (b - c);
	return b - sqrt( x * (1.0 - u) );
} // end FUNCTION triangular()


// EXPORTS //

module.exports = triangular;
