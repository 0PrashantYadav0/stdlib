'use strict';

// MODULES //

var isNumber = require( '@stdlib/utils/is-number' ).isPrimitive;
var isPositive = require( '@stdlib/utils/is-positive-number' ).isPrimitive;
var isnan = require( '@stdlib/utils/is-nan' );


// MAIN //

/**
* Validates parameters.
*
* @private
* @param {number} mu - location parameter
* @param {PositiveNumber} sigma - scale paramter
* @returns {(Error|null)} error or null
*
* @example
* var err = validate( 1.0, 2.0 );
* if ( err ) {
*     throw err;
* }
*/
function validate( mu, sigma ) {
	if ( !isNumber( mu ) || isnan( mu ) ) {
		return new TypeError( 'invalid input argument. `mu` must be a number primitive and not `NaN`. Value: `' + mu + '`.' );
	}
	if ( !isPositive( sigma ) ) {
		return new TypeError( 'invalid input argument. `sigma` must be a positive number. Value: `' + sigma + '`.' );
	}
	return null;
} // end FUNCTION validate()


// EXPORTS //

module.exports = validate;
