'use strict';

// MODULES //

var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;
var isnan = require( '@stdlib/assert/is-nan' );


// MAIN //

/**
* Validates values provided for minimum and maximum support.
*
* @private
* @param {integer} a - minimum support
* @param {integer} b - maximum support
* @returns {(Error|null)} error or null
*
* @example
* var err = validate( 1, 20 );
* if ( err ) {
*     throw err;
* }
*/
function validate( a, b ) {
	if ( !isInteger( a ) || isnan( a ) ) {
		return new TypeError( 'invalid input argument. First argument must be an integer and not `NaN`. Value: `'+a+'`.' );
	}
	if ( !isInteger( b ) || isnan( b ) ) {
		return new TypeError( 'invalid input argument. Second argument must be an integer and not `NaN`. Value: `'+b+'`.' );
	}
	if ( a > b ) {
		return new RangeError( 'invalid input argument. Minimum support `a` must be less than maximum support `b`. Value: `['+a+','+b+']`.');
	}
	return null;
} // end FUNCTION validate()


// EXPORTS //

module.exports = validate;
