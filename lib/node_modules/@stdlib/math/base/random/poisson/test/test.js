'use strict';

// MODULES //

var tape = require( 'tape' );
var isNonNegativeInteger = require( '@stdlib/math/base/assert/is-nonnegative-integer' );
var uniform = require( '@stdlib/math/base/random/uniform' ).factory;
var poisson = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof poisson, 'function', 'main export is a function' );
	t.end();
});

tape( 'attached to the main export is a method to generate pseudorandom number generators', function test( t ) {
	t.equal( typeof poisson.factory, 'function', 'has `factory` method' );
	t.end();
});

tape( 'attached to the main export is the generator name', function test( t ) {
	t.equal( poisson.NAME, 'poisson', 'has `NAME` property' );
	t.end();
});

tape( 'attached to the main export is the underlying PRNG', function test( t ) {
	t.equal( typeof poisson.PRNG, 'function', 'has `PRNG` property' );
	t.end();
});

tape( 'attached to the main export is the generator seed', function test( t ) {
	t.equal( typeof poisson.SEED, 'number', 'has `SEED` property' );
	t.end();
});

tape( 'the function returns pseudorandom numbers', function test( t ) {
	var randu;
	var r;
	var i;

	randu = uniform( 0.00000001, 10000.0 );
	for ( i = 0; i < 1e3; i++ ) {
		r = poisson( randu() );
		t.strictEqual( isNonNegativeInteger( r ), true, 'returns a nonnegative integer' );
	}
	t.end();
});
