
{{alias}}( n, p )
    Returns a pseudorandom number drawn from a binomial distribution.

    If `n` is not a positive integer or `p` is not a probability, the function
    returns `NaN`.

    If `n` or `p` is `NaN`, the function returns `NaN`.

    Parameters
    ----------
    n: integer
        Number of trials.

    p: double
        Success probability.

    Returns
    -------
    r: integer
        Pseudorandom number.

    Examples
    --------
    > var r = {{alias}}( 20, 0.8 );


{{alias}}.factory( [n, p, ][options] )
    Returns a pseudorandom number generator (PRNG) for generating binomially
    distributed pseudorandom numbers.

    If provided `n` and `p`, the returned PRNG returns random variates drawn
    from the specified distribution.

    If not provided `n` and `p`, the returned PRNG requires that both `n` and
    `p` be provided at each invocation.

    Parameters
    ----------
    n: integer (optional)
        Number of trials.

    p: double (optional)
        Success probability.

    options: Object (optional)
        Options.

    options.seed: any (optional)
        Pseudorandom number generator seed.

    Returns
    -------
    r: integer
        Pseudorandom number.

    Examples
    --------
    // Basic usage:
    > var rand = {{alias}}.factory();

    > var r = rand( 20, 0.3 );

    > r = rand( 10, 0.77 );

    // Provide `n` and `p`:
    > rand = {{alias}}.factory( 10, 0.8 );

    > r = rand();

    > r = rand();


{{alias}}.NAME
    Generator name.

    Examples
    --------
    > var name = {{alias}}.NAME;
    'binomial'


{{alias}}.PRNG
    Underlying pseudorandom number generator.

    Examples
    --------
    > var prng = {{alias}}.PRNG


{{alias}}.SEED
    Pseudorandom number generator seed.

    Examples
    --------
    > var seed = {{alias}}.SEED;

    See Also
    --------

