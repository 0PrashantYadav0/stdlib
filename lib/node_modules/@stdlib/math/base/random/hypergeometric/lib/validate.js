'use strict';

// MODULES //

var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;


// MAIN //

/**
* Validates parameters.
*
* @private
* @param {NonNegativeInteger} N - population size
* @param {NonNegativeInteger} K - subpopulation size
* @param {NonNegativeInteger} n - number of draws
* @returns {(Error|null)} error or null
*
* @example
* var err = validate( 1, 2, 3 );
* if ( err ) {
*     throw err;
* }
*/
function validate( N, K, n ) {
	if ( !isNonNegativeInteger( N ) ) {
		return new TypeError( 'invalid input argument. `N` must be a nonnegative integer. Value: `' + N + '`.' );
	}
	if ( !isNonNegativeInteger( K ) ) {
		return new TypeError( 'invalid input argument. `K` must be a nonnegative integer. Value: `' + K + '`.' );
	}
	if ( !isNonNegativeInteger( n ) ) {
		return new TypeError( 'invalid input argument. `n` must be a nonnegative integer. Value: `' + n + '`.' );
	}
	if ( n > N ) {
		return new RangeError( 'invalid input argument. `n` must be less than or equal to `N`. Value: `' + n + '`.' );
	}
	return null;
} // end FUNCTION validate()


// EXPORTS //

module.exports = validate;
