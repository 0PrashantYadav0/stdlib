'use strict';

// MODULES //

var evalpoly = require( '@stdlib/math/base/tools/evalpoly' );
var pow = require( '@stdlib/math/base/special/pow' );
var abs = require( '@stdlib/math/base/special/abs' );
var coefficients = require( './coefficients.js' );


// MAIN //

/**
* Evaluates a Fibonacci polynomial.
*
* @param {integer} n - Fibonacci polynomial to evaluate
* @param {number} x - value at which to evaluate a Fibonacci polynomial
* @returns {number} result
*
* @example
* var v = evalfibpoly( 5, 1.0 );
* // returns 5.0
*/
function evalfibpoly( n, x ) {
	var coefs;
	var an;
	var v;

	an = abs( n );
	coefs = coefficients( an );

	v = evalpoly( coefs, x );
	if ( n >= 0 ) {
		return v;
	}
	return pow( -1.0, an-1 ) * v;
} // end FUNCTION evalfibpoly()


// EXPORTS //

module.exports = evalfibpoly;
