'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/random/base/randu' );
var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var pkg = require( './../package.json' ).name;
var compile = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var P;
	var Q;
	var v;
	var i;

	P = new Array( 10 );
	Q = new Array( 10 );
	for ( i = 0; i < P.length; i++ ) {
		P[ i ] = randu();
		Q[ i ] = randu();
	}
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		P[ 0 ] = randu();
		v = compile( P, Q );
		if ( typeof v !== 'string' ) {
			b.fail( 'should return a string' );
		}
	}
	b.toc();
	if ( !isString( v ) ) {
		b.fail( 'should return a string' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
