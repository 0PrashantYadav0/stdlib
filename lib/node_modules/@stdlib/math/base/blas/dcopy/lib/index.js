'use strict';

/**
* Blas level 1 routine to copy values from `x` into `y`.
*
* @module @stdlib/math/base/blas/dcopy
*
* @example
* var dcopy = require( '@stdlib/math/base/blas/dcopy' );
*
* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );
* var y = new Float64Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );
*
* dcopy( x.length, x, 1, y, 1 );
* // y => <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]
*
* @example
* // Use the `ndarray` interface...
* var dcopy = require( '@stdlib/math/base/blas/dcopy' ).ndarray;
*
* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );
* var y = new Float64Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );
*
* dcopy( x.length, x, 1, 0, y, 1, 0 );
* // y => <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]
*/

// MODULES //

var join = require( 'path' ).join;
var isBrowser = require( '@stdlib/assert/is-browser' );
var tryRequire = require( '@stdlib/utils/try-require' );


// MAIN //

var dcopy;
if ( isBrowser ) {
	dcopy = require( './main.js' );
} else {
	dcopy = tryRequire( join( __dirname, './native.js' ) );
	if ( dcopy instanceof Error ) {
		dcopy = require( './main.js' );
	}
}


// EXPORTS //

module.exports = dcopy;
