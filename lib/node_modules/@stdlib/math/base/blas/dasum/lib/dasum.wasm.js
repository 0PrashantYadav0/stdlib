'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var createModule = require( './../src/dasum.wasm.js' );
var cwrap = require( './cwrap.js' );


// VARIABLES //

var Module = createModule({
	'wasmBinaryFile': resolve( __dirname, '..', 'src', 'dasum.wasm' )
});


// MAIN //

/**
* Computes the sum of absolute values.
*
* @name dasum
* @type {Function}
* @param {PositiveInteger} N - number of values to sum
* @param {Uint8Array} heap - allocated heap buffer
* @param {PositiveInteger} stride - `x` stride length
* @throws {Error} must provide an active heap
* @returns {number} sum
*
* @example
* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );
*
* // Determine the number of bytes:
* var nbytes = x.length * x.BYTES_PER_ELEMENT;
*
* // Allocate space on the heap:
* var heap = dasum.malloc( nbytes );
*
* // Copy the data to the heap:
* heap.set( new Uint8Array( x.buffer ) );
*
* // Compute the sum:
* var s = dasum( x.length, heap, 1 );
* // returns 15.0
*
* // Free the memory:
* dasum.free( heap );
*/
var dasum = cwrap( Module );


// EXPORTS //

module.exports = dasum;
