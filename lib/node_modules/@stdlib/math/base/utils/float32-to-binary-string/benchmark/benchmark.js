'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/math/base/random/randu' );
var isString = require( '@stdlib/utils/is-string' ).isPrimitive;
var toFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
var pkg = require( './../package.json' ).name;
var toBinaryStringf = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var x;
	var y;
	var i;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		x = ( randu()*1.0e7 ) - 5.0e6;
		y = toBinaryStringf( toFloat32( x ) );
		if ( !isString( y ) ) {
			b.fail( 'should return a string' );
		}
	}
	b.toc();
	if ( !isString( y ) ) {
		b.fail( 'should return a string' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
