'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/math/base/random/randu' );
var round = require( '@stdlib/math/base/special/round' );
var float64ToUint32 = require( '@stdlib/math/base/utils/float64-to-uint32' );
var isBoolean = require( '@stdlib/utils/is-boolean' ).isPrimitive;
var pkg = require( './../package.json' ).name;
var isPow2 = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var x;
	var y;
	var i;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		x = round( randu()*1.0e7 );
		y = isPow2( float64ToUint32( x ) );
		if ( !isBoolean( y ) ) {
			b.fail( 'should return a boolean' );
		}
	}
	b.toc();
	if ( !isBoolean( y ) ) {
		b.fail( 'should return a boolean' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
