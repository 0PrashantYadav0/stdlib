'use strict';

// MODULES //

var pow = require( '@stdlib/math/base/special/pow' );


// TO FRAC //

/**
* Converts a float's fraction bit sequence to an integer value.
*
* @param {string} frac - literal bit representation of a float's fraction bit sequence
* @returns {number} integer (floating-point)
*
* @example
* var v = toFrac( '10001100010111110011000' );
* // returns ~0.548
* @example
* var v = toFrac( '11110101000101011111111' );
* // returns ~0.957
*/
function toFrac( frac ) {
	var sum = 0;
	var i;
	for ( i = 0; i < frac.length; i++ ) {
		if ( frac[ i ] === '1' ) {
			sum += pow( 2, -(i+1) );
		}
	}

	return sum;
} // end FUNCTION toFrac()


// EXPORTS //

module.exports = toFrac;
