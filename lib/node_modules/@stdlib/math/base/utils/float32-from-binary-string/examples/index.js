'use strict';

var round = require( '@stdlib/math/base/special/round' );
var pow = require( '@stdlib/math/base/special/pow' );
var toFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
var toBinaryString = require( '@stdlib/math/base/utils/float32-to-binary-string' );
var fromBinaryString = require( './../lib' );

var frac;
var sign;
var exp;
var b;
var x;
var y;
var i;

// Convert random numbers to IEEE 754 literal bit representations and then convert them back...
for ( i = 0; i < 100; i++ ) {
	if ( Math.random() < 0.5 ) {
		sign = -1.0;
	} else {
		sign = 1.0;
	}
	frac = Math.random() * 10.0;
	exp = round( Math.random()*100.0 );
	if ( Math.random() < 0.5 ) {
		exp = -exp;
	}
	x = sign * frac * pow( 2.0, exp );
	x = toFloat32( x );

	b = toBinaryString( x );
	y = fromBinaryString( b );

	console.log( '%d => %s => %d', x, b, y );
	console.log( x === y );
}
