#!/usr/bin/env julia

import JSON

"""
    gen( x, name )

Generate fixture data and write to file.

# Arguments

* `x`: domain
* `name::AbstractString`: output filename

# Examples

``` julia
julia> x = linspace( -1000, 1000, 2001 );
julia> gen( x, \"data.json\" );
```
"""
function gen( x, name )
	data = Dict();

	for i in eachindex(x)
    	data[ bits( x[i] ) ] = x[ i ];
	end

	# Based on the script directory, create an output filepath:
	filepath = joinpath( dir, name );

	# Write the data to the output filepath as JSON:
	outfile = open( filepath, "w" );
	write( outfile, JSON.json(data) );
	close( outfile );
end

# Get the filename:
file = @__FILE__;

# Extract the directory in which this file resides:
dir = dirname( file );

# Small values:
x = linspace( 1e-200, 1e-308, 1007 );
gen( x, "bits_1e-200_1e-308.json" );

# Medium values:
x = linspace( -1e3, 1e3, 1007 );
gen( x, "bits_-1e3_1e3.json" );

# Large values:
x = linspace( 1e200, 1e308, 1007 );
gen( x, "bits_1e200_1e308.json" );

# Subnormal values:
x = linspace( 1e-310, 5e-324, 1007 );
gen( x, "bits_1e-310_5e-324.json" );
