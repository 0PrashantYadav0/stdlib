'use strict';

// MAIN //

/**
* Converts a single-precision floating-point number to an unsigned 32-bit integer.
*
* @param {number} x - single-precision floating-point number
* @returns {number} unsigned 32-bit integer
*
* @example
* var float64ToFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
* var y = float32ToUint32( float64ToFloat32( 4294967297.0 ) );
* // returns 1
*
* @example
* var float64ToFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
* var y = float32ToUint32( float64ToFloat32( 3.14 ) );
* // returns 3
*
* @example
* var float64ToFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
* var y = float32ToUint32( float64ToFloat32( -3.14 ) );
* // returns 4294967293
*
* @example
* var float64ToFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
* var y = float32ToUint32( float64ToFloat32( NaN ) );
* // returns 0
*
* @example
* var float64ToFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
* var y = float32ToUint32( float64ToFloat32( Number.POSITIVE_INFINITY ) );
* // returns 0
*
* @example
* var float64ToFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
* var y = float32ToUint32( float64ToFloat32( Number.NEGATIVE_INFINITY ) );
* // returns 0
*/
function float32ToUint32( x ) {
	// NOTE: we could also use typed-arrays to achieve the same end.
	return x >>> 0;
} // end FUNCTION float32ToUint32()


// EXPORTS //

module.exports = float32ToUint32;
