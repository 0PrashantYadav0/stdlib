'use strict';

// MODULES //

var lpad = require( '@stdlib/utils/left-pad-string' );
var div2 = require( './div2.js' );


// TO BINARY STRING //

/**
* Returns a string giving the literal bit representation of an unsigned 32-bit integer.
*
* @param {number} x - input value
* @returns {string} bit representation
*
* @example
* var a = new Uint32Array( [ 1 ] );
* var str = binaryString( a[0] );
* // returns '00000000000000000000000000000001'
* @example
* var a = new Uint32Array( [ 4 ] );
* var str = binaryString( a[0] );
* // returns '00000000000000000000000000000100'
* @example
* var a = new Uint32Array( [ 9 ] );
* var str = binaryString( a[0] );
* // returns '00000000000000000000000000001001'
*/
function toBinaryString( x ) {
	var b;

	// Convert the input value to a bit string:
	b = div2( x );

	// Left pad the bit string to ensure 32 bits are represented:
	b = lpad( b, 32, '0' );

	return b;
} // end FUNCTION toBinaryString()


// EXPORTS //

module.exports = toBinaryString;
