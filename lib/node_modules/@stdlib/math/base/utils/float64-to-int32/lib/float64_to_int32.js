'use strict';

// MAIN //

/**
* Converts a double-precision floating-point number to a signed 32-bit integer.
*
* @param {number} x - double-precision floating-point number
* @returns {integer32} signed 32-bit integer
*
* @example
* var y = float64ToInt32( 4294967295.0 );
* // returns -1
* @example
* var y = float64ToInt32( 3.14 );
* // returns 3
* @example
* var y = float64ToInt32( -3.14 );
* // returns -3
* @example
* var y = float64ToInt32( NaN );
* // returns 0
* @example
* var y = float64ToInt32( Number.POSITIVE_INFINITY );
* // returns 0
* @example
* var y = float64ToInt32( Number.NEGATIVE_INFINITY );
* // returns 0
*/
function float64ToInt32( x ) {
	// NOTE: we could also use typed-arrays to achieve the same end.
	return x|0; // asm type annotation
} // end FUNCTION float64ToInt32()


// EXPORTS //

module.exports = float64ToInt32;
