'use strict';

/**
* Return a string giving the literal bit representation of a double-precision floating-point number.
*
* @module @stdlib/math/base/utils/float64-to-binary-string
*
* @example
* var toBinaryString = require( '@stdlib/math/base/utils/float64-to-binary-string' );
*
* var str = toBinaryString( 4.0 );
* // returns '0100000000010000000000000000000000000000000000000000000000000000'
*
* str = toBinaryString( Math.PI );
* // returns '0100000000001001001000011111101101010100010001000010110100011000'
*
* str = toBinaryString( -1.0e308 );
* // returns '1111111111100001110011001111001110000101111010111100100010100000'
*
* str = toBinaryString( -3.14e-320 );
* // returns '1000000000000000000000000000000000000000000000000001100011010011'
*
* str = toBinaryString( 5.0e-324 );
* // returns '0000000000000000000000000000000000000000000000000000000000000001'
*
* str = toBinaryString( 0.0 );
* // returns '0000000000000000000000000000000000000000000000000000000000000000'
*
* str = toBinaryString( -0.0 );
* // returns '1000000000000000000000000000000000000000000000000000000000000000'
*
* str = toBinaryString( NaN );
* // returns '0111111111111000000000000000000000000000000000000000000000000000'
*
* str = toBinaryString( Infinity );
* // returns '0111111111110000000000000000000000000000000000000000000000000000'
*
* str = toBinaryString( -Infinity );
* // returns '1111111111110000000000000000000000000000000000000000000000000000'
*/

// MODULES //

var toBinaryString = require( './to_binary_string.js' );


// EXPORTS //

module.exports = toBinaryString;
