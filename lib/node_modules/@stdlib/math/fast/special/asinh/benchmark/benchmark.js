'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/utils/is-nan' );
var randu = require( '@stdlib/math/base/random/randu' );
var asinh = require( '@stdlib/math/base/special/asinh' );
var fastasinh = require( './../lib' );


// VARIABLES //

var N = 1e7;


// FUNCTIONS //

function warmup() {
	var i;
	var j;

	j = 0;
	for ( i = 0; i < 1e6; i++ ) {
		j += i * 2;
	}
	if ( j > 0 ) {
		return true;
	}
	return false;
}

function test( name, fcn ) {
	var start;
	var time;
	var bool;
	var x;
	var y;
	var i;

	bool = warmup();
	if ( !bool ) {
		throw new Error( 'Something went wrong.' );
	}
	start = process.hrtime();
	for ( i = 0; i < N; i++ ) {
		x = randu()*200.0 - 100.0;
		y = fcn( x );
		if ( isnan( y ) ) {
			throw new Error( 'Something went wrong.' );
		}
	}
	time = process.hrtime( start );
	time = time[ 0 ] + time[ 1 ]*1.0e-9;

	if ( isnan( y ) ) {
		throw new Error( 'Something went wrong.' );
	}
	console.log( 'Test: %s. Elapsed time: %d sec. Iterations: %d. ops/s: %d.', name, time, N, N/time );
}

function benchmark() {
	if ( typeof Math.asinh === 'function' ) {
		test( 'Math.asinh', Math.asinh );
		test( 'Math.asinh', Math.asinh );
		test( 'Math.asinh', Math.asinh );
	}
	test( 'asinh', asinh );
	test( 'fast_asinh', fastasinh );
	test( 'asinh', asinh );
	test( 'fast_asinh', fastasinh );
	test( 'asinh', asinh );
	test( 'fast_asinh', fastasinh );
}


// MAIN //

benchmark();
