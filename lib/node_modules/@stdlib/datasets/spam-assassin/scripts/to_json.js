/*
* This script converts text files to JSON.
*/
'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var writeFileSync = require( 'fs' ).writeFileSync;
var readDirSync = require( '@stdlib/fs/read-dir' ).sync;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var replace = require( '@stdlib/string/replace' );


// VARIABLES //

var RE_EXT = /\.txt$/;
var RE_FILENAME = /^(\d{5})\.(.*)\.txt$/;
var dirs = [
	'easy-ham',
	'easy-ham-2',
	'hard-ham',
	'spam',
	'spam-2'
];


// MAIN //

/**
* Main execution sequence.
*
* @private
*/
function main() {
	var fpath;
	var dpath;
	var files;
	var parts;
	var opts;
	var file;
	var out;
	var i;
	var j;

	opts = {
		'encoding': 'utf8'
	};
	for ( i = 0; i < dirs.length; i++ ) {
		dpath = resolve( __dirname, '..', 'data', dirs[ i ] );
		files = readDirSync( dpath );
		if ( files instanceof Error ) {
			throw files;
		}
		for ( j = 0; j < files.length; j++ ) {
			if ( files[ j ][ 0 ] === '.' ) {
				// Skip "hidden" files...
				continue;
			}
			if ( !RE_EXT.test( files[ j ] ) ) {
				// Skip non-text files...
				continue;
			}
			fpath = resolve( __dirname, '..', 'data', dirs[ i ], files[ j ] );
			file = readFileSync( fpath, opts );
			if ( file instanceof Error ) {
				throw file;
			}
			parts = RE_FILENAME.exec( files[ j ] );
			if ( !parts ) {
				continue;
			}
			out = {};
			out.id = parts[ 1 ];
			out.checksum = {
				'type': 'MD5',
				'value': parts[ 2 ]
			};
			out.text = file;
			fpath = replace( fpath, RE_EXT, '.json' );
			writeFileSync( fpath, JSON.stringify( out ), opts );
		}
	}
} // end FUNCTION main()

main();
