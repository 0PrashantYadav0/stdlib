#!/usr/bin/env node
'use strict';

// MODULES //

var fs = require( 'fs' );
var path = require( 'path' );
var parseArgs = require( 'minimist' );
var notifier = require( 'update-notifier' );
var pkg = require( './../package.json' );
var opts = require( './opts.json' );


// FUNCTIONS //

/**
* Performs initialization tasks.
*
* @private
* @example
* init();
*/
function init() {
	var opts;

	// Check if newer versions exist for this package:
	opts = {
		'pkg': pkg
	};
	notifier( opts ).notify();

	// Set the process title to allow the process to be more easily identified:
	process.title = pkg.name;
	process.stdout.on( 'error', process.exit );
}

/**
* Prints usage information.
*
* @private
* @example
* help();
* // => '...'
*/
function help() {
	var fpath = path.join( __dirname, 'usage.txt' );
	fs.createReadStream( fpath )
		.pipe( process.stdout )
		.on( 'close', onClose );

	function onClose() {
		process.exit( 0 );
	}
}

/**
* Prints the package version.
*
* @private
* @example
* version();
* // => '#.#.#'
*/
function version() {
	var msg = pkg.version.toString()+'\n';
	process.stdout.write( msg, 'utf8' );
	process.exit( 0 );
}

/**
* Converts an array of strings to an array of integers.
*
* @private
* @param {StringArray} arr - array of strings
* @returns {IntegerArray} array of integers
*/
function toIntegers( arr ) {
	var i;
	for ( i = 0; i < arr.length; i++ ) {
		arr[ i ] = parseInt( arr[ i ], 10 );
	}
	return arr;
}


// VARIABLES //

var data;
var args;
var i;


// MAIN //

init();

// Parse command-line arguments:
args = parseArgs( process.argv.slice( 2 ), opts );

if ( args.help ) {
	return help();
}
if ( args.version ) {
	return version();
}
opts = {};
if ( args.name ) {
	opts.name = args.name.split( ',' );
}
if ( args.party ) {
	opts.party = args.party.split( ',' );
}
if ( args.year ) {
	opts.year = toIntegers( args.year.split( ',' ) );
}
if ( args.range ) {
	opts.range = toIntegers( args.range.split( ',' ) );
}

// Run main:
data = require( './../lib' )( opts );
for ( i = 0; i < data.length; i++ ) {
	console.log( JSON.stringify( data[ i ] ) );
}
