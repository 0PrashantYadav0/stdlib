'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var isArray = require( '@stdlib/utils/is-array' );
var db = require( './../lib/db.js' );


// TESTS //

tape( 'main export is an array', function test( t ) {
	t.ok( true, __filename );
	t.equal( isArray( db ), true, 'main export is an array' );
	t.end();
});

tape( 'as of 2016, export has a length greater than or equal to 228', function test( t ) {
	t.equal( db.length >= 228, true, 'has length greater than or equal to 228 (as of 2016)' );
	t.end();
});

tape( 'if loaded in a non-browser environment, the exported array is initialized with empty elements (data is lazily loaded)', function test( t ) {
	var list;
	var db;
	var i;

	list = [ 'a', 'b', 'c' ];
	db = proxyquire( './../lib/db.js', {
		'@stdlib/utils/is-browser': false,
		'./file_list.js': list
	});
	t.equal( db.length, list.length, 'has expected length' );
	for ( i = 0; i < db.length; i++ ) {
		t.equal( db[i], void 0, 'element '+i+' is empty' );
	}
	t.end();
});

tape( 'if loaded in a browser environment, the exported array is an array of objects', function test( t ) {
	var db;
	var i;

	db = proxyquire( './../lib/db.js', {
		'@stdlib/utils/is-browser': true
	});
	t.equal( db.length >= 228, true, 'has length >= 228' );
	for ( i = 0; i < db.length; i++ ) {
		t.equal( typeof db[i], 'object', 'element '+i+' is an object' );
	}
	t.end();
});
