'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var minard = require( './../lib/main.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof minard, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if unable to load data (no options)', function test( t ) {
	var minard = proxyquire( './../lib/main.js', {
		'@stdlib/fs/read-json': {
			'sync': readJSON
		}
	});
	t.throws( minard, Error, 'throws an error' );
	t.end();

	function readJSON() {
		return new Error( 'unable to read data' );
	}
});

tape( 'the function throws an error if unable to load data (options)', function test( t ) {
	var minard = proxyquire( './../lib/main.js', {
		'@stdlib/fs/read-json': {
			'sync': readJSON
		}
	});
	t.throws( foo, Error, 'throws an error' );
	t.end();

	function foo() {
		minard({
			'data': 'army'
		});
	}

	function readJSON() {
		return new Error( 'unable to read data' );
	}
});
