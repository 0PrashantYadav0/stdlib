'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isObjectArray = require( '@stdlib/assert/is-plain-object-array' );
var isObject = require( '@stdlib/assert/is-plain-object' );
var pkg = require( './../package.json' ).name;
var minard = require( './../lib/browser.js' );


// MAIN //

bench( pkg+'::browser', function benchmark( b ) {
	var data;
	var i;
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		data = minard();
		if ( typeof data !== 'object' ) {
			b.fail( 'should return an object' );
		}
	}
	b.toc();
	if ( !isObject( data ) ) {
		b.fail( 'should return an object' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});

bench( pkg+'::browser,subset', function benchmark( b ) {
	var options;
	var data;
	var i;

	options = [
		'army',
		'cities',
		'labels',
		'rivers',
		'temperature'
	];
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		data = minard({
			'data': options[ i % options.length ]
		});
		if ( data.length === 0 ) {
			b.fail( 'should have a length greater than 0' );
		}
	}
	b.toc();
	if ( !isObjectArray( data ) ) {
		b.fail( 'should return an object array' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
