#!/usr/bin/env node
'use strict';

// MODULES //

var fs = require( 'fs' );
var resolve = require( 'path' ).resolve;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var stdout = require( '@stdlib/streams/base/stdout' );
var CLI = require( '@stdlib/tools/cli' );


// MAIN //

/**
* Main execution sequence.
*
* @private
*/
function main() {
	var flags;
	var cli;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( resolve( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});
	flags = cli.flags();
	if ( flags.format === 'ndjson' ) {
		ndjson();
	} else {
		txt();
	}

	/**
	* Prints data as newline-delimited JSON (ndjson).
	*
	* @private
	*/
	function ndjson() {
		var data;
		var i;

		data = require( './../lib' )();
		for ( i = 0; i < data.length; i++ ) {
			console.log( JSON.stringify( data[i] ) ); // eslint-disable-line no-console
		}
	}

	/**
	* Prints data as lines of text.
	*
	* @private
	*/
	function txt() {
		var FILE_LIST;
		var i;

		FILE_LIST = require( './../data/file_list.json' );
		i = 0;

		next();

		/**
		* Callback which processes the next file.
		*
		* @private
		*/
		function next() {
			var fstream;
			var fpath;

			fpath = resolve( __dirname, '..', 'data', FILE_LIST[ i ] );
			fstream = fs.createReadStream( fpath );
			fstream.on( 'close', onClose );
			fstream.pipe( stdout );
		}

		/**
		* Callback invoked upon a stream close.
		*
		* @private
		* @returns {void}
		*/
		function onClose() {
			i += 1;
			if ( i === FILE_LIST.length ) {
				return cli.exit( 0 );
			}
			console.log( '\n' ); // eslint-disable-line no-console
			next();
		}
	}
}

main();
