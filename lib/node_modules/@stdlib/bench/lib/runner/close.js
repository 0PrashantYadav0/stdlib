'use strict';

// MAIN //

/**
* Closes a benchmark runner.
*
* @private
* @returns {void}
*/
function closeRunner() {
	/* eslint-disable no-invalid-this */
	/* jshint validthis: true */ // TODO: remove
	var self = this;
	if ( this._closed ) {
		return;
	}
	this._closed = true;
	if ( this._benchmarks.length ) {
		this.clear();
		this._stream.write( '\n# WARNING: closed before completion.\n' );
	} else {
		this._stream.write( '\n1..'+this.count+'\n' );
		this._stream.write( '# assertions '+this.count+'\n' );
		this._stream.write( '# pass  '+this.pass+'\n' );
		if ( this.fail ) {
			this._stream.write( '# fail  '+this.fail+'\n' );
		} else {
			if ( this.skipped ) {
				this._stream.write( '# skipped  '+this.skipped+'\n' );
			}
			this._stream.write( '\n# ok\n' );
		}
	}
	this._stream.once( 'close', onClose );
	this._stream.destroy();

	/**
	* Callback invoked upon a `close` event.
	*
	* @private
	*/
	function onClose() {
		self.emit( 'close' );
	} // end FUNCTION onClose()
} // end FUNCTION closeRunner()


// EXPORTS //

module.exports = closeRunner;
