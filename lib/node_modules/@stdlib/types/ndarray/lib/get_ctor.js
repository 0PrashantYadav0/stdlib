'use strict';

// MODULES //

var ctor = require( '@stdlib/types/ndarray/ctor' );
var CACHE = require( './ctor_cache.js' );


// MAIN //

/**
* Returns an ndarray constructor.
*
* @private
* @param {string} dtype - data type
* @param {NonNegativeInteger} ndims - number of dimensions
* @returns {Function} ndarray constructor
*/
function getCtor( dtype, ndims ) {
	var ctors;
	var len;
	var i;

	ctors = CACHE[ dtype ];
	len = ctors.length;

	// If the constructor has not already been created, use the opportunity to create it, as well as any lower dimensional constructors of the same data type (note: ignoring 0-dimensional ndarrays)....
	for ( i = len+1; i <= ndims; i++ ) {
		ctors.push( ctor( dtype, i ) );
	}
	return ctors[ ndims-1 ];
} // end FUNCTION getCtor()


// EXPORTS //

module.exports = getCtor;
