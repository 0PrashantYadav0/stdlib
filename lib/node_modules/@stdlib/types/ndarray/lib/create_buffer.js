'use strict';

// MODULES //

var btypes = require( './btypes.js' );
var zeros = require( './zeros.js' );


// MAIN //

/**
* Returns a data buffer.
*
* @private
* @param {NonNegativeInteger} len - buffer length
* @param {string} dtype - data type
* @returns {(Array|TypedArray|Buffer)} buffer
*
* @example
* var b = createBuffer( 3, 'float64' );
* // returns <Float64Array>[ 0.0, 0.0, 0.0 ]
*/
function createBuffer( len, dtype ) {
	/* eslint-disable no-new-cap */
	var buffer;
	var ctor;
	var i;

	ctor = btypes[ dtype ];

	// In some engines, we need to ensure "fast elements" (i.e., contiguous memory) for generic arrays...
	if ( dtype === 'generic' ) {
		if ( len > 64000 ) {
			buffer = zeros( new ctor( 64000 ) );
			for ( i = 64000; i < len; i++ ) {
				buffer.push( 0.0 );
			}
			return buffer;
		}
		return zeros( new ctor( len ) );
	}
	return new ctor( len );
} // end FUNCTION createBuffer()


// EXPORTS //

module.exports = createBuffer;
