'use strict';

// MODULES //

var validate = require( './validate.js' );


// MAIN //

/**
* Multidimensional array constructor.
*
* @constructor
* @param {Options} options - function options
* @param {NonNegativeIntegerArray} options.shape - array shape
* @param {ArrayLike} [options.buffer] - underlying array buffer
* @param {string} [options.dtype] - underlying storage data type (if the input data is not of the same type, this option specifies the data type to which to cast the input data)
* @param {NonNegativeInteger} [options.offset] - integer offset specifying where in the array buffer to begin indexing
* @param {string} [options.order] - specifies whether an array is row-major (C-style) or column-major (Fortran-style)
* @param {IntegerArray} [options.strides] - index strides which specify how to access data along particular array dimensions
* @throws {TypeError} `options` argument must be an object
* @throws {TypeError} must provide valid options
* @returns {ndarray} multidimensional array
*
* @example
* TODO
*/
function ndarray( options ) {
	/* eslint-disable no-invalid-this */
	var opts;
	var err;

	if ( !(this instanceof ndarray) ) {
		if ( arguments.length ) {
			return new ndarray( options ); // eslint-disable-line no-new-cap
		}
		return new ndarray(); // eslint-disable-line no-new-cap
	}
	opts = {};
	if ( arguments.length ) {
		err = validate( opts, options );
		if ( err ) {
			throw err;
		}
	}

	return this;
} // end FUNCTION ndarray()


// EXPORTS //

module.exports = ndarray;
