'use strict';

var discreteUniform = require( '@stdlib/math/base/random/discrete-uniform' );
var shape2strides = require( '@stdlib/types/ndarray/base/shape2strides' );
var strides2offset = require( '@stdlib/types/ndarray/base/strides2offset' );
var numel = require( '@stdlib/types/ndarray/base/numel' );
var randu = require( '@stdlib/math/base/random/randu' );
var sub2ind = require( './../lib' );

var shape = [ 3, 3 ];
var strides = shape2strides( shape, 'row-major' );
var len = numel( shape );

var arr = new Array( len );
var i;
for ( i = 0; i < len; i++ ) {
	arr[ i ] = i;
}

var offset;
var idx;
var row;
var j;
var n;
var m;
for ( i = 0; i < 20; i++ ) {
	j = discreteUniform( 0, shape.length-1 );
	strides[ j ] *= ( randu() < 0.5 ) ? -1 : 1;
	offset = strides2offset( shape, strides );

	console.log( '' );
	console.log( 'Dimensions: %s.', shape.join( 'x' ) );
	console.log( 'Strides: %s.', strides.join( ',' ) );
	console.log( 'View:' );
	for ( n = 0; n < shape[ 0 ]; n++ ) {
		row = '  ';
		for ( m = 0; m < shape[ 1 ]; m++ ) {
			idx = sub2ind( shape, strides, offset, n, m, 'throw' );
			row += arr[ idx ];
			if ( m < shape[ 1 ]-1 ) {
				row += ', ';
			}
		}
		console.log( row );
	}
}
