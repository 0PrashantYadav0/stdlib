'use strict';

// MAIN //

/**
* Generates a stride array from an array shape.
*
* @private
* @param {(Array|TypedArray|Object)} out - output object
* @param {NonNegativeIntegerArray} shape - array shape
* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)
* @returns {(Array|TypedArray|Object)} array strides
*/
function shape2strides( out, shape, order ) {
	var ndims;
	var s;
	var i;

	ndims = shape.length;
	s = 1;
	if ( order === 'column-major' ) {
		for ( i = 0; i < ndims; i++ ) {
			out[ i ] = s;
			s *= shape[ i ];
		}
	} else { // row-major
		for ( i = ndims-1; i >= 0; i-- ) {
			out[ i ] = s;
			s *= shape[ i ];
		}
	}
	return out;
} // end FUNCTION shape2strides()


// EXPORTS //

module.exports = shape2strides;
