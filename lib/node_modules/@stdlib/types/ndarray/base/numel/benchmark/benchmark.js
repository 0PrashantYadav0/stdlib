'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/random/base/randu' );
var floor = require( '@stdlib/math/base/special/floor' );
var pkg = require( './../package.json' ).name;
var numel = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var shape;
	var n;
	var i;

	shape = new Array( 3 );
	for ( i = 0; i < shape.length; i++ ) {
		shape[ i ] = floor( randu()*10.0 ) + 10.0;
	}

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		shape[ 0 ] = floor( randu()*10.0 ) + 10.0;
		n = numel( shape );
		if ( n !== n ) {
			b.fail( 'should not return NaN' );
		}
	}
	b.toc();
	if ( n !== n ) {
		b.fail( 'should not return NaN' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
