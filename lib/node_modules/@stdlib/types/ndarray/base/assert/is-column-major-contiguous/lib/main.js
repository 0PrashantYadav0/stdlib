'use strict';

// MODULES //

var isSingleSegmentCompatible = require( '@stdlib/types/ndarray/base/assert/is-single-segment-compatible' );
var iterationOrder = require( '@stdlib/types/ndarray/base/iteration-order' );
var isColumnMajor = require( '@stdlib/types/ndarray/base/assert/is-column-major' );


// MAIN //

/**
* Returns a boolean indicating if an array is column-major contiguous.
*
* @param {NonNegativeIntegerArray} shape - array shape
* @param {IntegerArray} strides - stride array
* @param {NonNegativeInteger} offset - index offset
* @returns {boolean} boolean indicating if an array is column-major contiguous
*
* @example
* var shape = [ 2, 2 ];
* var strides = [ 1, 2 ];
* var offset = 0;
*
* var bool = isColumnMajorContiguous( shape, strides, offset );
* // returns true
*
* @example
* var shape = [ 2, 2 ];
* var strides = [ 1, -2 ];
* var offset = 2;
*
* var bool = isColumnMajorContiguous( shape, strides, offset );
* // returns false
*
* @example
* var shape = [ 2, 2 ];
* var strides = [ 2, 2 ];
* var offset = 0;
*
* var bool = isColumnMajorContiguous( shape, strides, offset );
* // returns false
*/
function isColumnMajorContiguous( shape, strides, offset ) {
	return (
		iterationOrder( strides ) !== 0 &&
		isColumnMajor( strides ) &&
		isSingleSegmentCompatible( shape, strides, offset )
	);
} // end FUNCTION isColumnMajorContiguous()


// EXPORTS //

module.exports = isColumnMajorContiguous;
