'use strict';

// MODULES //

var minmaxViewBufferIndex = require( '@stdlib/types/ndarray/base/minmax-view-buffer-index' );


// MAIN //

/**
* Determines if an array is contiguous.
*
* @private
* @param {NonNegativeInteger} len - array length
* @param {NonNegativeIntegerArray} shape - array shape
* @param {IntegerArray} strides - stride array
* @param {NonNegativeInteger} offset - index offset
* @param {integer} iterationOrder - iteration order
* @returns {boolean} boolean indicating if an array is contiguous
*/
function isContiguous( len, shape, strides, offset, iterationOrder ) {
	var idx;

	// If an array does not contain any elements, then no data to store, and, if the array is unordered, adjacent array elements are not guaranteed to be stored next to each other.
	if ( len === 0 || iterationOrder === 0 ) {
		return false;
	}
	// Ensure that the array is compatible with a single memory segment:
	idx = minmaxViewBufferIndex( shape, strides, offset );
	return ( len === ( idx[1]-idx[0]+1 ) );
} // end FUNCTION isContiguous()


// EXPORTS //

module.exports = isContiguous;
