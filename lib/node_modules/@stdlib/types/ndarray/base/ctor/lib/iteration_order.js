'use strict';

/**
* Returns the iteration order.
*
* ## Notes
*
* -   Return value key:
*
*     - `0`: unordered (i.e., strides of mixed sign; e.g., `[ 9, -3, 1 ]`)
*     - `1`: ordered left-to-right (i.e., all positive strides)
*     - `-1`: ordered right-to-left (i.e., all negative strides)
*
* @private
* @param {IntegerArray} strides - stride array
* @returns {integer} iteration order
*/
function iterationOrder( strides ) {
	var cnt;
	var i;

	cnt = 0;
	for ( i = 0; i < strides.length; i++ ) {
		if ( strides[ i ] < 0 ) {
			cnt += 1;
		}
	}
	if ( cnt === 0 ) {
		// All positive strides:
		return 1|0; // asm-type annotation
	}
	if ( cnt === strides.length ) {
		// All negative strides:
		return -1|0; // asm-type annotation
	}
	// Strides of mixed signs:
	return 0|0; // asm-type annotation
} // end FUNCTION iterationOrder()


// EXPORTS //

module.exports = iterationOrder;
