'use strict';

// MODULES //

var tape = require( 'tape' );
var bytesPerElement = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof bytesPerElement, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns the number of bytes per element provided an underlying array data type', function test( t ) {
	var expected;
	var values;
	var nbytes;
	var i;

	values = [
		'float64',
		'float32',
		'int8',
		'uint8',
		'uint8c',
		'int16',
		'uint16',
		'int32',
		'uint32',
		'binary',
		'generic'
	];

	expected = [
		8,
		4,
		1,
		1,
		1,
		2,
		2,
		4,
		4,
		1,
		null
	];
	for ( i = 0; i < values.length; i++ ) {
		nbytes = bytesPerElement( values[ i ] );
		t.strictEqual( nbytes, expected[ i ], 'returns '+expected[i]+' when provided '+values[i] );
	}
	t.end();
});

tape( 'the function returns `null` if provided an unknown/unsupported data type', function test( t ) {
	var nbytes = bytesPerElement( 'foobar' );
	t.strictEqual( nbytes, null, 'returns expected value' );
	t.end();
});
