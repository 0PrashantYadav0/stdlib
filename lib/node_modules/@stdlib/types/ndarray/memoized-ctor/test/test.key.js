'use strict';

// MODULES //

var tape = require( 'tape' );
var getKey = require( './../lib/key.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof getKey, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns a cache key', function test( t ) {
	var expected;
	var opts;
	var key;

	opts = {
		'codegen': true,
		'mode': 'throw',
		'submode': [ 'throw' ]
	};

	key = getKey( 'float64', opts );
	expected = 'float64;codegen=true,mode="throw",submode=["throw"]';
	t.strictEqual( key, expected, 'returns expected value' );

	key = getKey( 'generic', opts );
	expected = 'generic;codegen=true,mode="throw",submode=["throw"]';
	t.strictEqual( key, expected, 'returns expected value' );

	key = getKey( 'int32', opts );
	expected = 'int32;codegen=true,mode="throw",submode=["throw"]';
	t.strictEqual( key, expected, 'returns expected value' );

	opts = {
		'codegen': true,
		'mode': 'wrap',
		'submode': [ 'clamp', 'clamp', 'wrap', 'throw', 'clamp' ]
	};

	key = getKey( 'float32', opts );
	expected = 'float32;codegen=true,mode="wrap",submode=["clamp","clamp","wrap","throw","clamp"]';
	t.strictEqual( key, expected, 'returns expected value' );

	key = getKey( 'binary', opts );
	expected = 'binary;codegen=true,mode="wrap",submode=["clamp","clamp","wrap","throw","clamp"]';
	t.strictEqual( key, expected, 'returns expected value' );

	key = getKey( 'uint8', opts );
	expected = 'uint8;codegen=true,mode="wrap",submode=["clamp","clamp","wrap","throw","clamp"]';
	t.strictEqual( key, expected, 'returns expected value' );

	t.end();
});
