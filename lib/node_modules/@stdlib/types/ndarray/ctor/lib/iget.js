'use strict';

// METHODS //

var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;
var getIndex = require( '@stdlib/types/ndarray/base/ind' );


// MODULES //

/**
* Returns a method for getting an array element located at a specified linear index.
*
* @private
* @param {Function} base - parent (super) method
* @param {string} mode - specifies how to handle indices which exceed array dimensions
* @returns {Function} method for getting an array element
*/
function wrap( base, mode ) {
	return iget;

	/**
	* Returns an array element located at a specified linear index.
	*
	* @private
	* @param {integer} idx - linear view index
	* @throws {TypeError} index must be an integer value
	* @throws {RangeError} index exceeds array dimensions
	* @returns {*} array element
	*/
	function iget( idx ) {
		/* eslint-disable no-invalid-this */
		if ( !isInteger( idx ) ) {
			throw new TypeError( 'invalid input argument. Index must be an integer value. Value: `'+idx+'`.' );
		}
		idx = getIndex( idx, this._length-1, mode );
		return base.call( this, idx );
	} // end FUNCTION iget()
} // end FUNCTION wrap()


// EXPORTS //

module.exports = wrap;
