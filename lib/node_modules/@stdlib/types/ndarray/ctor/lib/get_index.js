'use strict';

// MAIN //

/**
* Returns an index given an index mode.
*
* @private
* @param {integer} idx - index
* @param {NonNegativeInteger} max - maximum index
* @param {string} mode - specifies how to handle an index which exceeds array dimensions
* @throws {RangeError} index exceeds array dimensions
* @returns {integer} index
*/
function getIndex( idx, max, mode ) {
	var mp1 = max + 1;
	if ( mode === 'clamp' ) {
		if ( idx < 0 ) {
			idx = 0;
		} else if ( idx >= mp1 ) {
			idx = max;
		}
	} else if ( mode === 'wrap' ) {
		if ( idx < 0 ) {
			idx += mp1; // slight optimization to avoid modulo arithmetic when |idx| <= max+1
			if ( idx < 0 ) {
				idx %= mp1;
				if ( idx !== 0 ) {
					idx += mp1;
				}
			}
		} else if ( idx >= mp1 ) {
			idx -= mp1; // slight optimization to avoid modulo arithmetic when max+1 < idx <= 2*(max+1)
			if ( idx >= mp1 ) {
				idx %= mp1;
			}
		}
	} else if ( idx < 0 || idx >= mp1 ) {
		throw new RangeError( 'invalid input argument. Index must not exceed array dimensions. Value: `' + idx + '`.' );
	}
	return idx;
} // end FUNCTION getIndex()


// EXPORTS //

module.exports = getIndex;
