'use strict';

// VARIABLES //

var MAX_FAST_ELEMENT_LENGTH = 64000;


// MAIN //

/**
* Copies the contents of array-like object to a new array.
*
*
* @private
* @param {ArrayLike} arr - input array
* @param {NonNegativeInteger} len - array length
* @returns {Array} output array
*
* @example
* var arr = [ 1.0, 2.0, 3.0 ];
*
* var out = copy( arr, arr.length );
* // returns [ 1.0, 2.0, 3.0 ]
*
* var bool = ( arr === out );
* // returns false
*/
function copy( arr, len ) {
	var out;
	var i;

	// In some engines, we need to ensure "fast elements" for generic arrays...
	if ( len > MAX_FAST_ELEMENT_LENGTH ) {
		out = new Array( MAX_FAST_ELEMENT_LENGTH );
		for ( i = 0; i < MAX_FAST_ELEMENT_LENGTH; i++ ) {
			out[ i ] = arr[ i ];
		}
		for ( i = MAX_FAST_ELEMENT_LENGTH; i < len; i++ ) {
			out.push( arr[ i ] );
		}
		return out;
	}
	out = new Array( len );
	for ( i = 0; i < len; i++ ) {
		out[ i ] = arr[ i ];
	}
	return out;
} // end FUNCTION copy()


// EXPORTS //

module.exports = copy;
