/*
* @license Apache-2.0
*
* Copyright (c) 2019 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// TypeScript Version: 2.0

export interface Iterator {
	/**
	* Returns an iterator protocol-compliant object containing the next iterated value (if one exists) and a boolean flag indicating whether the iterator is finished.
	*
	* @returns iterator protocol-compliant object
	*/
	next(): IteratorResult;

	/**
	* Finishes an iterator.
	*
	* @param value - value to return
	* @returns iterator protocol-compliant object
	*/
	return?( value?: any ): IteratorResult;
}

export interface IterableIterator extends Iterator {
	/**
	* Returns a new iterable iterator.
	*
	* @returns iterable iterator
	*/
	[Symbol.iterator](): IterableIterator;
}

export interface IteratorResult {
	/**
	* Iterated value (if one exists).
	*/
	value?: any;

	/**
	* Boolean flag indicating whether an iterator is finished.
	*/
	done: boolean;
}
