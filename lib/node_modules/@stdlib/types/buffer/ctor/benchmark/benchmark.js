'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isBuffer = require( '@stdlib/assert/is-buffer' );
var pkg = require( './../package.json' ).name;
var ctor = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var buf;
	var i;

	if ( typeof ctor.alloc === 'function' ) {
		b.tic();
		for ( i = 0; i < b.iterations; i++ ) {
			buf = ctor.alloc( 10 );
			if ( buf.length !== 10 ) {
				b.fail( 'should have length 10' );
			}
		}
		b.toc();
	} else {
		b.tic();
		for ( i = 0; i < b.iterations; i++ ) {
			buf = new ctor( 10 );
			if ( buf.length !== 10 ) {
				b.fail( 'should have length 10' );
			}
		}
		b.toc();
	}
	if ( !isBuffer( buf ) ) {
		b.fail( 'should return a Buffer' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
