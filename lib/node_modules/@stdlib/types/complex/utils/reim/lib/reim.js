'use strict';

// MODULES //

var Float64Array = require( '@stdlib/types/float64array' ); // eslint-disable-line no-redeclare
var Float32Array = require( '@stdlib/types/typed-array/float32array' ); // eslint-disable-line no-redeclare


// MAIN //

/**
* Returns the real and imaginary components of a complex number.
*
* @param {Complex} z - complex number
* @returns {(Float64Array|Float32Array)} real and imaginary components
*
* @example
* var Complex128 = require( '@stdlib/types/complex/complex128' );
*
* var z = new Complex128( 5.0, 3.0 );
*
* var out = reim( z );
* // returns <Float64Array>[ 5.0, 3.0 ]
*
* @example
* var Complex64 = require( '@stdlib/types/complex/complex64' );
*
* var z = new Complex64( 5.0, 3.0 );
*
* var out = reim( z );
* // returns <Float32Array>[ 5.0, 3.0 ]
*/
function reim( z ) {
	var out;
	if ( z.BYTES_PER_ELEMENT === 4 ) {
		out = new Float32Array( 2 );
	} else {
		out = new Float64Array( 2 );
	}
	out[ 0 ] = z.re;
	out[ 1 ] = z.im;
	return out;
} // end FUNCTION reim()


// EXPORTS //

module.exports = reim;
