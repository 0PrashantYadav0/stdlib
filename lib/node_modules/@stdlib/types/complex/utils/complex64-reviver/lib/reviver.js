'use strict';

// MODULES //

var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;
var Complex64 = require( '@stdlib/types/complex/float32' );


// MAIN //

/**
* Revives a JSON-serialized 64-bit complex number.
*
* @param {string} key - key
* @param {*} value - value
* @returns {(*|Complex64)} value or 64-bit complex number
*
* @example
* var parseJSON = require( '@stdlib/utils/parse-json' );
*
* var str = '{"type":"Complex64","re":5,"im":3}';
*
* var z = parseJSON( str, reviver );
* // returns <Complex64>
*/
function reviver( key, value ) {
	if (
		value &&
		value.type &&
		value.type === 'Complex64' &&
		isNumber( value.re ) &&
		isNumber( value.im )
	) {
		return new Complex64( value.re, value.im );
	}
	return value;
} // end FUNCTION reviver()


// EXPORTS //

module.exports = reviver;
