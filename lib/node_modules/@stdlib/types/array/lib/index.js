'use strict';

/*
* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );


// MAIN //

/**
* Top-level namespace.
*
* @namespace ns
*/
var ns = {};

/**
* @name ArrayBuffer
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/buffer}
*/
setReadOnly( ns, 'ArrayBuffer', require( '@stdlib/types/array/buffer' ) );

/**
* @name arrayCtors
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/ctors}
*/
setReadOnly( ns, 'arrayCtors', require( '@stdlib/types/array/ctors' ) );

/**
* @name convertArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/convert}
*/
setReadOnly( ns, 'convertArray', require( '@stdlib/types/array/convert' ) );

/**
* @name arrayDataTypes
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/dtypes}
*/
setReadOnly( ns, 'arrayDataTypes', require( '@stdlib/types/array/dtypes' ) );

/**
* @name Float32Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/float32}
*/
setReadOnly( ns, 'Float32Array', require( '@stdlib/types/array/float32' ) );

/**
* @name Float64Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/float64}
*/
setReadOnly( ns, 'Float64Array', require( '@stdlib/types/array/float64' ) );

/**
* @name Int16Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/int16}
*/
setReadOnly( ns, 'Int16Array', require( '@stdlib/types/array/int16' ) );

/**
* @name Int32Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/int32}
*/
setReadOnly( ns, 'Int32Array', require( '@stdlib/types/array/int32' ) );

/**
* @name Int8Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/int8}
*/
setReadOnly( ns, 'Int8Array', require( '@stdlib/types/array/int8' ) );

/**
* @name reviveTypedArray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/reviver}
*/
setReadOnly( ns, 'reviveTypedArray', require( '@stdlib/types/array/reviver' ) );

/**
* @name SharedArrayBuffer
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/shared-buffer}
*/
setReadOnly( ns, 'SharedArrayBuffer', require( '@stdlib/types/array/shared-buffer' ) );

/**
* @name typedarray2json
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/to-json}
*/
setReadOnly( ns, 'typedarray2json', require( '@stdlib/types/array/to-json' ) );

/**
* @name typedarray
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/typed}
*/
setReadOnly( ns, 'typedarray', require( '@stdlib/types/array/typed' ) );

/**
* @name typedarrayCtors
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/typed-ctors}
*/
setReadOnly( ns, 'typedarrayCtors', require( '@stdlib/types/array/typed-ctors' ) );

/**
* @name typedarrayDataTypes
* @memberof ns
* @readonly
* @type {Function}
* @see {@link module:@stdlib/types/array/typed-dtypes}
*/
setReadOnly( ns, 'typedarrayDataTypes', require( '@stdlib/types/array/typed-dtypes' ) );

/**
* @name Uint16Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/uint16}
*/
setReadOnly( ns, 'Uint16Array', require( '@stdlib/types/array/uint16' ) );

/**
* @name Uint32Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/uint32}
*/
setReadOnly( ns, 'Uint32Array', require( '@stdlib/types/array/uint32' ) );

/**
* @name Uint8Array
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/uint8}
*/
setReadOnly( ns, 'Uint8Array', require( '@stdlib/types/array/uint8' ) );

/**
* @name Uint8ClampedArray
* @memberof ns
* @readonly
* @constructor
* @see {@link module:@stdlib/types/array/uint8c}
*/
setReadOnly( ns, 'Uint8ClampedArray', require( '@stdlib/types/array/uint8c' ) );


// EXPORTS //

module.exports = ns;
