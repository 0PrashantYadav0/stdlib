'use strict';

/**
* Creates a CustomTypedArray class.
*
* @private
* @param {TypedArray} ctor - typed array constructor
* @returns {CustomTypedArray} constructor
*/
function createClass( ctor ) {
	if ( !ctor ) {
		ctor = Float64Array;
	}
	/**
	* Create a new object which prototypically inherits from a typed array constructor.
	*
	* @private
	* @constructor
	* @param {Array<number>} data - array data
	* @returns {CustomTypedArray} custom typed array instance
	*/
	function CustomTypedArray( data ) {
		var i;
		for ( i = 0; i < data.length; i++ ) {
			this[ i ] = data[ i ];
		}
		Object.defineProperty( this, 'length', {
			'configurable': false,
			'enumerable': true,
			'writable': false,
			'value': data.length
		});
		return this;
	} // end FUNCTION CustomTypedArray()

	/**
	* Create a prototype which inherits from the parent prototype.
	*/
	CustomTypedArray.prototype = Object.create( ctor.prototype );

	/**
	* Set the constructor.
	*/
	CustomTypedArray.prototype.constructor = CustomTypedArray;

	return CustomTypedArray;
} // end FUNCTION createClass()


// EXPORTS //

module.exports = createClass;
