'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var hasFloat32ArraySupport = require( '@stdlib/utils/detect-float32array-support' )();
var polyfill = require( './../lib/polyfill.js' );
var ctor = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof ctor, 'function', 'main export is a function' );
	t.end();
});

tape( 'if an environment supports `Float32Array`, the export is an alias for `Float32Array`', function test( t ) {
	var Foo;

	Foo = proxyquire( './../lib', {
		'@stdlib/utils/detect-float32array-support': isTrue,
		'./float32array.js': Mock
	});
	t.strictEqual( Foo, Mock, 'returns builtin' );

	if ( hasFloat32ArraySupport ) {
		t.strictEqual( ctor, Float32Array, 'is alias' );
	}

	t.end();

	function Mock() {
		return this;
	}

	function isTrue() {
		return true;
	}
});

tape( 'if an environment does not support `Float32Array`, the export is a polyfill', function test( t ) {
	var Foo;

	Foo = proxyquire( './../lib', {
		'@stdlib/utils/detect-float32array-support': isFalse
	});

	t.strictEqual( Foo, polyfill, 'returns polyfill' );
	t.end();

	function isFalse() {
		return false;
	}
});
