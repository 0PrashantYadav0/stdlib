'use strict';

var NS = {};


// MODULES //

var getKeys = require( 'object-keys' ).shim();
NS.randn = require( '@stdlib/math/base/random/randn' );
NS.randu = require( '@stdlib/math/base/random/randu' );

NS.beta = require( '@stdlib/math/base/random/beta' );
NS.binomial = require( '@stdlib/math/base/random/binomial' );
NS.cauchy = require( '@stdlib/math/base/random/cauchy' );
NS.chisquare = require( '@stdlib/math/base/random/chisquare' );
NS.erlang = require( '@stdlib/math/base/random/erlang' );
NS.exponential = require( '@stdlib/math/base/random/exponential' );
NS.f = require( '@stdlib/math/base/random/f' );
NS.gamma = require( '@stdlib/math/base/random/gamma' );
NS.geometric = require( '@stdlib/math/base/random/geometric' );
NS.gumbel = require( '@stdlib/math/base/random/gumbel' );
NS.hypergeometric = require( '@stdlib/math/base/random/hypergeometric' );
NS.invgamma = require( '@stdlib/math/base/random/invgamma' );
NS.laplace = require( '@stdlib/math/base/random/laplace' );
NS.logistic = require( '@stdlib/math/base/random/logistic' );
NS.lognormal = require( '@stdlib/math/base/random/lognormal' );
NS.negativeBinomial = require( '@stdlib/math/base/random/negative-binomial' );
NS.normal = require( '@stdlib/math/base/random/normal' );
NS.pareto = require( '@stdlib/math/base/random/pareto-type1' );
NS.poisson = require( '@stdlib/math/base/random/poisson' );
NS.rayleigh = require( '@stdlib/math/base/random/rayleigh' );
NS.t = require( '@stdlib/math/base/random/t' );
NS.triangular = require( '@stdlib/math/base/random/triangular' );
NS.uniform = require( '@stdlib/math/base/random/uniform' );
NS.weibull = require( '@stdlib/math/base/random/weibull' );


// VARIABLES //

var KEYS = getKeys( NS );


// ASSIGN //

/**
* Assigns values to a namespace.
*
* @private
* @param {Object} ns - namespace
* @returns {Object} input namespace
*
* @example
* var ns = {};
* assign( ns );
* // ns => {...}
*/
function assign( ns ) {
	var key;
	var i;
	for ( i = 0; i < KEYS.length; i++ ) {
		key = KEYS[ i ];
		ns[ key ] = NS[ key ];
	}
	return ns;
} // end FUNCTION assign()


// EXPORTS //

module.exports = assign;
