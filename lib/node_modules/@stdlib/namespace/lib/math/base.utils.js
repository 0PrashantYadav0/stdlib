'use strict';

var NS = {};


// MODULES //

var getKeys = require( 'object-keys' ).shim();
NS.absdiff = require( '@stdlib/math/base/utils/absolute-difference' );
NS.exponentf = require( '@stdlib/math/base/utils/float32-exponent' );
NS.fromBinaryStringf = require( '@stdlib/math/base/utils/float32-from-binary-string' );
NS.fromWordf = require( '@stdlib/math/base/utils/float32-from-word' );
NS.normalizef = require( '@stdlib/math/base/utils/float32-normalize' );
NS.signbitf = require( '@stdlib/math/base/utils/float32-signbit' );
NS.significandf = require( '@stdlib/math/base/utils/float32-significand' );
NS.toBinaryStringf = require( '@stdlib/math/base/utils/float32-to-binary-string' );
NS.toWordf = require( '@stdlib/math/base/utils/float32-to-word' );
NS.epsdiff = require( '@stdlib/math/base/utils/float64-epsilon-difference' );
NS.exponent = require( '@stdlib/math/base/utils/float64-exponent' );
NS.fromBinaryString = require( '@stdlib/math/base/utils/float64-from-binary-string' );
NS.fromWords = require( '@stdlib/math/base/utils/float64-from-words' );
NS.getHighWord = require( '@stdlib/math/base/utils/float64-get-high-word' );
NS.getLowWord = require( '@stdlib/math/base/utils/float64-get-low-word' );
NS.normalize = require( '@stdlib/math/base/utils/float64-normalize' );
NS.setHighWord = require( '@stdlib/math/base/utils/float64-set-high-word' );
NS.setLowWord = require( '@stdlib/math/base/utils/float64-set-low-word' );
NS.signbit = require( '@stdlib/math/base/utils/float64-signbit' );
NS.toBinaryString = require( '@stdlib/math/base/utils/float64-to-binary-string' );
NS.float64ToFloat32 = require( '@stdlib/math/base/utils/float64-to-float32' );
NS.float64ToInt32 = require( '@stdlib/math/base/utils/float64-to-int32' );
NS.float64ToUint32 = require( '@stdlib/math/base/utils/float64-to-uint32' );
NS.toWords = require( '@stdlib/math/base/utils/float64-to-words' );
NS.isEven = require( '@stdlib/math/base/utils/is-even' );
NS.isfinite = require( '@stdlib/math/base/utils/is-finite' );
NS.isInfinite = require( '@stdlib/math/base/utils/is-infinite' );
NS.isInteger = require( '@stdlib/math/base/utils/is-integer' );
NS.isnan = require( '@stdlib/math/base/utils/is-nan' );
NS.isNegativeInteger = require( '@stdlib/math/base/utils/is-negative-integer' );
NS.isNegativeZero = require( '@stdlib/math/base/utils/is-negative-zero' );
NS.isNonNegativeInteger = require( '@stdlib/math/base/utils/is-nonnegative-integer' );
NS.isNonPositiveInteger = require( '@stdlib/math/base/utils/is-nonpositive-integer' );
NS.isOdd = require( '@stdlib/math/base/utils/is-odd' );
NS.isPositiveInteger = require( '@stdlib/math/base/utils/is-positive-integer' );
NS.isPositiveZero = require( '@stdlib/math/base/utils/is-positive-zero' );
NS.reldiff = require( '@stdlib/math/base/utils/relative-difference' );
NS.toBinaryStringUint16 = require( '@stdlib/math/base/utils/uint16-to-binary-string' );
NS.toBinaryStringUint32 = require( '@stdlib/math/base/utils/uint32-to-binary-string' );
NS.uint32ToInt32 = require( '@stdlib/math/base/utils/uint32-to-int32' );
NS.toBinaryStringUint8 = require( '@stdlib/math/base/utils/uint8-to-binary-string' );


// VARIABLES //

var KEYS = getKeys( NS );


// ASSIGN //

/**
* Assigns modules to a namespace.
*
* @private
* @param {Object} ns - namespace
* @returns {Object} input namespace
*
* @example
* var ns = {};
* assign( ns );
* // ns => {...}
*/
function assign( ns ) {
	var key;
	var i;
	for ( i = 0; i < KEYS.length; i++ ) {
		key = KEYS[ i ];
		ns[ key ] = NS[ key ];
	}
	return ns;
} // end FUNCTION assign()


// EXPORTS //

module.exports = assign;
