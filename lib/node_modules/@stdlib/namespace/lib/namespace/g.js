/* eslint-disable max-lines */
'use strict';

/*
* When adding names to the namespace, ensure that they are added in alphabetical order according to alias (namespace key).
*/

var ns = [];

ns.push({
	'alias': 'GAMMA_LANCZOS_G',
	'path': '@stdlib/constants/math/float64-gamma-lanczos-g',
	'value': require( '@stdlib/constants/math/float64-gamma-lanczos-g' ),
	'type': 'number',
	'related': []
});

ns.push({
	'alias': 'getPrototypeOf',
	'path': '@stdlib/utils/get-prototype-of',
	'value': require( '@stdlib/utils/get-prototype-of' ),
	'type': 'Function',
	'related': [
		'@stdlib/assert/has-prototype'
	]
});

ns.push({
	'alias': 'getuid',
	'path': '@stdlib/utils/getuid',
	'value': require( '@stdlib/utils/getuid' ),
	'type': 'Function',
	'related': []
});

ns.push({
	'alias': 'GLAISHER',
	'path': '@stdlib/constants/math/float64-glaisher-kinkelin',
	'value': require( '@stdlib/constants/math/float64-glaisher-kinkelin' ),
	'type': 'number',
	'related': []
});

ns.push({
	'alias': 'group',
	'path': '@stdlib/utils/group',
	'value': require( '@stdlib/utils/group' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/bifurcate',
		'@stdlib/utils/count-by',
		'@stdlib/utils/group-by'
	]
});

ns.push({
	'alias': 'groupBy',
	'path': '@stdlib/utils/group-by',
	'value': require( '@stdlib/utils/group-by' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/bifurcate-by',
		'@stdlib/utils/count-by',
		'@stdlib/utils/group'
	]
});

ns.push({
	'alias': 'groupByAsync',
	'path': '@stdlib/utils/group-by-async',
	'value': require( '@stdlib/utils/group-by-async' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/bifurcate-by-async',
		'@stdlib/utils/count-by-async',
		'@stdlib/utils/group-by'
	]
});

ns.push({
	'alias': 'groupIn',
	'path': '@stdlib/utils/group-in',
	'value': require( '@stdlib/utils/group-in' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/bifurcate-in',
		'@stdlib/utils/count-in',
		'@stdlib/utils/group-by',
		'@stdlib/utils/group-own'
	]
});

ns.push({
	'alias': 'groupOwn',
	'path': '@stdlib/utils/group-own',
	'value': require( '@stdlib/utils/group-own' ),
	'type': 'Function',
	'related': [
		'@stdlib/utils/bifurcate-own',
		'@stdlib/utils/count-own',
		'@stdlib/utils/group',
		'@stdlib/utils/group-by'
	]
});


// EXPORTS //

module.exports = ns;
