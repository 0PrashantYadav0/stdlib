/**
* @license Apache-2.0
*
* Copyright (c) 2019 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isString = require( '@stdlib/assert/is-string' ).isPrimitive;
var hasOwnProp = require( '@stdlib/assert/has-own-property' );
var objectKeys = require( '@stdlib/utils/keys' );
var replace = require( '@stdlib/string/replace' );
var PKG_TO_ALIAS = require( './../data/data.json' );


// VARIABLES //

var DB;


// FUNCTIONS //

/**
* Converts an internal package name to a standalone package name.
*
* @private
* @param {string} name - internal package name
* @returns {string} standalone package name
*/
function pkg2standalone( name ) {
	// Note: every internal package name begins with `@stdlib/`, which is 8 characters long...
	return '@stdlib/' + replace( name.substring( 8 ), '/', '-' );
}

/**
* Returns an in-memory hash mapping standalone package names to internal package names.
*
* @private
* @returns {Object} hash mapping standalone package names to internal package names
*/
function database() {
	var keys;
	var k;
	var i;

	if ( DB ) {
		return DB;
	}
	DB = {};
	keys = objectKeys( PKG_TO_ALIAS );
	for ( i = 0; i < keys.length; i++ ) {
		k = keys[ i ];
		DB[ pkg2standalone( k ) ] = k;
	}
	return DB;
}


// MAIN //

/**
* Returns the alias associated with a specified package name.
*
* @param {string} pkg - package name
* @throws {TypeError} must provide a string
* @returns {(string|null)} alias
*
* @example
* var v = pkg2alias( '@stdlib/math/base/special/sin' );
* // returns 'base.sin'
*/
function pkg2alias( pkg ) {
	var db;
	if ( !isString( pkg ) ) {
		throw new TypeError( 'invalid argument. Must provide a string. Value: `' + pkg + '`.' );
	}
	if ( hasOwnProp( PKG_TO_ALIAS, pkg ) ) {
		return PKG_TO_ALIAS[ pkg ];
	}
	db = database();
	if ( hasOwnProp( db, pkg ) ) {
		pkg = db[ pkg ];
		if ( hasOwnProp( PKG_TO_ALIAS, pkg ) ) {
			return PKG_TO_ALIAS[ pkg ];
		}
	}
	return null;
}


// EXPORTS //

module.exports = pkg2alias;
