/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MAIN //

/**
* Return a strided array function which fills a strided array.
*
* @private
* @param {*} value - fill value
* @returns {Function} strided array function
*/
function fill( value ) {
	return strided;

	/**
	* Strided array function.
	*
	* @private
	* @param {Array<ArrayLikeObject>} arrays - strided arrays
	* @param {NonNegativeIntegerArray} shape - array containing the number of indexed elements
	* @param {IntegerArray} strides - strides
	* @param {NonNegativeIntegerArray} [offsets] - offsets
	*/
	function strided( arrays, shape, strides, offsets ) {
		var sx;
		var ix;
		var x;
		var N;
		var i;

		N = shape[ 0 ];
		sx = strides[ 0 ];
		if ( offsets ) {
			ix = offsets[ 0 ];
		} else if ( sx < 0 ) {
			ix = (1-N) * sx;
		} else {
			ix = 0;
		}
		for ( i = 0; i < N; i++ ) {
			x[ ix ] = value;
			ix += sx;
		}
	}
}


// EXPORTS //

module.exports = fill;
