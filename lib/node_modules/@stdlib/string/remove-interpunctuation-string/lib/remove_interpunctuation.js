'use strict';

// MODULES //

var isString = require( '@stdlib/utils/is-string' ).isPrimitive;
var replace = require( '@stdlib/utils/replace-string' );


// CONSTANTS //

var PUNCT_REGEX = /[!"'\(\),\â€“./:;<>?\[\\\]`{\|}~]/g;


// REMOVE INTERPUNCTUATION //

/**
* Remove all interpunctuation characters from a string.
*
* @param {string} str - input string
* @returns {string} output string
*
* @example
* var str = 'Sun Tzu said: "A leader leads by example not by force."';
* var out = removeInterpunctuation( str );
* // returns 'Sun Tzu said A leader leads by example not by force'
* @example
* var str = 'Double, double, toil and trouble; Fire burn, and cauldron bubble!';
* var out = removeInterpunctuation( str );
* // returns 'Double double toil and trouble Fire burn and cauldron bubble'
* @example
* var str = 'This module removes these characters: `{}[]:,!/<>().;~|?\'"';
* var out = removeInterpunctuation( str );
* // returns 'This module removes these characters'
*/
function removeInterpunctuation( str ) {
	if ( !isString( str ) ) {
		throw new TypeError( 'invalid input argument. First argument must be a string primitive. Value: `' + str + '`.' );
	}
	return replace( str, PUNCT_REGEX, '' );
} // end FUNCTION removeInterpunctuation()


// EXPORTS //

module.exports = removeInterpunctuation;
