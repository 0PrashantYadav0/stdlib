'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isString = require( '@stdlib/utils/is-string' ).isPrimitive;
var pkg = require( './../package.json' ).name;
var escapeRegexp = require( './../lib' );


// VARIABLES //

var SPECIAL_CHARACTERS = [
	'.', '+', '*', '?', '^', '$', '[', ']', '{', '}', '(', ')', '|', '/'
];
var NCHARS = SPECIAL_CHARACTERS.length;


// MAIN //

bench( pkg, function benchmark( b ) {
	var expected;
	var out;
	var str;
	var i;

	str = 'To be, or not to be, that is the question';

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		out = escapeRegexp( str + SPECIAL_CHARACTERS[ i % NCHARS ] );
		expected = str + '\\' + SPECIAL_CHARACTERS[ i % NCHARS ];
		if ( out !== expected ) {
			b.fail( 'should escape special characters' );
		}
		if ( !isString( out ) ) {
			b.fail( 'should return a string primitive' );
		}
	}
	b.toc();
	if ( isString( out ) && out === expected ) {
		b.pass( 'benchmark finished' );
	} else {
		b.fail( 'should return a string primitive and escape special characters' );
	}
	b.end();
});
