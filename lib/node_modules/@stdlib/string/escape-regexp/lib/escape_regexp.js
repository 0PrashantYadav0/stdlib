'use strict';

// MODULES //

var isString = require( '@stdlib/utils/is-string' ).isPrimitive;
var replace = require( '@stdlib/string/replace' );


// VARIABLES //

var regexpCharacters = /[.+*?^$[\]{}()|/]/g;


// MAIN //

/**
* Escapes regular expression special characters.
*
* @param {string} str - input string
* @throws {TypeError} first argument must be a string primitive
* @returns {string} escaped string
*
* @example
* var str = 'Et tu, Brute?';
* var out = escapeRegexp( str );
* // returns 'Et tu, Brute\?'
* @example
* var str = '2 + 3 * 4 = 12';
* var out = escapeRegexp( str );
* // returns '2 \+ 3 \* 4 = 12'
* @example
* var str = 'The US federal budget was $3.8 trillion (in 2015)';
* var out = escapeRegexp( str );
* // returns 'The US federal budget was \$3\.8 trillion \(in 2015\)'
*/
function escapeRegexp( str ) {
	if ( !isString( str ) ) {
		throw new TypeError( 'invalid input argument. First argument must be a string primitive. Value: `' + str + '`.' );
	}
	return replace( str, regexpCharacters, '\\$&' );
} // end FUNCTION escapeRegexp()


// EXPORTS //

module.exports = escapeRegexp;
