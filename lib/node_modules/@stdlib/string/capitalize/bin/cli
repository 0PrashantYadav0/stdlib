#!/usr/bin/env node
'use strict';

// MODULES //

var join = require( 'path' ).join;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var CLI = require( '@stdlib/tools/cli' );
var stdin = require( '@stdlib/utils/read-stdin' );
var capitalize = require( './../lib' );


// FUNCTIONS //

/**
* Callback invoked upon reading from `stdin`.
*
* @private
* @param {(Error|null)} error - error object
* @param {Buffer} data - data
* @returns {void}
*/
function onRead( error, data ) {
	/* eslint-disable no-console */
	if ( error ) {
		process.exitCode = 1;
		return console.error( 'Error: %s', error.message );
	}
	console.log( capitalize( data.toString() ) );
} // end FUNCTION onRead()


// MAIN //

/**
* Main execution sequence.
*
* @private
* @returns {void}
*/
function main() {
	var args;
	var cli;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './opts.json' ),
		'help': readFileSync( join( __dirname, 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});
	// Get any provided command-line arguments:
	args = cli.args();

	// Check if we are receiving data from `stdin`...
	if ( !process.stdin.isTTY ) {
		return stdin( onRead );
	}
	console.log( capitalize( args[ 0 ] ) ); // eslint-disable-line no-console
} // end FUNCTION main()

main();
