'use strict';

// MODULES //

var tape = require( 'tape' );
var trim = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof trim, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if the `str` value is not a string', function test( t ) {
	var values;
	var i;

	values = [
		5,
		null,
		true,
		undefined,
		NaN,
		[],
		{},
		function(){}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.throws( badValue( values[i] ), TypeError, 'throws an error when provided '+values[i] );
	}
	t.end();

	function badValue( value ) {
		return function() {
			trim( value );
		};
	}
});

tape( 'the function removes all whitespace characters at the beginning and end of a string', function test( t ) {
	var expected;
	var actual;

	expected = 'Whitespace';
	actual = trim( '   Whitespace   ' );
	t.equal( actual, expected, 'removes all spaces' );

	expected = 'Tabs';
	actual = trim( '\t\t\tTabs\t\t\t' );
	t.equal( actual, expected, 'removes all tabs' );

	expected = 'New Lines';
	actual = trim( '\n\n\nNew Lines\n\n\n' );
	t.equal( actual, expected, 'removes all newline characters' );

	t.end();
});
