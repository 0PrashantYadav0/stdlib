/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var sqrt = require( '@stdlib/math/base/special/sqrt' );
var floor = require( '@stdlib/math/base/special/floor' );


// MAIN //

/**
* Returns a boolean indicating whether a positive integer is a prime number.
*
* @private
* @param {PositiveInteger} n - positive integer
* @returns {boolean} boolean indicating whether a provided integer is a prime number
*
* @example
* var bool = isPrime( 5 );
* // returns true
*
* @example
* var bool = isPrime( 4 );
* // returns false
*/
function isPrime( n ) {
	var N;
	var i;
	if ( n <= 3 ) {
		return (n > 1);
	}
	if ( n%2 === 0 ) { // is even?
		return false;
	}
	if ( n < 9 ) {
		return true;
	}
	if ( n%3 === 0 ) {
		return false;
	}
	// Leverage the fact that all primes greater than 3 are of the form 6kÂ±1...
	N = floor( sqrt( n ) );
	for ( i = 5; i <= N; i += 6 ) {
		if ( n%i === 0 || n%(i+2) === 0 ) {
			return false;
		}
	}
	return true;
}


// EXPORTS //

module.exports = isPrime;
