/* eslint-disable object-curly-newline, no-unused-vars */
'use strict';

// MODULES //

var tape = require( 'tape' );
var isCollection = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof isCollection, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `true` if provided a collection', function test( t ) {
	var values;
	var i;

	values = [
		[],
		{ 'length': 10 },
		new Float64Array( 10 ),
		new Float32Array( 10 ),
		new Int32Array( 10 ),
		new Uint32Array( 10 ),
		new Int16Array( 10 ),
		new Uint16Array( 10 ),
		new Int8Array( 10 ),
		new Uint8Array( 10 ),
		new Uint8ClampedArray( 10 ),
		new Buffer( 10 )
	];

	for ( i = 0; i < values.length; i++ ) {
		t.strictEqual( isCollection( values[i] ), true, 'returns true when provided '+values[i] );
	}
	t.end();
});

tape( 'the function returns `false` if not provided a collection', function test( t ) {
	var values;
	var i;

	values = [
		'beep',
		5,
		null,
		undefined,
		NaN,
		true,
		false,
		{},
		function boop( a, b, c ) {}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.strictEqual( isCollection( values[i] ), false, 'returns false when provided '+values[i] );
	}
	t.end();
});
