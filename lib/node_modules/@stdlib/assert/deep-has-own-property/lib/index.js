'use strict';

/**
* Test whether an object contains a nested key path.
*
* @module @stdlib/assert/deep-has-own-property
*
* @example
* var deepHasOwn = require( '@stdlib/assert/deep-has-own-property' );
*
* var obj = {
*     'a': {
*         'b': {
*             'c': 'd'
*         }
*     }
* };
*
* var bool = deepHasOwn( obj, 'a.b.c' );
* // returns true
*
* bool = deepHasOwn( obj, [ 'a', 'b', 'c' ] );
* // returns true
*
* @example
* var factory = require( '@stdlib/assert/deep-has-own-property' ).factory;
*
* var has = factory( 'a/b/c', {
*     'sep': '/'
* });
*
* var bool = has( obj );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var deepHasOwn = require( './main.js' );
var factory = require( './factory.js' );


// MAIN //

setReadOnly( deepHasOwn, 'factory', factory );


// EXPORTS //

module.exports = deepHasOwn;
