'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var isRelativePath = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof isRelativePath, 'function', 'main export is a function' );
	t.end();
});

tape( 'if platform is POSIX, main export is method to test if a string is a POSIX relative path', function test( t ) {
	var isRelativePath = proxyquire( './../lib', {
		'@stdlib/assert/is-windows': false
	});
	t.equal( isRelativePath, isRelativePath.posix, 'equals posix method' );
	t.end();
});

tape( 'if platform is Windows, main export is method to test if a string is a Windows relative path', function test( t ) {
	var isRelativePath = proxyquire( './../lib', {
		'@stdlib/assert/is-windows': true
	});
	t.equal( isRelativePath, isRelativePath.win32, 'equals win32 method' );
	t.end();
});

tape( 'attached to the main export is a method to test if a string is a POSIX relative path', function test( t ) {
	t.equal( typeof isRelativePath.posix, 'function', 'has a posix method' );
	t.end();
});

tape( 'attached to the main export is a method to test if a string is a Windows relative path', function test( t ) {
	t.equal( typeof isRelativePath.win32, 'function', 'has a win32 method' );
	t.end();
});
