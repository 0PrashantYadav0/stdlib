/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var isObjectLike = require( '@stdlib/assert/is-object-like' );
var objectKeys = require( '@stdlib/utils/keys' );


// FUNCTIONS //

/**
* Tests if an object contains a circular reference by recursively traversing object keys.
*
* @private
* @param {Object} obj - object to test
* @param {Array} seen - array of seen objects
* @returns {boolean} boolean indicating whether object contains a circular reference
*/
function isCircObj( obj, seen ) {
	var keys;
	var val;
	var i;

	seen.push( obj );
	keys = objectKeys( obj );
	if ( keys.length === 0 ) {
		return false;
	}
	for ( i = 0; i < keys.length; i++ ) {
		val = obj[ keys[ i ] ];
		if ( val instanceof Object ) {
			if ( seen.indexOf( val ) >= 0 || isCircObj( val, seen.slice() ) ) {
				return true;
			}
		}
	}
	return false;
}


// MAIN //

/**
* Tests if a value is an object or array containing a circular reference.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether value is an object or array containing a circular reference
*
* @example
* var obj = {
*   'a': 'beep',
*   'b': {
*     'c': 'boop'
*   }
* };
* obj.b.self = obj;
* var bool = isCircular( obj );
* // returns true
*
* @example
* var arr = [ 1, 2, 3 ];
* arr.push( arr );
* var bool = isCircular( arr );
* // returns true
*
* @example
* var bool = isCircular( {} );
* // returns false
*
* @example
* var bool = isCircular( null );
* // returns false
*/
function isCircular( value ) {
	if ( !isObjectLike( value ) ) {
		return false;
	}
	return isCircObj( value, [] );
}


// EXPORTS //

module.exports = isCircular;
