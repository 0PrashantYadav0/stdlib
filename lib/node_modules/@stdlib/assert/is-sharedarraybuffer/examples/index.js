'use strict';

var Float32Array = require( '@stdlib/types/array/float32' );
var Float64Array = require( '@stdlib/types/array/float64' );
var Int8Array = require( '@stdlib/types/array/int8' );
var Int16Array = require( '@stdlib/types/array/int16' );
var Int32Array = require( '@stdlib/types/array/int32' );
var Uint8Array = require( '@stdlib/types/array/uint8' );
var Uint8ClampedArray = require( '@stdlib/types/array/uint8c' );
var Uint16Array = require( '@stdlib/types/array/uint16' );
var Uint32Array = require( '@stdlib/types/array/uint32' );
var ArrayBuffer = require( '@stdlib/types/array/buffer' );
var SharedArrayBuffer = require( '@stdlib/types/array/shared-buffer' );
var isSharedArrayBuffer = require( './../lib' );

var bool;
try {
	bool = isSharedArrayBuffer( new SharedArrayBuffer( 10 ) );
	console.log( bool );
	// => true
} catch ( err ) { // eslint-disable-line no-unused-vars
	console.log( 'Environment does not support SharedArrayBuffer' );
}

bool = isSharedArrayBuffer( new ArrayBuffer( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Float32Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Int8Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Uint8Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Uint8ClampedArray( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Int16Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Uint16Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Int32Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Uint32Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Float64Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( new Array( 10 ) );
console.log( bool );
// => false

bool = isSharedArrayBuffer( {} );
console.log( bool );
// => false

bool = isSharedArrayBuffer( null );
console.log( bool );
// => false
