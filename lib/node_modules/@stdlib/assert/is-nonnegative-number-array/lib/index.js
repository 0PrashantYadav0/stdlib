'use strict';

/**
* Test if a value is an array-like object containing only nonnegative numbers.
*
* @module @stdlib/assert/is-nonnegative-number-array
*
* @example
* var isNonNegativeNumberArray = require( '@stdlib/assert/is-nonnegative-number-array' );
*
* var bool = isNonNegativeNumberArray( [ 3.0, new Number(3.0) ] );
* // returns true
*
* bool = isNonNegativeNumberArray( [ 3.0, '3.0' ] );
* // returns false
*
* @example
* // Use interface to check for primitives...
* var isNonNegativeNumberArray = require( '@stdlib/assert/is-nonnegative-number-array' ).primitives;
*
* var bool = isNonNegativeNumberArray( [ 1.0, 0.0, 10.0 ] );
* // returns true
*
* bool = isNonNegativeNumberArray( [ 3.0, new Number(1.0) ] );
* // returns false
*
* @example
* // Use interface to check for objects...
* var isNonNegativeNumberArray = require( '@stdlib/assert/is-nonnegative-number-array' ).objects;
*
* var bool = isNonNegativeNumberArray( [ new Number(3.0), new Number(1.0) ] );
* // returns true
*
* bool = isNonNegativeNumberArray( [ 1.0, 0.0, 10.0 ] );
* // returns false
*/

// MODULES //

var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' );
var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/assert/tools/array-like-function' );


// MAIN //

var isNonNegativeNumberArray = arrayfun( isNonNegativeNumber );
setReadOnly( isNonNegativeNumberArray, 'primitives', arrayfun( isNonNegativeNumber.isPrimitive ) );
setReadOnly( isNonNegativeNumberArray, 'objects', arrayfun( isNonNegativeNumber.isObject ) );


// EXPORTS //

module.exports = isNonNegativeNumberArray;
