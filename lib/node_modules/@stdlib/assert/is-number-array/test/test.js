/* eslint-disable no-new-wrappers */
'use strict';

// MODULES //

var tape = require( 'tape' );
var isNumberArray = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof isNumberArray, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function tests for an array-like object containing only numbers', function test( t ) {
	var arr;

	arr = [ 1, new Number( 2 ), 3, new Number( 4 ) ];
	t.strictEqual( isNumberArray( arr ), true, 'returns true' );

	arr = {
		'length': 2,
		'0': 1,
		'1': 2
	};
	t.strictEqual( isNumberArray( arr ), true, 'returns true' );

	arr = [ 1, '2', 3 ];
	t.strictEqual( isNumberArray( arr ), false, 'returns false' );

	t.end();
});

tape( 'the function provides a method to test for an array-like object containing only number primitives', function test( t ) {
	var arr;

	arr = [ 1, 2, 3, 4 ];
	t.strictEqual( isNumberArray.primitives( arr ), true, 'returns true' );

	arr = {
		'length': 2,
		'0': 1,
		'1': 2
	};
	t.strictEqual( isNumberArray.primitives( arr ), true, 'returns true' );

	arr = [ new Number( 1 ), 2, 3 ];
	t.strictEqual( isNumberArray.primitives( arr ), false, 'returns false' );

	t.end();
});

tape( 'the function provides a method to test for an array-like object containing only `Number` objects', function test( t ) {
	var arr;

	arr = [ new Number( 1 ), new Number( 2 ), new Number( 3 ) ];
	t.strictEqual( isNumberArray.objects( arr ), true, 'returns true' );

	arr = {
		'length': 2,
		'0': new Number( 1 ),
		'1': new Number( 2 )
	};
	t.strictEqual( isNumberArray.objects( arr ), true, 'returns true' );

	arr = [ new Number( 1 ), 2, 3 ];
	t.strictEqual( isNumberArray.objects( arr ), false, 'returns false' );

	t.end();
});
