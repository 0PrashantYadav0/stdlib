/* eslint-disable no-new-wrappers */
'use strict';

// MODULES //

var tape = require( 'tape' );
var isPositiveZero = require( './../lib/primitive.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof isPositiveZero, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `true` if provided a primitive number equal to positive zero', function test( t ) {
	t.strictEqual( isPositiveZero( 0.0 ), true, 'returns true' );
	t.end();
});

tape( 'the function returns `false` if provided a number object, even if the number has a value equal to positive zero', function test( t ) {
	t.strictEqual( isPositiveZero( new Number( 0.0 ) ), false, 'returns false' );
	t.end();
});

tape( 'the function returns `false` if not provided positive zero', function test( t ) {
	var values;
	var i;

	values = [
		'5',
		-0.0,
		new Number( 2.0 ),
		3.14,
		-1.0,
		null,
		true,
		undefined,
		[],
		{},
		function noop() {}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.strictEqual( isPositiveZero( values[i] ), false, 'returns false when provided '+values[i] );
	}
	t.end();
});
