'use strict';

// MODULES //

var tape = require( 'tape' );
var MAX_LENGTH = require( '@stdlib/array/constants/max-typed-array-length' );
var isTypedArrayLength = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof isTypedArrayLength, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `true` if provided a valid typed array length', function test( t ) {
	t.strictEqual( isTypedArrayLength( 0 ), true, 'returns true' );
	t.strictEqual( isTypedArrayLength( 10 ), true, 'returns true' );
	t.strictEqual( isTypedArrayLength( MAX_LENGTH ), true, 'returns true' );
	t.end();
});

tape( 'the function returns `false` if not provided a valid typed array length', function test( t ) {
	t.strictEqual( isTypedArrayLength( MAX_LENGTH+1 ), false, 'returns false' );
	t.strictEqual( isTypedArrayLength( -1 ), false, 'returns false' );
	t.strictEqual( isTypedArrayLength( 3.14 ), false, 'returns false' );
	t.end();
});

tape( 'function returns `false` if not provided a number', function test( t ) {
	var values;
	var i;

	values = [
		'5',
		NaN,
		null,
		true,
		false,
		void 0,
		[],
		{},
		function noop() {}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.strictEqual( isTypedArrayLength( values[i] ), false, 'returns false when provided '+values[i] );
	}
	t.end();
});
