'use strict';

/**
* Test if a value is equal to negative zero.
*
* @module @stdlib/assert/is-negative-zero
*
* @example
* var isNegativeZero = require( '@stdlib/assert/is-negative-zero' );
*
* var bool = isNegativeZero( -0.0 );
* // returns true
*
* bool = isNegativeZero( new Number( -0.0 ) );
* // returns true
*
* bool = isNegativeZero( -3.14 );
* // returns false
*
* bool = isNegativeZero( 5.0 );
* // returns false
*
* bool = isNegativeZero( 0.0 );
* // returns false
*
* bool = isNegativeZero( null );
* // returns false
*
* @example
* var isNegativeZero = require( '@stdlib/assert/is-negative-zero' ).isPrimitive;
*
* var bool = isNegativeZero( -0.0 );
* // returns true
*
* bool = isNegativeZero( new Number( -0.0 ) );
* // returns false
*
* @example
* var isNegativeZero = require( '@stdlib/assert/is-negative-zero' ).isObject;
*
* var bool = isNegativeZero( -0.0 );
* // returns false
*
* bool = isNegativeZero( new Number( -0.0 ) );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var isNegativeZero = require( './generic.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

setReadOnly( isNegativeZero, 'isPrimitive', isPrimitive );
setReadOnly( isNegativeZero, 'isObject', isObject );


// EXPORTS //

module.exports = isNegativeZero;
