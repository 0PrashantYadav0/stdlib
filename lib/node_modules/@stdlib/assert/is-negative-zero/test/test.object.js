/* eslint-disable no-new-wrappers */
'use strict';

// MODULES //

var tape = require( 'tape' );
var isNegativeZero = require( './../lib/object.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof isNegativeZero, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `true` if provided a number object having a value equal to negative zero', function test( t ) {
	t.strictEqual( isNegativeZero( new Number( -0.0 ) ), true, 'returns true' );
	t.end();
});

tape( 'the function returns `false` if provided a primitive number, even if the number is equal to negative zero', function test( t ) {
	t.strictEqual( isNegativeZero( -0.0 ), false, 'returns false' );
	t.end();
});

tape( 'the function returns `false` if not provided negative zero', function test( t ) {
	var values;
	var i;

	values = [
		'5',
		new Number( 0.0 ),
		new Number( 2.0 ),
		new Number( -2.0 ),
		3.14,
		null,
		true,
		undefined,
		[],
		{},
		new Date(),
		/./,
		new RegExp( '.' ),
		function noop() {}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.strictEqual( isNegativeZero( values[i] ), false, 'returns false when provided '+values[i] );
	}
	t.end();
});
