'use strict';

// MODULES //

var getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );
var typeOf = require( '@stdlib/utils/type-of' );
var isError = require( '@stdlib/assert/is-error' );


// MAIN //

/**
* Tests if a value is a `RangeError` object.
*
* @param {*} value - value to test
* @returns {boolean} boolean indicating whether a value is a `RangeError` object
*
* @example
* var bool = isRangeError( new RangeError( 'beep' ) );
* // returns true
*
* @example
* var bool = isRangeError( {} );
* // returns false
*/
function isRangeError( value ) {
	if ( typeof value !== 'object' || value === null ) {
		return false;
	}
	// Check for `RangeError` objects from the same realm (same Node.js `vm` or same `Window` object)...
	if ( value instanceof RangeError ) {
		return true;
	}
	// All `RangeError` objects are `Error` objects...
	if ( isError( value ) ) {
		// Walk the prototype tree until we find the desired constructor...
		while ( value ) {
			if ( typeOf( value ) === 'rangeerror' ) {
				return true;
			}
			value = getPrototypeOf( value );
		}
	}
	return false;
}


// EXPORTS //

module.exports = isRangeError;
