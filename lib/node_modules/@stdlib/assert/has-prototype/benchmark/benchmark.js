'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
var pkg = require( './../package.json' ).name;
var hasPrototype = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var bool;
	var vals;
	var i;

	function Foo() {
		return this;
	}

	vals = [
		new Date(),
		new RegExp( '.*' ),
		new Array( 10 ),
		new Foo()
	];
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		bool = hasPrototype( vals[ i%vals.length ], Foo.prototype );
		if ( !isBoolean( bool ) ) {
			b.fail( 'should return a boolean' );
		}
	}
	b.toc();
	if ( !isBoolean( bool ) ) {
		b.fail( 'should return a boolean' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
