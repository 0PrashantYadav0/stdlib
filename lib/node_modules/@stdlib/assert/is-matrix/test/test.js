'use strict';

// MODULES //

var tape = require( 'tape' );
// var matrix = require( 'dstructs-matrix' );
var isMatrix = require( './../lib' );


// TESTS //

// FIXME //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	// t.equal( typeof isMatrix, 'function', 'main export is a function' );
	t.end();
});

/*
tape( 'function returns `true` if provided a matrix', function test( t ) {
	t.equal( isMatrix( matrix( [10,10] ) ), true, 'returns true' );
	t.end();
});

tape( 'function returns `false` if not provided a matrix', function test( t ) {
	var values;
	var i;

	values = [
		5,
		'5',
		null,
		undefined,
		NaN,
		true,
		[],
		{},
		{
			'data': new Int8Array( 10 ),
			'shape': [5,2],
			'strides': [2,1],
			'dtype': 'int8',
			'length': 10
		},
		function matrix(){}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.equal( isMatrix( values[i] ), false, 'returns false when provided '+values[i] );
	}
	t.end();
});

*/
