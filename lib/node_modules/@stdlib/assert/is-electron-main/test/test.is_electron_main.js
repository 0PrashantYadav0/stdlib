'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var ENV = require( '@stdlib/utils/env' );
var isElectronMain = require( './../lib/is_electron_main.js' );


// FIXTURES //

function Process() {
	this.type = 'browser';
	this.versions = {
		'electron': '1.0.0',
		'chrome': '42.1.34'
	};
	this.env = ENV;
	return this;
}


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof isElectronMain, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `true` if runtime is the main Electron process', function test( t ) {
	var isElectronMain;
	var proc;
	var bool;

	proc = new Process();

	isElectronMain = proxyquire( './../lib/is_electron_main.js', {
		'@stdlib/assert/is-electron': true,
		'./process.js': proc
	});

	bool = isElectronMain();
	t.strictEqual( bool, true, 'returns true' );

	t.end();
});

tape( 'the function returns `false` if runtime is not the main Electron process (not Electron)', function test( t ) {
	var isElectronMain;
	var proc;
	var bool;

	proc = new Process();

	isElectronMain = proxyquire( './../lib/is_electron_main.js', {
		'@stdlib/assert/is-electron': false,
		'./process.js': proc
	});

	bool = isElectronMain();
	t.strictEqual( bool, false, 'returns false' );

	t.end();
});

tape( 'the function returns `false` if runtime is not the main Electron process (process type does not equal `browser`)', function test( t ) {
	var isElectronMain;
	var proc;
	var bool;

	proc = new Process();
	proc.type = 'renderer';

	isElectronMain = proxyquire( './../lib/is_electron_main.js', {
		'@stdlib/assert/is-electron': true,
		'./process.js': proc
	});

	bool = isElectronMain();
	t.strictEqual( bool, false, 'returns false' );

	t.end();
});
