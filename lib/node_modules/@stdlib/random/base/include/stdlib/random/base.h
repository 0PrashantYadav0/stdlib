/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

#ifndef STDLIB_RANDOM_BASE_H
#define STDLIB_RANDOM_BASE_H

#include <stdint.h>

/**
* Base PRNG structure.
*/
struct BasePRNG {
	// Define the generator name:
	const char *name;

	// Define the minimum possible generated integer value:
	const uint64_t min;

	// Define the maximum possible generated integer value:
	const uint64_t max;

	// Define the minimum possible generated double-precision floating-point number:
	const double normalized_min;

	// Define the maximum possible generated double-precision floating-point number:
	const double normalized_max;

	// Define the size of the PRNG state:
	size_t state_size;

	// Define a pointer to a function for returning the next generated value:
	uint64_t (* const next)( void *BasePRNGObject );

	// Define a pointer to a function for returning the next generated value on the interval `[0,1)`:
	double (* const normalized)( void *BasePRNGObject );
};

/**
* Base PRNG wrapper.
*/
struct BasePRNGObject {
	// Define a pointer to the underlying pseudorandom number generator:
	const struct BasePRNG *prng;

	// Define a pointer to the generator state:
	void *state;
};

#endif // !STDLIB_RANDOM_BASE_H
