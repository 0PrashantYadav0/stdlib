/*
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* tslint:disable:no-unused-expression */

import iter = require( './index' );


// TESTS //

// The exported object has the expected function interfaces...
{
	iter.iterawgn; // $ExpectType (iterator: Iterator, sigma: number, options?: Options | undefined) => ExtendedIterator
	iter.iterawln; // $ExpectType (iterator: Iterator, sigma: number, options?: Options | undefined) => ExtendedIterator
	iter.iterawun; // $ExpectType (iterator: Iterator, sigma: number, options?: Options | undefined) => ExtendedIterator
	iter.iterBartlettHannPulse; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterBartlettPulse; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterCosineWave; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterDiracComb; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterFlatTopPulse; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterHannPulse; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterLanczosPulse; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterPeriodicSinc; // $ExpectType (n: number, options?: Options | undefined) => Iterator
	iter.iterPulse; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterSawtoothWave; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterSineWave; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterSquareWave; // $ExpectType (options?: Options | undefined) => Iterator
	iter.iterTriangleWave; // $ExpectType (options?: Options | undefined) => Iterator
}
