'use strict';

// MODULES //

var tape = require( 'tape' );
var join = require( 'path' ).join;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var replace = require( '@stdlib/string/replace' );
var generate = require( './../lib/sync.js' );


// FIXTURES //

var re = /[\r\n\t ]/g;
var dir = join( __dirname, 'fixtures' );
var expected = readFileSync( join( dir, 'sync.txt' ), 'utf8' );
expected = replace( expected, re, '' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof generate, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns a code string for timing a snippet', function test( t ) {
	var before;
	var after;
	var code;
	var opts;
	var out;

	before = 'var beep = \'boop\';';
	code = 'console.log( beep );';
	after = 'console.log( beep+\'!\' );';

	opts = {
		'before': before,
		'after': after,
		'iterations': 1000
	};
	out = generate( 0, code, opts );
	out = replace( out, re, '' );

	t.strictEqual( out, expected, 'returns timing code' );
	t.end();
});
