'use strict';

// MAIN //

/**
* Generates a source code body for synchronous execution.
*
* #### Notes
*
* * Example output:
*
*   ``` javascript
*   "use strict";
*
*   var t1, d1, i1;
*
*   // {{before}}
*
*   t1 = tic();
*   for ( i1 = 0; i1 < 1e6; i1++ ) {
*       // {{code}}
*   }
*   d1 = toc( t1 );
*
*   // {{after}}
*
*   done( null, d1 );
*
*   return 1;
*   ```
*
*
* @private
* @param {number} id - id
* @param {string} code - code to time
* @param {Options} opts - function options
* @param {string} opts.before - setup code
* @param {string} opts.after - cleanup code
* @param {PositiveInteger} opts.iterations - number of iterations
* @returns {string} source code body
*/
function body( id, code, opts ) {
	var src;
	var t;
	var d;
	var i;

	src = '"use strict";';

	// Declare variables:
	i = '__i$'+id+'__';
	t = '__t$'+id+'__';
	d = '__d$'+id+'__';

	src += 'var '+t+','+d+','+i+';';

	// Insert the setup code:
	src += opts.before+';';

	// Start the timer:
	src += t+' = __tic__();';

	// Create the loop:
	src += 'for ( '+i+'= 0; '+i+' < '+opts.iterations+'; '+i+'++ ) {';

	// Insert the loop body:
	src += code+';';

	// Close the loop:
	src += '}';

	// Stop the timer:
	src += d+' = __toc__( '+t+' );';

	// Insert the cleanup code:
	src += opts.after+';';

	// Return results:
	src += '__done__( null, '+d+' );';

	// Return a value:
	src += 'return '+id+';';

	return src;
} // end FUNCTION body()


// EXPORTS //

module.exports = body;
