'use strict';

var hasMapSupport = require( '@stdlib/utils/detect-map-support' )();
var hasWeakMapSupport = require( '@stdlib/utils/detect-weakmap-support' )();
var hasSymbolSupport = require( '@stdlib/utils/detect-symbol-support' )();
var hasSetSupport = require( '@stdlib/utils/detect-set-support' )();
var hasWeakSetSupport = require( '@stdlib/utils/detect-weakset-support' )();
var constructorName = require( './../lib' );

console.log( constructorName( 'a' ) );
// => 'String'

console.log( constructorName( 5 ) );
// => 'Number'

console.log( constructorName( NaN ) );
// => 'Number'

console.log( constructorName( null ) );
// => 'Null'

console.log( constructorName( undefined ) );
// => 'Undefined'

console.log( constructorName( true ) );
// => 'Boolean'

console.log( constructorName( false ) );
// => 'Boolean'

console.log( constructorName( {} ) );
// => 'Object'

console.log( constructorName( [] ) );
// => 'Array'

console.log( constructorName( function noop(){} ) );
// => 'Function'

console.log( constructorName( /./ ) );
// => 'RegExp'

console.log( constructorName( new Date() ) );
// => 'Date'

if ( hasMapSupport ) {
	console.log( constructorName( new Map() ) );
	// => 'Map'
}
if ( hasWeakMapSupport ) {
	console.log( constructorName( new WeakMap() ) );
	// => 'WeakMap'
}
if ( hasSetSupport ) {
	console.log( constructorName( new Set() ) );
	// => 'Set'
}
if ( hasWeakSetSupport ) {
	console.log( constructorName( new WeakSet() ) );
	// => 'WeakSet'
}
if ( hasSymbolSupport ) {
	console.log( constructorName( Symbol() ) );
	// => 'Symbol'
}
console.log( constructorName( new Error() ) );
// => 'Error'

console.log( constructorName( new TypeError() ) );
// => 'TypeError'

console.log( constructorName( new SyntaxError() ) );
// => 'SyntaxError'

console.log( constructorName( new URIError() ) );
// => 'URIError'

console.log( constructorName( new RangeError() ) );
// => 'RangeError'

console.log( constructorName( new ReferenceError() ) );
// => 'ReferenceError'

console.log( constructorName( new EvalError() ) );
// => 'EvalError'

console.log( constructorName( new Int8Array() ) );
// => 'Int8Array'

console.log( constructorName( new Uint8Array() ) );
// => 'Uint8Array'

console.log( constructorName( new Uint8ClampedArray() ) );
// => 'Uint8ClampedArray'

console.log( constructorName( new Int16Array() ) );
// => 'Int16Array'

console.log( constructorName( new Uint16Array() ) );
// => 'Uint16Array'

console.log( constructorName( new Int32Array() ) );
// => 'Int32Array'

console.log( constructorName( new Uint32Array() ) );
// => 'Uint32Array'

console.log( constructorName( new Float32Array() ) );
// => 'Float32Array'

console.log( constructorName( new Float64Array() ) );
// => 'Float64Array'

console.log( constructorName( new ArrayBuffer() ) );
// => 'ArrayBuffer'

console.log( constructorName( new Buffer( 'beep' ) ) );
// => 'Buffer'

console.log( constructorName( Math ) );
// => 'Math'

console.log( constructorName( JSON ) );
// => 'JSON'

function Person(){}
console.log( constructorName( new Person() ) );
// => 'Person'

var Person = function(){};
console.log( constructorName( new Person() ) );
// => ''
