'use strict';

/**
* Tests if a value is a JavaScript primitive.
*
* @module @stdlib/utils/is-primitive
*
* @example
* var isPrimitive = require( '@stdlib/utils/is-primitive' );
*
* var value = true;
*
* var bool = isPrimitive( value );
* // returns true
* @example
* // Use interface to check for primitive arrays...
* var isPrimitive = require( '@stdlib/utils/is-primitive' ).isPrimitiveArray;
*
* var bool = isPrimitive( [ '3', 2, null ] );
* // returns true
*
* bool = isPrimitive( [ {}, 2, 1 ] );
* // returns false
*
* bool = isPrimitive( [ new String('abc'), '3.0' ] );
* // returns false
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-like-function' );
var isPrimitive = require( './is_primitive.js' );


// METHODS //

setReadOnly( isPrimitive, 'isPrimitiveArray',  arrayfun.create( isPrimitive ) );


// EXPORTS //

module.exports = isPrimitive;
