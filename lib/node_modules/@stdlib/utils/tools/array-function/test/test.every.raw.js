'use strict';

// MODULES //

var tape = require( 'tape' );
var noop = require( '@stdlib/utils/noop' );
var isEven = require( './fixtures/isEven.js' );
var every = require( './../lib/every.raw.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof every, 'function', 'main export is a function' );
	t.end();
});

tape( 'function returns `false` if not provided an array', function test( t ) {
	var values;
	var i;
	values = [
		'5',
		5,
		NaN,
		true,
		null,
		undefined,
		{},
	];

	for ( i = 0; i < values.length; i++ ) {
		t.equal( every( noop, values[ i ] ), false, 'returns false' );
	}
	t.end();
});

tape( 'function returns `false` for an empty array', function test( t ) {
	t.equal( every( noop, [] ), false, 'returns false' );
	t.end();
});

tape( 'function tests elements of an array', function test( t ) {
	var arr;
	var out;

	arr = [ 1, 1, 2, 4 ];

	out = every( isEven, arr );
	t.equal( out, false );

	arr = [ 2, 2, 2, 4 ];

	out = every( isEven, arr );
	t.equal( out, true );
	t.end();
});
