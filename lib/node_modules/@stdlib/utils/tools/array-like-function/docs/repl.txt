
{{alias}}( fcn, value )
    Tests if every element of an array-like object passes a test condition.

    The provided test function `fcn` should accept a single argument: an array-
    like object element. If the array-like object element satisfies a test
    condition, the function should return `true`; otherwise, the function should
    return `false`.

    Given an input array-like object, the function returns `true` if all
    elements pass the test and `false` otherwise.

    The function returns `false` for an empty array-like object.

    Parameters
    ----------
    fcn: Function
        Function to apply.

    value: any
        Value to test.

    Returns
    -------
    bool: boolean
        Boolean indicating whether a value is an array-like object for which all
        elements pass the test condition.

    Examples
    --------
    > var arr1 = [ 1, 3, 5, 7 ];
    > var arr2 = [ 3, 5, 'c' ];
    > var bool = {{alias}}( {{alias:@stdlib/utils/is-odd}}, arr1 )
    true
    > bool = {{alias}}( {{alias:@stdlib/utils/is-odd}}, arr2 )
    false


{{alias}}.create( fcn )
    Creates a validation function which validates whether every element of an
    array-like object passes a test condition.

    Parameters
    ----------
    fcn: Function
        Function to apply.

    Returns
    -------
    out: Function
        Validation function.

    Examples
    --------
    > var isOddArray = {{alias}}.create( {{alias:@stdlib/utils/is-odd}} );
    > var bool = isOddArray( [ 1, 3, 5 ] )
    true
    > bool = isOddArray( [ 2, 3, 4 ] )
    false


{{alias}}.raw( fcn, value )
    Tests if every element of an array-like object passes a test condition.

    The provided test function `fcn` should accept a single argument: an array-
    like object element. If the array-like object element satisfies a test
    condition, the function should return `true`; otherwise, the function should
    return `false`.

    Given an input array-like object, the function returns `true` if all
    elements pass the test and `false` otherwise.

    The function returns `false` for an empty array-like object.

    This function forgoes some of the guarantees of the above APIs,
    such as input argument validation. While use of the above APIs is encouraged
    in the REPL, use of the lower-level interface may be warranted when
    arguments are of a known type or when performance is paramount.

    Parameters
    ----------
    fcn: Function
        Function to apply.

    value: any
        Value to test.

    Returns
    -------
    bool: boolean
        Boolean indicating whether a value is an array-like object for which all
        elements pass the test condition.

    Examples
    --------
    > var arr = [ 1, 1, 1, 1, 1 ];
    > var bool = {{alias}}.raw( {{alias:@stdlib/utils/is-odd}}, arr )
    true

    See Also
    --------

