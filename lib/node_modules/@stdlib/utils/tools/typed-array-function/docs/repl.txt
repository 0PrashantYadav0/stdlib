
{{alias}}( fcn, value )
    Tests if every element of a typed array passes a test condition.

    The provided test function `fcn` should accept a single argument: a typed
    array element. If the typed array element satisfies a test condition, the
    function should return `true`; otherwise, the function should return
    `false`.

    Given an input typed array, the function returns `true` if all elements pass
    the test and `false` otherwise.

    The function returns `false` for an empty typed array.

    Parameters
    ----------
    fcn: Function
        Function to apply.

    value: any
        Value to test.

    Returns
    -------
    bool: boolean
        Boolean indicating whether a value is a typed array for which all
        elements pass the test condition.

    Examples
    --------
    > var arr1 = new Int32Array( [ 1, 3, 5, 7 ] );
    > var arr2 = new Int32Array( [ 3, 5, 6, 8 ] );
    > var bool = {{alias}}( {{alias:@stdlib/utils/is-odd}}, arr1 )
    true
    > bool = {{alias}}( {{alias:@stdlib/utils/is-odd}}, arr2 )
    false


{{alias}}.create( fcn )
    Creates a validation function which validates whether every element of a
    typed array passes a test condition.

    Parameters
    ----------
    fcn: Function
        Function to apply.

    Returns
    -------
    out: Function
        Validation function.

    Examples
    --------
    > var isOddTypedArray = {{alias}}.create( {{alias:@stdlib/utils/is-odd}} );
    > var bool = isOddTypedArray( new Int32Array( [ 1, 3, 5 ] ) )
    true
    > bool = isOddTypedArray( new Int32Array( [ 2, 3, 4 ] ) )
    false


{{alias}}.raw( fcn, value )
    Tests if every element of a typed array passes a test condition.

    The provided test function `fcn` should accept a single argument: a typed
    array element. If the typed array element satisfies a test condition, the
    function should return `true`; otherwise, the function should return
    `false`.

    Given an input typed array, the function returns `true` if all elements pass
    the test and `false` otherwise.

    The function returns `false` for an empty typed array.

    This function forgoes some of the guarantees of the above APIs,
    such as input argument validation. While use of the above APIs is encouraged
    in the REPL, use of the lower-level interface may be warranted when
    arguments are of a known type or when performance is paramount.

    Parameters
    ----------
    fcn: Function
        Function to apply.

    value: any
        Value to test.

    Returns
    -------
    bool: boolean
        Boolean indicating whether a value is a typed array for which all
        elements pass the test condition.

    Examples
    --------
    > var arr = new Int16Array( [ 1, 1, 1, 1, 1 ] );
    > var bool = {{alias}}.raw( {{alias:@stdlib/utils/is-odd}}, arr )
    true

    See Also
    --------

