'use strict';

/**
* Test if a value is an array-like object containing only integers.
*
* @module @stdlib/utils/is-integer-array
*
* @example
* var isIntegerArray = require( '@stdlib/utils/is-integer-array' );
*
* var bool = isIntegerArray( [ -3.0, new Number(0.0), 2.0 ] );
* // returns true
*
* bool = isIntegerArray( [ -3.0, '3.0' ] );
* // returns false
*
* @example
* // Use interface to check for primitives...
* var isIntegerArray = require( '@stdlib/utils/is-integer-array' ).primitives;
*
* var bool = isIntegerArray( [ -1.0, 10.0 ] );
* // returns true
*
* bool = isIntegerArray( [ -1.0, 0.0, 5.0 ] );
* // returns true
*
* bool = isIntegerArray( [ -3.0, new Number(-1.0) ] );
* // returns false
*
* @example
* // Use interface to check for objects...
* var isIntegerArray = require( '@stdlib/utils/is-integer-array' ).objects;
*
* var bool = isIntegerArray( [ new Number(1.0), new Number(3.0) ] );
* // returns true
*
* bool = isIntegerArray( [ -1.0, 0.0, 3.0 ] );
* // returns false
*
* bool = isIntegerArray( [ 3.0, new Number(-1.0) ] );
* // returns false
*/

// MODULES //

var isInteger = require( '@stdlib/utils/is-integer' );
var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-like-function' );


// MAIN //

var isIntegerArray = arrayfun.create( isInteger );
setReadOnly( isIntegerArray, 'primitives', arrayfun.create( isInteger.isPrimitive ) );
setReadOnly( isIntegerArray, 'objects', arrayfun.create( isInteger.isObject ) );


// EXPORTS //

module.exports = isIntegerArray;
