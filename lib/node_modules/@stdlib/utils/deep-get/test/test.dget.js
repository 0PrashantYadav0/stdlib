'use strict';

// MODULES //

var tape = require( 'tape' );
var dget = require( './../lib/dget.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof dget, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function deep gets a nested property', function test( t ) {
	var expected;
	var actual;
	var obj;

	obj = {
		'a': {
			'b': {
				'c': 'd'
			}
		},
		'arr': [
			{
				'x': 1,
				'y': 2
			},
			{
				'x': 3,
				'y': 4
			}
		],
		'null': null
	};

	actual = dget( obj, ['a', 'b', 'c'] );
	expected = 'd';

	t.strictEqual( actual, expected, 'deep gets value' );
	t.end();
});

tape( 'the function returns `undefined` if unable to successfully get', function test( t ) {
	var actual;
	var obj;

	obj = {
		'a': {
			'b': {
				'c': 'd'
			}
		},
		'arr': [
			{
				'x': 1,
				'y': 2
			},
			{
				'x': 3,
				'y': 4
			}
		],
		'null': null
	};

	actual = dget( obj, ['a', 'b', 'djfajdfaj'] );
	t.equal( actual, undefined, 'returns undefined' );

	actual = dget( obj, ['null', 'e'] );
	t.equal( actual, undefined, 'returns undefined' );
	t.end();
});

tape( 'the function deep gets into an array', function test( t ) {
	var expected;
	var actual;
	var obj;

	obj = {
		'a': {
			'b': {
				'c': 'd'
			}
		},
		'arr': [
			{
				'x': 1,
				'y': 2
			},
			{
				'x': 3,
				'y': 4
			}
		],
		'null': null
	};

	actual = dget( obj, ['arr', 0, 'y'] );
	expected = 2;

	t.strictEqual( actual, expected, 'deep gets value' );
	t.end();
});
