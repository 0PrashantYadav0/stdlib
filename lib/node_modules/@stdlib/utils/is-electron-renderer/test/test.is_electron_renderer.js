'use strict';

// MODULES //

var tape = require( 'tape' );
var Global = require( 'system.global' )();
var proxyquire = require( 'proxyquire' );
var isElectronRenderer = require( './../lib/is_electron_renderer.js' );


// FIXTURES //

function process() {
	/* jshint validthis:true */ // TODO: eslint
	this.type = 'renderer';
	this.versions = {
		'electron': '1.0.0',
		'chrome': '42.1.34'
	};
	return this;
}


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof isElectronRenderer, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `true` if runtime is the Electron renderer process', function test( t ) {
	var isElectronRenderer;
	var proc;
	var bool;

	proc = Global.process;
	Global.process = new process();

	isElectronRenderer = proxyquire( './../lib/is_electron_renderer.js', {
		'@stdlib/utils/is-electron': true
	});

	bool = isElectronRenderer();
	Global.process = proc;

	t.equal( bool, true, 'returns true' );

	t.end();
});

tape( 'the function returns `false` if runtime is not the Electron renderer process (not Electron)', function test( t ) {
	var isElectronRenderer;
	var proc;
	var bool;

	proc = Global.process;
	Global.process = new process();

	isElectronRenderer = proxyquire( './../lib/is_electron_renderer.js', {
		'@stdlib/utils/is-electron': false
	});

	bool = isElectronRenderer();
	Global.process = proc;

	t.equal( bool, false, 'returns false' );

	t.end();
});

tape( 'the function returns `false` if runtime is not the Electron renderer process (process type does not equal `renderer`)', function test( t ) {
	var isElectronRenderer;
	var proc;
	var bool;

	proc = Global.process;
	Global.process = new process();
	Global.process.type = 'browser';

	isElectronRenderer = proxyquire( './../lib/is_electron_renderer.js', {
		'@stdlib/utils/is-electron': true
	});

	bool = isElectronRenderer();
	Global.process = proc;

	t.equal( bool, false, 'returns false' );

	t.end();
});
