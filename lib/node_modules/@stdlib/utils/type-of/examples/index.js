'use strict';

var hasMapSupport = require( '@stdlib/utils/detect-map-support' )();
var hasWeakMapSupport = require( '@stdlib/utils/detect-weakmap-support' )();
var hasSetSupport = require( '@stdlib/utils/detect-set-support' )();
var hasWeakSetSupport = require( '@stdlib/utils/detect-weakset-support' )();
var hasSymbolSupport = require( '@stdlib/utils/detect-symbol-support' )();
var typeOf = require( './../lib' );

console.log( typeOf( 'a' ) );
// => 'string'

console.log( typeOf( 5 ) );
// => 'number'

console.log( typeOf( NaN ) );
// => 'number'

console.log( typeOf( Number.POSITIVE_INFINITY ) );
// => 'number'

console.log( typeOf( true ) );
// => 'boolean'

console.log( typeOf( false ) );
// => 'boolean'

console.log( typeOf( undefined ) );
// => 'undefined'

console.log( typeOf( null ) );
// => 'null'

console.log( typeOf( [] ) );
// => 'array'

console.log( typeOf( {} ) );
// => 'object'

console.log( typeOf( function noop(){} ) );
// => 'function'

if ( hasMapSupport ) {
	console.log( typeOf( new Map() ) );
	// => 'map'
}
if ( hasWeakMapSupport ) {
	console.log( typeOf( new WeakMap() ) );
	// => 'weakmap'
}
if ( hasSetSupport ) {
	console.log( typeOf( new Set() ) );
	// => 'set'
}
if ( hasWeakSetSupport ) {
	console.log( typeOf( new WeakSet() ) );
	// => 'weakset'
}
if ( hasSymbolSupport ) {
	console.log( typeOf( Symbol() ) );
	// => 'symbol'
}
console.log( typeOf( new Error() ) );
// => 'error'

console.log( typeOf( new TypeError() ) );
// => 'typeerror'

console.log( typeOf( new SyntaxError() ) );
// => 'syntaxerror'

console.log( typeOf( new ReferenceError() ) );
// => 'referenceerror'

console.log( typeOf( new URIError() ) );
// => 'urierror'

console.log( typeOf( new EvalError() ) );
// => 'evalerror'

console.log( typeOf( new RangeError() ) );
// => 'rangeerror'

console.log( typeOf( new Date() ) );
// => 'date'

console.log( typeOf( /./ ) );
// => 'regexp'

console.log( typeOf( Math ) );
// => 'math'

console.log( typeOf( JSON ) );
// => 'json'

console.log( typeOf( new Int8Array() ) );
// => 'int8array'

console.log( typeOf( new Uint8Array() ) );
// => 'uint8array'

console.log( typeOf( new Int16Array() ) );
// => 'int16array'

console.log( typeOf( new Uint16Array() ) );
// => 'uint16array'

console.log( typeOf( new Int32Array() ) );
// => 'int32array'

console.log( typeOf( new Uint32Array() ) );
// => 'uint32array'

console.log( typeOf( new Float32Array() ) );
// => 'float32array'

console.log( typeOf( new Float64Array() ) );
// => 'float64array'

console.log( typeOf( new ArrayBuffer() ) );
// => 'arraybuffer'

function Person(){}
console.log( typeOf( new Person() ) );
// => 'person'

var Person = function(){};
console.log( typeOf( new Person() ) );
// => ''
