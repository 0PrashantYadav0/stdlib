'use strict';

var typeOf = require( './../lib' );

console.log( typeOf( 'a' ) );
// returns 'string'

console.log( typeOf( 5 ) );
// returns 'number'

console.log( typeOf( NaN ) );
// returns 'number'

console.log( typeOf( Number.POSITIVE_INFINITY ) );
// returns 'number'

console.log( typeOf( true ) );
// returns 'boolean'

console.log( typeOf( false ) );
// returns 'boolean'

console.log( typeOf( undefined ) );
// returns 'undefined'

console.log( typeOf( null ) );
// returns 'null'

console.log( typeOf( [] ) );
// returns 'array'

console.log( typeOf( {} ) );
// returns 'object'

console.log( typeOf( function noop(){} ) );
// returns 'function'

console.log( typeOf( new Map() ) );
// returns 'map'

console.log( typeOf( new WeakMap() ) );
// returns 'weakmap'

console.log( typeOf( new Set() ) );
// returns 'set'

console.log( typeOf( new WeakSet() ) );
// returns 'weakset'

console.log( typeOf( Symbol() ) );
// returns 'symbol'

console.log( typeOf( new Error() ) );
// returns 'error'

console.log( typeOf( new TypeError() ) );
// returns 'typeerror'

console.log( typeOf( new SyntaxError() ) );
// returns 'syntaxerror'

console.log( typeOf( new ReferenceError() ) );
// returns 'referenceerror'

console.log( typeOf( new URIError() ) );
// returns 'urierror'

console.log( typeOf( new EvalError() ) );
// returns 'evalerror'

console.log( typeOf( new RangeError() ) );
// returns 'rangeerror'

console.log( typeOf( new Date() ) );
// returns 'date'

console.log( typeOf( /./ ) );
// returns 'regexp'

console.log( typeOf( Math ) );
// returns 'math'

console.log( typeOf( JSON ) );
// returns 'json'

console.log( typeOf( new Int8Array() ) );
// returns 'int8array'

console.log( typeOf( new Uint8Array() ) );
// returns 'uint8array'

console.log( typeOf( new Int16Array() ) );
// returns 'int16array'

console.log( typeOf( new Uint16Array() ) );
// returns 'uint16array'

console.log( typeOf( new Int32Array() ) );
// returns 'int32array'

console.log( typeOf( new Uint32Array() ) );
// returns 'uint32array'

console.log( typeOf( new Float32Array() ) );
// returns 'float32array'

console.log( typeOf( new Float64Array() ) );
// returns 'float64array'

console.log( typeOf( new ArrayBuffer() ) );
// returns 'arraybuffer'

function Person(){}
console.log( typeOf( new Person() ) );
// returns 'person'

var Person = function(){};
console.log( typeOf( new Person() ) );
// returns ''
