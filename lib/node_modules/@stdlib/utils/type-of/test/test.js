'use strict';

// MODULES //

var tape = require( 'tape' );
var PINF = require( '@stdlib/math/constants/float64-pinf' );
var typeOf = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof typeOf, 'function', 'export is a function' );
	t.end();
});

tape( 'the function returns a string indicating the type of an unevaluated operand', function test( t ) {
	var expected;
	var values;
	var type;
	var i;

	values = [
		'a',
		5,
		NaN,
		Number.POSITIVE_INFINITY,
		true,
		false,
		undefined,
		null,
		[],
		{},
		function noop(){}
	];

	expected = [
		'string',
		'number',
		'number',
		'number',
		'boolean',
		'boolean',
		'undefined',
		'null',
		'object',
		'object',
		'function'
	];

	for ( i = 0; i < values.length; i++ ) {
		type = typeOf( values[i] );
		t.equal( type, expected[i], 'returns '+expected[i]+' when provided '+values[i] );
	}
	t.end();
});
