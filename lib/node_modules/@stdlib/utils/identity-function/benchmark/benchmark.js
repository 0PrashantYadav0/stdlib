'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/random/base/randu' );
var pkg = require( './../package.json' ).name;
var identityFunction = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var x;
	var y;
	var i;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		x = randu();

		// Note: the following is likely to be optimized away (via inlining). If so, the benchmark will be only measuring random number generation, not the identity function.
		y = identityFunction( x );
		if ( x !== y ) {
			b.fail( 'should return input value' );
		}
	}
	b.toc();
	if ( x === y ) {
		b.pass( 'benchmark finished' );
	} else {
		b.fail( 'should return input value' );
	}
	b.end();
});
