'use strict';

/**
* Test if a value is an array-like object containing only positive integers.
*
* @module @stdlib/utils/is-positive-integer-array
*
* @example
* var isPositiveIntegerArray = require( '@stdlib/utils/is-positive-integer-array' );
*
* var bool = isPositiveIntegerArray( [ 3.0, new Number(3.0) ] );
* // returns true
*
* bool = isPositiveIntegerArray( [ 3.0, '3.0' ] );
* // returns false
*
* @example
* // Use interface to check for primitives...
* var isPositiveIntegerArray = require( '@stdlib/utils/is-positive-integer-array' ).primitives;
*
* var bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );
* // returns true
*
* bool = isPositiveIntegerArray( [ 3.0, new Number(1.0) ] );
* // returns false
*
* @example
* // Use interface to check for objects...
* var isPositiveIntegerArray = require( '@stdlib/utils/is-positive-integer-array' ).objects;
*
* var bool = isPositiveIntegerArray( [ new Number(3.0), new Number(1.0) ] );
* // returns true
*
* bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );
* // returns false
*/

// MODULES //

var isPositiveInteger = require( '@stdlib/utils/is-positive-integer' );
var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-like-function' );


// VARIABLES //

var isPositiveIntegerArray = arrayfun.create( isPositiveInteger );


// MAIN //

setReadOnly( isPositiveIntegerArray, 'primitives', arrayfun.create( isPositiveInteger.isPrimitive ) );
setReadOnly( isPositiveIntegerArray, 'objects', arrayfun.create( isPositiveInteger.isObject ) );


// EXPORTS //

module.exports = isPositiveIntegerArray;
