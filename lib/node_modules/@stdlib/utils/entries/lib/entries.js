'use strict';

// MODULES //

var getKeys = require( 'object-keys' ).shim();
var isObjectLike = require( '@stdlib/assert/is-object-like' );


// MAIN //

/**
* Returns an array of an object's own enumerable property `[key, value]` pairs.
*
* @param {ObjectLike} obj - input object
* @throws {TypeError} must provide an object-like value
* @returns {Array} array containing key-value pairs
*
* @example
* var obj = {
*     'beep': 'boop',
*     'foo': 'bar'
* };
*
* var entries = objectEntries( obj );
* // e.g., returns [ ['beep', 'boop'], ['foo', 'bar'] ]
*/
function objectEntries( obj ) {
	var keys;
	var out;
	var len;
	var i;
	if ( !isObjectLike( obj ) ) {
		throw new TypeError( 'invalid input argument. Must provide an object-like value. Value: `'+obj+'`.' );
	}
	keys = getKeys( obj );
	len = keys.length;
	out = new Array( len );
	for ( i = 0; i < len; i++ ) {
		out[ i ] = [ keys[i], obj[ keys[i] ] ];
	}
	return out;
}


// EXPORTS //

module.exports = objectEntries;
