'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var pkg = require( './../package.json' ).name;
var factory = require( './../lib/factory.js' );


// MAIN //

bench( pkg+':factory', function benchmark( b ) {
	var forEachRightAsync;
	var arr;
	var i;

	arr = [ 1, 2, 3, 4, 5 ];

	function onItem( value, clbk ) {
		setTimeout( clbk, 0 );
	}

	forEachRightAsync = factory( onItem );

	i = 0;
	b.tic();

	return next();

	function next( error ) {
		i += 1;
		if ( error ) {
			b.fail( 'should not return an error' );
		}
		if ( i <= b.iterations ) {
			return forEachRightAsync( arr, next );
		}
		b.toc();
		b.pass( 'benchmark finished' );
		b.end();
	}
});
