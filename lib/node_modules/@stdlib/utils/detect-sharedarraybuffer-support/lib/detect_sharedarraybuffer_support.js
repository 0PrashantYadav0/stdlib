'use strict';

// MODULES //

var isSharedArrayBuffer = require( '@stdlib/assert/is-sharedarraybuffer' );
var GlobalSharedArrayBuffer = require( './sharedarraybuffer.js' );


// MAIN //

/**
* Tests for native `SharedArrayBuffer` support.
*
* @returns {boolean} boolean indicating if an environment has `SharedArrayBuffer` support
*
* @example
* var bool = hasSharedArrayBufferSupport();
* // returns <boolean>
*/
function hasSharedArrayBufferSupport() { // eslint-disable-line id-length
	var bool;
	var b1;
	var b2;

	if ( typeof GlobalSharedArrayBuffer !== 'function' ) {
		return false;
	}
	// Test basic support...
	try {
		b1 = new GlobalSharedArrayBuffer( 16 );
		b2 = b1.slice( 4, 8 );
		bool = (
			isSharedArrayBuffer( b1 ) &&
			isSharedArrayBuffer( b2 ) &&
			b1.byteLength === 16 &&
			b2.byteLength === 4
		);
	} catch ( err ) { // eslint-disable-line no-unused-vars
		bool = false;
	}
	return bool;
} // end FUNCTION hasSharedArrayBufferSupport()


// EXPORTS //

module.exports = hasSharedArrayBufferSupport;
