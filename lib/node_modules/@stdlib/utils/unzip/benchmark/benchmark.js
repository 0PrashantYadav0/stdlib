'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isArray = require( '@stdlib/assert/is-array' );
var randu = require( '@stdlib/math/base/random/randu' );
var EPS = require( '@stdlib/math/constants/float64-eps' );
var pkg = require( './../package.json' ).name;
var unzip = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var unzipped;
	var arr;
	var len;
	var i;

	arr = new Array( 100 );
	len = arr.length;
	for ( i = 0; i < len; i++ ) {
		arr[ i ] = [
			Date.now(),
			( randu() * 100.0 ) + EPS
		];
	}
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		arr[ i % len ][ 1 ] += 10.0;
		unzipped = unzip( arr );
		if ( !isArray( unzipped ) ) {
			b.fail( 'should return an array' );
		}
	}
	b.toc();
	if ( !isArray( unzipped ) ) {
		b.fail( 'should return an array' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
