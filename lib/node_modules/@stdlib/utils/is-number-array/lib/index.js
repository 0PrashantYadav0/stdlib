'use strict';

/**
* Test if a value is an array-like object of numbers.
*
* @module @stdlib/utils/is-number-array
*
* @example
* var isNumberArray = require( '@stdlib/utils/is-number-array' );
*
* var bool = isNumberArray( [ 1, 2, 3 ] );
* // returns true
*
* bool = isNumberArray( [ '1', 2, 3 ] );
* // returns false
*
* @example
* // Use interface to check for primitives...
* var isNumberArray = require( '@stdlib/utils/is-number-array' ).primitives;
*
* var bool = isNumberArray( [ 1, 2, 3 ] );
* // returns true
*
* bool = isNumberArray( [ 1, new Number( 2 ) ] );
* // returns false
*
* @example
* // Use interface to check for objects...
* var isNumberArray = require( '@stdlib/utils/is-number-array' ).objects;
*
* var bool = isNumberArray( [ new Number( 1 ), new Number( 2 ) ] );
* // returns true
*
* bool = isNumberArray( [ new Number( 1 ), 2 ] );
* // returns false
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-like-function' );
var isNumber = require( '@stdlib/utils/is-number' );


// MAIN //

var isNumberArray = arrayfun.create( isNumber );
setReadOnly( isNumberArray, 'primitives', arrayfun.create( isNumber.isPrimitive ) );
setReadOnly( isNumberArray, 'objects', arrayfun.create( isNumber.isObject ) );


// EXPORTS //

module.exports = isNumberArray;
