'use strict';

/**
* Test if a value is an array-like object containing only negative numbers.
*
* @module @stdlib/utils/is-negative-number-array
*
* @example
* var isNegativeNumberArray = require( '@stdlib/utils/is-negative-number-array' );
*
* var bool = isNegativeNumberArray( [ -3.0, new Number(-3.0) ] );
* // returns true
*
* bool = isNegativeNumberArray( [ -3.0, '-3.0' ] );
* // returns false
*
* @example
* // Use interface to check for primitives...
* var isNegativeNumberArray = require( '@stdlib/utils/is-negative-number-array' ).primitives;
*
* var bool = isNegativeNumberArray( [ -1.0, -5.0, -10.0 ] );
* // returns true
*
* bool = isNegativeNumberArray( [ -3.0, new Number(-1.0) ] );
* // returns false
*
* @example
* // Use interface to check for objects...
* var isNegativeNumberArray = require( '@stdlib/utils/is-negative-number-array' ).objects;
*
* var bool = isNegativeNumberArray( [ new Number(-3.0), new Number(-1.0) ] );
* // returns true
*
* bool = isNegativeNumberArray( [ -1.0, -5.0, -10.0 ] );
* // returns false
*/

// MODULES //

var isNegativeNumber = require( '@stdlib/utils/is-negative-number' );
var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-like-function' );


// VARIABLES //

var isNegativeNumberArray = arrayfun.create( isNegativeNumber );


// MAIN //

setReadOnly( isNegativeNumberArray, 'primitives', arrayfun.create( isNegativeNumber.isPrimitive ) );
setReadOnly( isNegativeNumberArray, 'objects', arrayfun.create( isNegativeNumber.isObject ) );


// EXPORTS //

module.exports = isNegativeNumberArray;
