'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var pkg = require( './../package.json' ).name;
var pop = require( './../lib' );


// MAIN //

bench( pkg+'::array', function benchmark( b ) {
	var arr;
	var len;
	var v;
	var i;

	arr = new Array( b.iterations );
	len = b.iterations;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		v = pop( arr );
		arr = v[ 0 ];
		len -= 1;
		if ( arr.length !== len ) {
			b.fail( 'should have removed an element' );
		}
	}
	b.toc();
	if ( arr.length !== 0 ) {
		b.fail( 'should have removed elements' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});

bench( pkg+'::native', function benchmark( b ) {
	var arr;
	var len;
	var i;

	arr = new Array( b.iterations );
	len = b.iterations;

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		arr.pop();
		len -= 1;
		if ( arr.length !== len ) {
			b.fail( 'should have removed an element' );
		}
	}
	b.toc();
	if ( arr.length !== 0 ) {
		b.fail( 'should have removed elements' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});

