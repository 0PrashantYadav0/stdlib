'use strict';

// MODULES //

var hasOwnProp = require( '@stdlib/assert/has-own-property' );


// MAIN //

/**
* Groups values as arrays associated with distinct keys and outputs element values.
*
* ## Notes
*
* * Checking for an "own" property is necessary to guard against the edge case where a group identifier which matches a method or property on the `Object` prototype.
*
*
* @private
* @param {Collection} collection - collection to group
* @param {Collection} groups - collection defining which group an element in the input collection belongs to
* @returns {Object} group results
*
* @example
* var arr = [ 'beep', 'boop', 'foo', 'bar' ];
* var groups = [ 'b', 'b', 'f', 'b' ];
*
* var out = group( arr, groups );
* // returns { 'b': [ 'beep', 'boop', 'bar' ], 'f': [ 'foo' ] }
*/
function group( collection, groups ) {
	var out;
	var len;
	var g;
	var i;

	len = collection.length;
	out = {};
	for ( i = 0; i < len; i++ ) {
		g = groups[ i ].toString();
		if ( hasOwnProp( out, g ) ) {
			out[ g ].push( collection[ i ] );
		} else {
			out[ g ] = [ collection[ i ] ];
		}
	}
	return out;
} // end FUNCTION group()


// EXPORTS //

module.exports = group;
