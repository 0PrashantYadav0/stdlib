'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/math/base/random/randu' );
var floor = require( '@stdlib/math/base/special/floor' );
var pkg = require( './../package.json' ).name;
var group = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var groups;
	var vals;
	var arr;
	var len;
	var o;
	var i;
	var j;

	vals = [ 'a', 'b', 'c', 'd', 'e' ];

	arr = new Array( 100 );
	len = arr.length;
	for ( i = 0; i < len; i++ ) {
		j = floor( randu()*vals.length );
		arr[ i ] = vals[ j ];
	}
	groups = new Array( len );

	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		for ( j = 0; j < len; j++ ) {
			groups[ j ] = floor( randu()*3.0 );
		}
		o = group( arr, groups );
		if ( typeof o !== 'object' ) {
			b.fail( 'should return an object' );
		}
	}
	b.toc();
	if ( typeof o !== 'object' ) {
		b.fail( 'should return an object' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
