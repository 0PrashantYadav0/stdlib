'use strict';

// MODULES //

var tape = require( 'tape' );
var extname = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof extname, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if provided a filename argument which is not a string', function test( t ) {
	var values;
	var i;

	values = [
		5,
		null,
		NaN,
		true,
		undefined,
		[],
		{},
		function noop() {}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.throws( badValue( values[i] ), TypeError, 'throws an error when provided '+values[i] );
	}
	t.end();

	function badValue( value ) {
		return function badValue() {
			extname( value );
		};
	}
});

tape( 'the function returns a filename extension', function test( t ) {
	var expected;
	var values;
	var i;

	values = [
		'index.js',
		'foo/bar/home.html',
		'.gitignore',
		'.travis.yml',
		'/foo/bar/README.md'
	];

	expected = [
		'.js',
		'.html',
		'',
		'.yml',
		'.md'
	];

	for ( i = 0; i < values.length; i++ ) {
		t.equal( extname( values[ i ] ), expected[ i ], values[ i ] );
	}
	t.end();
});
