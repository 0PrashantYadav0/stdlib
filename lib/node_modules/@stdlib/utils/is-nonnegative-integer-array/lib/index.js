'use strict';

/**
* Test if a value is an array-like object containing only nonnegative integers.
*
* @module @stdlib/utils/is-nonnegative-integer-array
*
* @example
* // Use interface to check for non-negative integer arrays...
* var isNonNegativeIntegerArray = require( '@stdlib/utils/is-nonnegative-integer-array' );
*
* var bool = isNonNegativeIntegerArray( [ 3.0, new Number(3.0) ] );
* // returns true
*
* bool = isNonNegativeIntegerArray( [ 3.0, '3.0' ] );
* // returns false
*
* @example
* // Use interface to check for primitive non-negative integer arrays...
* var isNonNegativeIntegerArray = require( '@stdlib/utils/is-nonnegative-integer' );
*
* var bool = isNonNegativeIntegerArray.primitives( [ 1.0, 0.0, 10.0 ] );
* // returns true
*
* bool = isNonNegativeIntegerArray.primitives( [ 3.0, new Number(1.0) ] );
* // returns false
*
* @example
* // Use interface to check for object non-negative integer arrays...
* var isNonNegativeIntegerArray = require( '@stdlib/utils/is-nonnegative-integer' );
*
* var bool = isNonNegativeIntegerArray.objects( [ new Number(3.0), new Number(1.0) ] );
* // returns true
*
* bool = isNonNegativeIntegerArray.objects( [ 1.0, 0.0, 10.0 ] );
* // returns false
*/

// MODULES //

var isNonNegativeInteger = require( '@stdlib/utils/is-nonnegative-integer' );
var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-like-function' );


// VARIABLES //

var isNonNegativeIntegerArray = arrayfun.create( isNonNegativeInteger );


// METHODS //

setReadOnly( isNonNegativeIntegerArray, 'primitives', arrayfun.create( isNonNegativeInteger.isPrimitive ) );
setReadOnly( isNonNegativeIntegerArray, 'objects', arrayfun.create( isNonNegativeInteger.isObject ) );


// EXPORTS //

module.exports = isNonNegativeIntegerArray;
