'use strict';

// MODULES //

var isString = require( '@stdlib/utils/is-string' ).isPrimitive;
var replace = require( '@stdlib/utils/string/replace' );


// VARIABLES //

var WHITESPACE_REGEX = new RegExp( '[\t\r\n ]+$' );


// RIGHT TRIM //

/**
* Trim whitespace from end of a string.
*
* @param {string} str - input string
* @throws {TypeError} str must be a string primitive
* @returns {string} output string
*
* @example
* var out = rightTrim( '   Whitespace   ' );
* // returns '   Whitespace'
* @example
* var out = rightTrim( '\t\t\tTabs\t\t\t' );
* // returns '\t\t\tTabs'
* @example
* var out = rightTrim( '\n\n\nNew Lines\n\n\n' );
* // returns '\n\n\nNew Lines'
*/
function rightTrim( str ) {
	if ( !isString( str ) ) {
		throw new TypeError( 'invalid input argument. First argument must be a string primitive. Value: `' + str + '`.' );
	}
	return replace( str, WHITESPACE_REGEX, '' );
} // end FUNCTION rightTrim()


// EXPORTS //

module.exports = rightTrim;
