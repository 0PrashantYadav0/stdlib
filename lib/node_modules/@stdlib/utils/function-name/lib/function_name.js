'use strict';

// MODULES //

var isFunction = require( '@stdlib/utils/is-function' );
var isFunctionNameSupported = require( '@stdlib/utils/detect-function-name-support' )();
var RE = require( '@stdlib/regexp/function-name' );


// MAIN //

/**
* Returns the name of a function.
*
* @param {Function} fcn - input function
* @returns {string} function name
*
* @example
* var v = functionName( Math.sqrt );
* // returns 'sqrt'
* @example
* var v = functionName( function foo(){} );
* // returns 'foo'
* @example
* var v = functionName( function(){} );
* // returns '' || 'anonymous'
* @example
* var v = functionName( String );
* // returns 'String'
*/
function functionName( fcn ) {
	// TODO: add support for generator functions?
	if ( isFunction( fcn ) === false ) {
		throw new TypeError( 'invalid input argument. Must provide a function. Value: `' + fcn + '`.' );
	}
	if ( isFunctionNameSupported ) {
		return fcn.name;
	}
	return RE.exec( fcn.toString() )[ 1 ];
} // end FUNCTION functionName()


// EXPORTS //

module.exports = functionName;
