
{{alias}}( fcns, clbk[, thisArg] )
    Executes functions in series, passing the results of one function as
    arguments to the next function.

    Parameters
    ----------
    fcns: Array<Function>
        Array of functions.

    clbk: Function
        Callback to invoke upon completion.

    thisArg: any (optinal)
        Function context.

    Examples
    --------
    > function foo( next ) {
    >     next( null, 'beep' );
    > }
    > function bar( str, next ) {
    >     console.log( str );
    >     next();
    > }
    > function done( error ) {
    >     if ( error ) {
    >         throw error;
    >     }
    > }
    > var fcns = [ foo, bar ];
    > {{alias}}( fcns, done )
    => 'beep'


{{alias}}.factory( fcns, clbk[, thisArg] )
    Returns a reusable waterfall function.

    Parameters
    ----------
    fcns: Array<Function>
        Array of functions.

    clbk: Function
        Callback to invoke upon completion.

    thisArg: any (optinal)
        Function context.

    Returns
    -------
    fcn: Function
        Waterfall function.

    Examples
    --------
    > function foo( next ) { next( null, 'beep' ); };
    > function bar( str, next ) {
    >     console.log( str );
    >     next();
    > };
    > function done( error ) { if ( error ) { throw error; } };
    > var fcns = [ foo, bar ];
    > var waterfall = {{alias}}.factory( fcns, done );
    > waterfall()
    => 'beep'
    > waterfall()
    => 'beep'
    > waterfall()
    => 'beep'

    See Also
    --------

