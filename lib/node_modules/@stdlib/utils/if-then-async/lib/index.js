'use strict';

/**
* If a predicate function returns a truthy value, invoke `x`; otherwise, invoke `y`.
*
* @module @stdlib/utils/if-then-async
*
* @example
* var randu = require( '@stdlib/math/base/random/randu' );
* var ifthenAsync = require( '@stdlib/utils/if-then-async' );
*
* function predicate( clbk ) {
*     setTimeout( onTimeout, 0 );
*     function onTimeout() {
*         clbk( null, randu() > 0.5 );
*     }
* }
*
* function x( clbk ) {
*     setTimeout( onTimeout, 0 );
*     function onTimeout() {
*         clbk( null, 1.0 );
*     }
* }
*
* function y( clbk ) {
*     setTimeout( onTimeout, 0 );
*     function onTimeout() {
*         clbk( null, -1.0 );
*     }
* }
*
* function done( error, result ) {
*     if ( error ) {
*         throw error;
*     }
*     console.log( result );
* }
* ifthenAsync( predicate, x, y, done );
*/

// MODULES //

var ifthenAsync = require( './if_then_async.js' );


// EXPORTS //

module.exports = ifthenAsync;
