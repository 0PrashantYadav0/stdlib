'use strict';

/**
* Tests if a value is a nonpositive integer.
*
* @module @stdlib/utils/is-nonpositive-integer
*
* @example
* var isNonPositiveInteger = require( '@stdlib/utils/is-nonpositive-integer' );
*
* var bool = isNonPositiveInteger( -5.0 );
* // returns true
*
* bool = isNonPositiveInteger( new Number( -5.0 ) );
* // returns true
*
* bool = isNonPositiveInteger( 5.0 );
* // returns false
*
* bool = isNonPositiveInteger( -3.14 );
* // returns false
*
* bool = isNonPositiveInteger( null );
* // returns false
*
* @example
* // Use interface to check for nonpositive integer primitives...
* var isNonPositiveInteger = require( '@stdlib/utils/is-nonpositive-integer' ).isPrimitive;
*
* var bool = isNonPositiveInteger( -3.0 );
* // returns true
*
* bool = isNonPositiveInteger( new Number( -3.0 ) );
* // returns false
*
* @example
* // Use interface to check for nonpositive integer objects...
* var isNonPositiveInteger = require( '@stdlib/utils/is-nonpositive-integer' ).isObject;
*
* var bool = isNonPositiveInteger( -3.0 );
* // returns false
*
* bool = isNonPositiveInteger( new Number( -3.0 ) );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var isNonPositiveInteger = require( './generic.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

setReadOnly( isNonPositiveInteger, 'isPrimitive', isPrimitive );
setReadOnly( isNonPositiveInteger, 'isObject', isObject );


// EXPORTS //

module.exports = isNonPositiveInteger;
