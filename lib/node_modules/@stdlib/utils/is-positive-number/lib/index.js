'use strict';

/**
* Tests if a value is a positive number.
*
* @module @stdlib/utils/is-positive-number
*
* @example
* var isPositiveNumber = require( '@stdlib/utils/is-positive-number' );
*
* var bool = isPositiveNumber( 5.0 );
* // returns true
*
* bool = isPositiveNumber( new Number( 5.0 ) );
* // returns true
*
* bool = isPositiveNumber( 3.14 );
* // returns true
*
* bool = isPositiveNumber( -5.0 );
* // returns false
*
* bool = isPositiveNumber( null );
* // returns false
* @example
* // Use interface to check for positive number primitives...
* var isPositiveNumber = require( '@stdlib/utils/is-positive-number' ).isPrimitive;
*
* var bool = isPositiveNumber( 3.0 );
* // returns true
*
* bool = isPositiveNumber( new Number( 3.0 ) );
* // returns false
* @example
* // Use interface to check for positive number objects...
* var isPositiveNumber = require( '@stdlib/utils/is-positive-number' ).isObject;
*
* var bool = isPositiveNumber( 3.0 );
* // returns false
*
* bool = isPositiveNumber( new Number( 3.0 ) );
* // returns true
* @example
* // Use interface to check for positive number arrays...
* var isPositiveNumber = require( '@stdlib/utils/is-positive-number' ).isPositiveNumberArray;
*
* var bool = isPositiveNumber( [ 3.0, new Number(3.0) ] );
* // returns true
*
* bool = isPositiveNumber( [ 3.0, '3.0' ] );
* // returns false
* @example
* // Use interface to check for primitive positive number arrays...
* var isPositiveNumber = require( '@stdlib/utils/is-positive-number' ).isPositivePrimitiveNumberArray;
*
* var bool = isPositiveNumber( [ 1.0, 0.0, 10.0 ] );
* // returns true
*
* bool = isPositiveNumber( [ 3.0, new Number(1.0) ] );
* // returns false
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-like-function' );
var isPositiveNumber = require( './generic.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// METHODS //

setReadOnly( isPositiveNumber, 'isPrimitive', isPrimitive );
setReadOnly( isPositiveNumber, 'isObject', isObject );
setReadOnly( isPositiveNumber, 'isPositiveNumberArray', arrayfun.create( isPositiveNumber ) );
setReadOnly( isPositiveNumber, 'isPositivePrimitiveNumberArray', arrayfun.create( isPrimitive ) );


// EXPORTS //

module.exports = isPositiveNumber;
