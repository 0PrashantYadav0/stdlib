'use strict';

// MODULES //

var tape = require( 'tape' );
var isBooleanArray = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof isBooleanArray, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function tests for an array-like object containing only booleans', function test( t ) {
	var arr;

	arr = [ true, new Boolean( true ), false, new Boolean( false ) ];
	t.equal( isBooleanArray( arr ), true, 'returns true' );

	arr = {'length': 2, '0': true, '1': false};
	t.equal( isBooleanArray( arr ), true, 'returns true' );

	arr = [ true, 'true', null ];
	t.equal( isBooleanArray( arr ), false, 'returns false' );

	t.end();
});

tape( 'the function provides a method to test for an array-like object containing only boolean primitives', function test( t ) {
	var arr;

	arr = [ true, false, true, false ];
	t.equal( isBooleanArray.primitives( arr ), true, 'returns true' );

	arr = {'length': 2, '0': false, '1': true};
	t.equal( isBooleanArray.primitives( arr ), true, 'returns true' );

	arr = [ new Boolean( true ), false, false ];
	t.equal( isBooleanArray.primitives( arr ), false, 'returns false' );

	t.end();
});

tape( 'the function provides a method to test for an array-like object containing only `Boolean` objects', function test( t ) {
	var arr;

	arr = [ new Boolean( true ), new Boolean( false ), new Boolean( true ) ];
	t.equal( isBooleanArray.objects( arr ), true, 'returns true' );

	arr = {'length': 2, '0': new Boolean( true ), '1': new Boolean( true )};
	t.equal( isBooleanArray.objects( arr ), true, 'returns true' );

	arr = [ new Boolean( true ), false, false ];
	t.equal( isBooleanArray.objects( arr ), false, 'returns false' );

	t.end();
});
