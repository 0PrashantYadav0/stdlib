'use strict';

/**
* If a function does not return an error, invoke a callback with the function result; otherwise, invoke a callback with a value `y`.
*
* @module @stdlib/utils/try-catch-async
*
* @example
* var randu = require( '@stdlib/random/base/randu' );
* var trycatchAsync = require( '@stdlib/utils/try-catch-async' );
*
* function x( clbk ) {
*     setTimeout( onTimeout, 0 );
*     function onTimeout() {
*         if ( randu() > 0.5 ) {
*             return clbk( null, 1.0 );
*         }
*         clbk( new Error( 'beep' ) );
*     }
* }
*
* function done( error, result ) {
*     if ( error ) {
*         console.log( error.message );
*     }
*     console.log( result );
* }
*
* trycatchAsync( x, -1.0, done );
*/

// MODULES //

var trycatchAsync = require( './try_catch_async.js' );


// EXPORTS //

module.exports = trycatchAsync;
