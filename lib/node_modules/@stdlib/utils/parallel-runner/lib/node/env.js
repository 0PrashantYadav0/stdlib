'use strict';

// MODULES //

var copy = require( '@stdlib/utils/copy' );


// ENVIRONMENT VARIABLES //

/**
* Returns worker environment variables.
*
* @private
* @param {Options} opts - options
* @param {PositiveInteger} opts.concurrency - number of scripts to execute concurrently
* @param {PositiveInteger} opts.workers - number of workers
* @param {string} opts.cmd - executable file/command
* @param {boolean} opts.ordered - boolean indicating whether to preserve order of script output
* @param {(NonNegativeInteger|null)} opts.uid - process user identity
* @param {(NonNegativeInteger|null)} opts.gid - process group identity
* @param {string} opts.encoding - `stdio` encoding
* @param {NonNegativeInteger} opts.maxBuffer - max child process `stdio` buffer size
* @returns {Object} environment variables
*/
function env( opts ) {
	var out = copy( process.env );
	out.WORKER_CMD = opts.cmd;
	if ( opts.uid ) {
		out.WORKER_UID = opts.uid;
	}
	if ( opts.gid ) {
		out.WORKER_GID = opts.gid;
	}
	out.WORKER_ENCODING = opts.encoding;
	out.WORKER_MAX_BUFFER = opts.maxBuffer;
	if ( opts.ordered ) {
		out.WORKER_ORDERED = '1';
	}
	return out;
} // end FUNCTION env()


// EXPORTS //

module.exports = env;
