'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/random/base/randu' );
var pkg = require( './../package.json' ).name;
var factory = require( './../lib/factory.js' );


// MAIN //

bench( pkg+':factory', function benchmark( b ) {
	var mapValuesAsync;
	var obj;
	var i;

	function transform( v, k, clbk ) {
		setTimeout( onTimeout, 0 );
		function onTimeout() {
			clbk( null, k+':'+v );
		}
	}
	obj = {
		'a': 'beep',
		'b': 'boop',
		'c': 'foo',
		'd': 'bar',
		'e': randu()
	};
	mapValuesAsync = factory( transform );

	i = 0;
	b.tic();

	return next();

	function next( error ) {
		i += 1;
		if ( error ) {
			b.fail( 'should not return an error' );
		}
		if ( i <= b.iterations ) {
			obj.e = randu();
			return mapValuesAsync( obj, next );
		}
		b.toc();
		b.pass( 'benchmark finished' );
		b.end();
	}
});
