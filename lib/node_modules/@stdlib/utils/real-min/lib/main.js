'use strict';

// MODULES //

var FLOAT16 = require( '@stdlib/constants/math/float16-smallest-normal' );
var FLOAT32 = require( '@stdlib/constants/math/float32-smallest-normal' );
var FLOAT64 = require( '@stdlib/constants/math/float64-smallest-normal' );


// MAIN //

/**
* Returns the smallest positive normal value capable of being represented by a numeric real type.
*
* @param {string} dtype - numeric type
* @throws {TypeError} must provide a recognized numeric type
* @returns {number} smallest positive normal value
*
* @example
* var m = realmin( 'float64' );
* // returns 2.2250738585072014e-308
*
* @example
* var m = realmin( 'float16' );
* // returns 0.00006103515625
*
* @example
* var m = realmin( 'float32' );
* // returns 1.1754943508222875e-38
*/
function realmin( dtype ) {
	switch ( dtype ) {
	case 'float64':
		return FLOAT64;
	case 'float32':
		return FLOAT32;
	case 'float16':
		return FLOAT16;
	default:
		throw new TypeError( 'invalid input argument. Must provide a recognized type. Value: `'+dtype+'`.' );
	}
} // end FUNCTION realmin()


// EXPORTS //

module.exports = realmin;
