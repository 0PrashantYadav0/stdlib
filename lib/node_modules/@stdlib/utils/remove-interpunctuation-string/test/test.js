'use strict';

// MODULES //

var tape = require( 'tape' );
var removeInterpunctuation = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof removeInterpunctuation, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if the `str` value is not a string', function test( t ) {
	var values;
	var i;

	values = [
		5,
		null,
		true,
		undefined,
		NaN,
		[],
		{},
		function(){}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.throws( badValue( values[i] ), TypeError, 'throws an error when provided '+values[i] );
	}
	t.end();

	function badValue( value ) {
		return function() {
			removeInterpunctuation( value );
		};
	}
});

tape( 'the function returns an empty string if provided an empty string', function test( t ) {
	t.equal( removeInterpunctuation( '' ), '', 'returns empty string' );
	t.end();
});


tape( 'the function removes all interpunctuation characters from the provided input string', function test( t ) {
	var expected;
	var out;

	out = removeInterpunctuation( 'Hello, Sir!' );
	expected = 'Hello Sir';
	t.equal( out, expected, 'removes all interpunctuation' );

	out = removeInterpunctuation( '"Too little, too late", he said to me...' );
	expected = 'Too little too late he said to me';
	t.equal( out, expected, 'removes all interpunctuation' );

	out = removeInterpunctuation( 'We don\'t need no education, we don\'t need no thought control' );
	expected = 'We dont need no education we dont need no thought control';
	t.equal( out, expected, 'removes all interpunctuation' );

	out = removeInterpunctuation( 'Sun Tzu said: "A leader leads by example not by force."' );
	expected = 'Sun Tzu said A leader leads by example not by force';
	t.equal( out, expected, 'removes all interpunctuation' );

	t.end();
});
