'use strict';

// MODULES //

var tape = require( 'tape' );
var hasSymbols = require( '@stdlib/utils/detect-symbol-support' )();
var toStr = require( './../lib/tostring.js' );


// VARIABLES //

var opts1 = {
	'skip': !hasSymbols
};
var opts2 = {
	'skip': hasSymbols
};


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof toStr, 'function', 'main export is a function' );
	t.end();
});

tape( 'if an environment supports symbols, the function returns the result of `Symbol.prototype.toString`', opts1, function test( t ) {
	var s = Symbol( 'beep' );
	t.strictEqual( toStr( s ), s.toString(), 'returns expected result' );
	t.strictEqual( toStr( s ), Symbol.prototype.toString.call( s ), 'returns expected result' );
	t.end();
});

tape( 'if an environment does not support symbols, the function throws an error', opts2, function test( t ) {
	t.throws( foo, Error, 'throws an error' );
	t.end();

	function foo() {
		toStr( 'foo' );
	}
});
