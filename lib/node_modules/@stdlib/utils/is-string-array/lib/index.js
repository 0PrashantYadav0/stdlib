'use strict';

/**
* Test if a value is an array of strings.
*
* @module @stdlib/utils/is-string-array
*
* @example
* var isStringArray = require( '@stdlib/utils/is-string-array' );
*
* var bool = isStringArray( [ 'abc', 'def' ] );
* // returns true
*
* bool = isStringArray( [ 'abc', 123 ] );
* // returns false
*
* @example
* // Use interface to check for primitives...
* var isStringArray = require( '@stdlib/utils/is-string-array' ).primitives;
*
* var bool = isStringArray( [ 'abc', 'def' ] );
* // returns true
*
* bool = isStringArray( [ 'abc', new String( 'def' ) ] );
* // returns false
*
* @example
* // Use interface to check for objects...
* var isStringArray = require( '@stdlib/utils/is-string-array' ).objects;
*
* var bool = isStringArray( [ new String( 'abc' ), new String( 'def' ) ] );
* // returns true
*
* bool = isStringArray( [ new String( 'abc' ), 'def' ] );
* // returns false
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var arrayfun = require( '@stdlib/utils/tools/array-function' );
var isString = require( '@stdlib/utils/is-string' );


// VARIABLES //

var isStringArray = arrayfun.create( isString );


// METHODS //


setReadOnly( isStringArray, 'primitives', arrayfun.create( isString.isPrimitive ) );
setReadOnly( isStringArray, 'objects', arrayfun.create( isString.isObject ) );


// EXPORTS //

module.exports = isStringArray;
