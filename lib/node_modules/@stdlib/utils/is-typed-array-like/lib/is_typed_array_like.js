'use strict';

// MODULES //

var isInteger = require( '@stdlib/utils/is-integer' ).isPrimitive;
var MAX = require( '@stdlib/math/constants/uint32-max' );


// IS TYPED-ARRAY-LIKE //

/**
* Tests if a value is typed-array-like.
*
* @param {*} value - value to validate
* @param {boolean} boolean indicating if a value is typed-array-like
*
* @example
* var arr = {
* 	'BYTES_PER_ELEMENT': 8,
* 	'length': 10,
* 	'byteOffset': 0,
* 	'byteLength': 10
* };
* var val = isTypedArrayLike( arr );
* // returns true
* @example
* var val = isTypedArrayLike( new Int8Array( 4 ) );
* // returns true
* @example
* var val = isTypedArrayLike( [] );
* // returns false
* @example
* var val = isTypedArrayLike( {} );
* // returns false
* @example
* var val = isTypedArrayLike( null );
* // returns false
* @example
* var val = isTypedArrayLike( 'beep' );
* // returns false
*/
function isTypedArrayLike( value ) {
	return (
		value !== null &&
		typeof value === 'object' &&
		isInteger( value.length ) &&
		value.length >= 0 &&
		value.length <= MAX &&
		typeof value.BYTES_PER_ELEMENT === 'number' &&
		typeof value.byteOffset === 'number' &&
		typeof value.byteLength === 'number'
	);
} // end FUNCTION isTypedArrayLike()


// EXPORTS //

module.exports = isTypedArrayLike;
