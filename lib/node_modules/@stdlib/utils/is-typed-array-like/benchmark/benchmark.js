'use strict';

// MODULES //

var floor = require( '@stdlib/math/base/special/floor' );
var randu = require( '@stdlib/math/base/random/randu' );
var isTypedArrayLike = require( './../lib' );


// VARIABLES //

var start;
var stop;
var arr;
var len;
var res;
var b;
var i;

arr = {};
arr.BYTES_PER_ELEMENT = 4;
arr.length = 10;
arr.byteOffset = 0;
arr.byteLength = 10;


// FUNCTIONS //

var toStr = Object.prototype.toString;


// MAIN //

// Warm-up...

len = 1e6;
for ( i = 0; i < len; i++ ) {
	i += i * randu();
}
if ( i !== i ) {
	throw new Error( 'something went wrong!' );
}


// Benchmark...

len = 1e6;
res = new Array( 2 );

// Control:
start = process.hrtime();
for ( i = 0; i < len; i++ ) {
	b = ( toStr.call( arr ) === '[object Object]' );
}
stop = process.hrtime( start );
if ( b === null ) {
	throw new Error( 'something went wrong!' );
}

res[ 0 ] = stop[ 0 ] + stop[ 1 ]*1e-9;

// Test:
start = process.hrtime();
for ( i = 0; i < len; i++ ) {
	b = isTypedArrayLike( arr );
}
stop = process.hrtime( start );
if ( b === null ) {
	throw new Error( 'something went wrong!' );
}

res[ 1 ] = stop[ 0 ] + stop[ 1 ]*1e-9;


// Results...

console.log( 'ctrl:\t%d ops/sec', floor( len/res[ 0 ] ) );
console.log( 'test:\t%d ops/sec', floor( len/res[ 1 ] ) );
console.log( '\n' );
