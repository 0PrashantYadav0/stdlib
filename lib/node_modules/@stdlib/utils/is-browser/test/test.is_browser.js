'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var isBrowser = require( './../lib/is_browser.js' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof isBrowser, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function returns `true` if the runtime is a web browser', function test( t ) {
	var isBrowser;
	var win;

	win = {};
	global.window = win;

	isBrowser = proxyquire( './../lib/is_browser.js', {
		'system.global': getGlobal,
		'@stdlib/utils/is-node': false,
		'./global_scope.js': true
	});

	t.equal( isBrowser(), true, 'returns true' );
	t.end();

	function getGlobal() {
		return win;
	}
});

tape( 'the function returns `false` if the runtime is not a web browser (`window` global is not an object)', function test( t ) {
	var isBrowser;
	var win;

	win = true;
	global.window = win;

	isBrowser = proxyquire( './../lib/is_browser.js', {
		'system.global': getGlobal,
		'@stdlib/utils/is-node': false,
		'./global_scope.js': true
	});

	t.equal( isBrowser(), false, 'returns false' );
	t.end();

	function getGlobal() {
		return win;
	}
});

tape( 'the function returns `false` if the runtime is not a web browser (`window` global is not the detected global variable)', function test( t ) {
	var isBrowser;
	var win;

	win = {};
	global.window = win;

	isBrowser = proxyquire( './../lib/is_browser.js', {
		'system.global': getGlobal,
		'@stdlib/utils/is-node': false,
		'./global_scope.js': true
	});

	t.equal( isBrowser(), false, 'returns false' );
	t.end();

	function getGlobal() {
		return {};
	}
});

tape( 'the function returns `false` if the runtime is not a web browser (`window` global is not equal to the global scope)', function test( t ) {
	var isBrowser;
	var win;

	win = {};
	global.window = win;

	isBrowser = proxyquire( './../lib/is_browser.js', {
		'system.global': getGlobal,
		'@stdlib/utils/is-node': false,
		'./global_scope.js': false
	});

	t.equal( isBrowser(), false, 'returns false' );
	t.end();

	function getGlobal() {
		return win;
	}
});
