'use strict';

// MODULES //

var tape = require( 'tape' );
var uppercase = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof uppercase, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if not provided a primitive string', function test( t ) {
	var values;
	var i;

	values = [
		5,
		NaN,
		null,
		undefined,
		true,
		[],
		{},
		function(){}
	];
	for ( i = 0; i < values.length; i++ ) {
		t.throws( badValue( values[i] ), TypeError, 'throws a type error when provided '+values[i] );
	}
	t.end();

	function badValue( value ) {
		return function badValue() {
			uppercase( value );
		};
	}
});

tape( 'the function converts a string to uppercase', function test( t ) {
	var expected;
	var values;
	var actual;
	var i;

	values = [
		'BEEP',
		'beep',
		'Beep',
		'BeEp',
		'Beep BOOP',
		'$**_Beep_BoOp_**$',
		''
	];
	expected = [
		'BEEP',
		'BEEP',
		'BEEP',
		'BEEP',
		'BEEP BOOP',
		'$**_BEEP_BOOP_**$',
		''
	];
	for ( i = 0; i < values.length; i++ ) {
		actual = uppercase( values[i] );
		t.equal( actual, expected[i], 'converts string to '+expected[i] );
	}
	t.end();
});
