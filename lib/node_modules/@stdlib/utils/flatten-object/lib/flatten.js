'use strict';

// MODULES //

var copy = require( '@stdlib/utils/copy' );
var recurse = require( './recurse.js' );


// FLATTEN //

/**
* Flattens an object.
*
* @private
* @param {ObjectLike} obj - object to flatten
* @param {NonNegativeInteger} options.depth - maximum depth to flatten
* @param {boolean} options.copy - boolean indicating whether to deep copy
* @param {boolean} options.flattenArrays - boolean indicating whether to flatten arrays
* @param {string} options.delimiter - key path delimiter
* @returns {Object} flattened object
*/
function flatten( obj, opts ) {
	var out;
	if ( opts.depth === 0 ) {
		out = obj;
	} else {
		out = recurse( {}, obj, '', opts.depth, opts );
	}
	if ( opts.copy ) {
		return copy( out );
	}
	return out;
} // end FUNCTION flatten()


// EXPORTS //

module.exports = flatten;
