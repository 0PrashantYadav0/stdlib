'use strict';

// MODULES //

var isString = require( '@stdlib/utils/is-string' ).isPrimitive;


// IS ABSOLUTE PATH //

/**
* Tests if a string is a Windows absolute path.
*
* @param {string} str - string to test
* @throws {TypeError} must provide a string
* @returns {boolean} boolean indicating if a Windows absolute path
*
* @example
* var bool = isAbsolutePath( 'C:\\foo\\bar\\baz' );
* // returns true
*
* @example
* var bool = isAbsolutePath( 'foo\\bar\\baz' );
* // returns false
*/
function isAbsolutePath( str ) {
	var code;
	var len;
	if ( !isString( str ) ) {
		throw new TypeError( 'invalid input argument. Must provide a string. Value: `'+str+'`.' );
	}
	len = str.length;
	if ( len === 0 ) {
		return false;
	}
	code = str.charCodeAt( 0 );

	// Check if the string begins with either a forward '/' or backward slash '\\':
	if ( code === 47 || code === 92 ) {
		return true;
	}
	// Check for a device root (e.g., C:\\)...
	if (
		(code >= 65 && code <= 90) || // A-Z
		(code >= 97 && code <= 122)   // a-z
	) {
		// Check if the string has a colon ':' character:
		if ( len > 2 && str.charCodeAt( 1 ) === 58 ) {
			code = str.charCodeAt( 2 );

			// Check for either a forward or backward slash:
			if ( code === 47 || code === 92 ) {
				return true;
			}
		}
	}
	return false;
} // end FUNCTION isAbsolutePath()


// EXPORTS //

module.exports = isAbsolutePath;
