'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/math/base/random/randu' );
var pkg = require( './../package.json' ).name;
var omitBy = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var obj;
	var out;
	var i;

	function predicate( key, value ) {
		return ( typeof value === 'number' );
	}
	obj = {
		'a': '1',
		'b': 2,
		'c': NaN,
		'd': null,
		'e': randu()
	};
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		obj.e = randu();
		out = omitBy( obj, predicate );
		if ( typeof out !== 'object' ) {
			b.fail( 'should return an object' );
		}
	}
	b.toc();
	if ( typeof out !== 'object' ) {
		b.fail( 'should return an object' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
