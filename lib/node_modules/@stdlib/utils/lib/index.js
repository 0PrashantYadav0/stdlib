'use strict';

/*
* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );


// MAIN //

/**
* Top-level namespace.
*
* @namespace utils
*/
var utils = {};

/**
* @name append
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/append}
*/
setReadOnly( utils, 'append', require( '@stdlib/utils/append' ) );

/**
* @name bifurcate
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/bifurcate}
*/
setReadOnly( utils, 'bifurcate', require( '@stdlib/utils/bifurcate' ) );

/**
* @name bifurcateBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/bifurcate-by}
*/
setReadOnly( utils, 'bifurcateBy', require( '@stdlib/utils/bifurcate-by' ) );

/**
* @name bifurcateByAsync
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/bifurcate-by-async}
*/
setReadOnly( utils, 'bifurcateByAsync', require( '@stdlib/utils/bifurcate-by-async' ) );

/**
* @name compose
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/compose}
*/
setReadOnly( utils, 'compose', require( '@stdlib/utils/compose' ) );

/**
* @name configdir
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/configdir}
*/
setReadOnly( utils, 'configdir', require( '@stdlib/utils/configdir' ) );

/**
* @name constantFunction
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/constant-function}
*/
setReadOnly( utils, 'constantFunction', require( '@stdlib/utils/constant-function' ) );

/**
* @name constructorName
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/constructor-name}
*/
setReadOnly( utils, 'constructorName', require( '@stdlib/utils/constructor-name' ) );

/**
* @name convertPath
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/convert-path}
*/
setReadOnly( utils, 'convertPath', require( '@stdlib/utils/convert-path' ) );

/**
* @name copy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/copy}
*/
setReadOnly( utils, 'copy', require( '@stdlib/utils/copy' ) );

/**
* @name countBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/count-by}
*/
setReadOnly( utils, 'countBy', require( '@stdlib/utils/count-by' ) );

/**
* @name curry
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/curry}
*/
setReadOnly( utils, 'curry', require( '@stdlib/utils/curry' ) );

/**
* @name curryRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/curry-right}
*/
setReadOnly( utils, 'curryRight', require( '@stdlib/utils/curry-right' ) );

/**
* @name cwd
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/cwd}
*/
setReadOnly( utils, 'cwd', require( '@stdlib/utils/cwd' ) );

/**
* @name deepGet
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/deep-get}
*/
setReadOnly( utils, 'deepGet', require( '@stdlib/utils/deep-get' ) );

/**
* @name deepPluck
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/deep-pluck}
*/
setReadOnly( utils, 'deepPluck', require( '@stdlib/utils/deep-pluck' ) );

/**
* @name deepSet
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/deep-set}
*/
setReadOnly( utils, 'deepSet', require( '@stdlib/utils/deep-set' ) );

/**
* @name setReadOnly
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/define-read-only-property}
*/
setReadOnly( utils, 'setReadOnly', require( '@stdlib/utils/define-read-only-property' ) );

/**
* @name hasClassSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-class-support}
*/
setReadOnly( utils, 'hasClassSupport', require( '@stdlib/utils/detect-class-support' ) );

/**
* @name hasFunctionNameSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-function-name-support}
*/
setReadOnly( utils, 'hasFunctionNameSupport', require( '@stdlib/utils/detect-function-name-support' ) );

/**
* @name hasGeneratorSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-generator-support}
*/
setReadOnly( utils, 'hasGeneratorSupport', require( '@stdlib/utils/detect-generator-support' ) );

/**
* @name hasMapSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-map-support}
*/
setReadOnly( utils, 'hasMapSupport', require( '@stdlib/utils/detect-map-support' ) );

/**
* @name hasProxySupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-proxy-support}
*/
setReadOnly( utils, 'hasProxySupport', require( '@stdlib/utils/detect-proxy-support' ) );

/**
* @name hasSetSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-set-support}
*/
setReadOnly( utils, 'hasSetSupport', require( '@stdlib/utils/detect-set-support' ) );

/**
* @name hasSymbolSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-symbol-support}
*/
setReadOnly( utils, 'hasSymbolSupport', require( '@stdlib/utils/detect-symbol-support' ) );

/**
* @name hasToStringTagSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-tostringtag-support}
*/
setReadOnly( utils, 'hasToStringTagSupport', require( '@stdlib/utils/detect-tostringtag-support' ) );

/**
* @name hasUint8ClampedArraySupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-uint8clampedarray-support}
*/
setReadOnly( utils, 'hasUint8ClampedArraySupport', require( '@stdlib/utils/detect-uint8clampedarray-support' ) );

/**
* @name hasWebAssemblySupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-wasm-support}
*/
setReadOnly( utils, 'hasWebAssemblySupport', require( '@stdlib/utils/detect-wasm-support' ) );

/**
* @name hasWeakMapSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-weakmap-support}
*/
setReadOnly( utils, 'hasWeakMapSupport', require( '@stdlib/utils/detect-weakmap-support' ) );

/**
* @name hasWeakSetSupport
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/detect-weakset-support}
*/
setReadOnly( utils, 'hasWeakSetSupport', require( '@stdlib/utils/detect-weakset-support' ) );

/**
* @name dirname
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/dirname}
*/
setReadOnly( utils, 'dirname', require( '@stdlib/utils/dirname' ) );

/**
* @name entries
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/entries}
*/
setReadOnly( utils, 'entries', require( '@stdlib/utils/entries' ) );

/**
* @name entriesIn
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/entries-in}
*/
setReadOnly( utils, 'entriesIn', require( '@stdlib/utils/entries-in' ) );

/**
* @name ENV
* @memberof utils
* @readonly
* @type {Object}
* @see {@link module:@stdlib/utils/env}
*/
setReadOnly( utils, 'ENV', require( '@stdlib/utils/env' ) );

/**
* @name reviveError
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/error-reviver}
*/
setReadOnly( utils, 'reviveError', require( '@stdlib/utils/error-reviver' ) );

/**
* @name err2json
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/error-to-json}
*/
setReadOnly( utils, 'err2json', require( '@stdlib/utils/error-to-json' ) );

/**
* @name rescape
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/escape-regexp-string}
*/
setReadOnly( utils, 'rescape', require( '@stdlib/utils/escape-regexp-string' ) );

/**
* @name evil
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/eval}
*/
setReadOnly( utils, 'evil', require( '@stdlib/utils/eval' ) );

/**
* @name every
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/every}
*/
setReadOnly( utils, 'every', require( '@stdlib/utils/every' ) );

/**
* @name everyAsync
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/every-async}
*/
setReadOnly( utils, 'everyAsync', require( '@stdlib/utils/every-async' ) );

/**
* @name everyRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/every-right}
*/
setReadOnly( utils, 'everyRight', require( '@stdlib/utils/every-right' ) );

/**
* @name extname
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/extname}
*/
setReadOnly( utils, 'extname', require( '@stdlib/utils/extname' ) );

/**
* @name find
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/find}
*/
setReadOnly( utils, 'find', require( '@stdlib/utils/find' ) );

/**
* @name flattenArray
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/flatten-array}
*/
setReadOnly( utils, 'flattenArray', require( '@stdlib/utils/flatten-array' ) );

/**
* @name flattenObject
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/flatten-object}
*/
setReadOnly( utils, 'flattenObject', require( '@stdlib/utils/flatten-object' ) );

/**
* @name forEach
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/for-each}
*/
setReadOnly( utils, 'forEach', require( '@stdlib/utils/for-each' ) );

/**
* @name forEachAsync
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/for-each-async}
*/
setReadOnly( utils, 'forEachAsync', require( '@stdlib/utils/for-each-async' ) );

/**
* @name forEachRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/for-each-right}
*/
setReadOnly( utils, 'forEachRight', require( '@stdlib/utils/for-each-right' ) );

/**
* @name forIn
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/for-in}
*/
setReadOnly( utils, 'forIn', require( '@stdlib/utils/for-in' ) );

/**
* @name forOwn
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/for-own}
*/
setReadOnly( utils, 'forOwn', require( '@stdlib/utils/for-own' ) );

/**
* @name fromEntries
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/from-entries}
*/
setReadOnly( utils, 'fromEntries', require( '@stdlib/utils/from-entries' ) );

/**
* @name functionName
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/function-name}
*/
setReadOnly( utils, 'functionName', require( '@stdlib/utils/function-name' ) );

/**
* @name functionSequence
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/function-sequence}
*/
setReadOnly( utils, 'functionSequence', require( '@stdlib/utils/function-sequence' ) );

/**
* @name getPrototypeOf
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/get-prototype-of}
*/
setReadOnly( utils, 'getPrototypeOf', require( '@stdlib/utils/get-prototype-of' ) );

/**
* @name getuid
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/getuid}
*/
setReadOnly( utils, 'getuid', require( '@stdlib/utils/getuid' ) );

/**
* @name group
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/group}
*/
setReadOnly( utils, 'group', require( '@stdlib/utils/group' ) );

/**
* @name groupBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/group-by}
*/
setReadOnly( utils, 'groupBy', require( '@stdlib/utils/group-by' ) );

/**
* @name groupByAsync
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/group-by-async}
*/
setReadOnly( utils, 'groupByAsync', require( '@stdlib/utils/group-by-async' ) );

/**
* @name homedir
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/homedir}
*/
setReadOnly( utils, 'homedir', require( '@stdlib/utils/homedir' ) );

/**
* @name identity
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/identity-function}
*/
setReadOnly( utils, 'identity', require( '@stdlib/utils/identity-function' ) );

/**
* @name indexOf
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/index-of}
*/
setReadOnly( utils, 'indexOf', require( '@stdlib/utils/index-of' ) );

/**
* @name inherit
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/inherit}
*/
setReadOnly( utils, 'inherit', require( '@stdlib/utils/inherit' ) );

/**
* @name inmap
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/inmap}
*/
setReadOnly( utils, 'inmap', require( '@stdlib/utils/inmap' ) );

/**
* @name inmapAsync
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/inmap-async}
*/
setReadOnly( utils, 'inmapAsync', require( '@stdlib/utils/inmap-async' ) );

/**
* @name inmapRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/inmap-right}
*/
setReadOnly( utils, 'inmapRight', require( '@stdlib/utils/inmap-right' ) );

/**
* @name keyBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/key-by}
*/
setReadOnly( utils, 'keyBy', require( '@stdlib/utils/key-by' ) );

/**
* @name keyByRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/key-by-right}
*/
setReadOnly( utils, 'keyByRight', require( '@stdlib/utils/key-by-right' ) );

/**
* @name keysIn
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/keys-in}
*/
setReadOnly( utils, 'keysIn', require( '@stdlib/utils/keys-in' ) );

/**
* @name mapKeys
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/map-keys}
*/
setReadOnly( utils, 'mapKeys', require( '@stdlib/utils/map-keys' ) );

/**
* @name mapValues
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/map-values}
*/
setReadOnly( utils, 'mapValues', require( '@stdlib/utils/map-values' ) );

/**
* @name memoize
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/memoize}
*/
setReadOnly( utils, 'memoize', require( '@stdlib/utils/memoize' ) );

/**
* @name merge
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/merge}
*/
setReadOnly( utils, 'merge', require( '@stdlib/utils/merge' ) );

/**
* @name moveProperty
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/move-property}
*/
setReadOnly( utils, 'moveProperty', require( '@stdlib/utils/move-property' ) );

/**
* @name nativeClass
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/native-class}
*/
setReadOnly( utils, 'nativeClass', require( '@stdlib/utils/native-class' ) );

/**
* @name NODE_VERSION
* @memberof utils
* @readonly
* @type {(string|null)}
* @see {@link module:@stdlib/utils/node-version}
*/
setReadOnly( utils, 'NODE_VERSION', require( '@stdlib/utils/node-version' ) );

/**
* @name noop
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/noop}
*/
setReadOnly( utils, 'noop', require( '@stdlib/utils/noop' ) );

/**
* @name NUM_CPUS
* @memberof utils
* @readonly
* @type {PositiveInteger}
* @see {@link module:@stdlib/utils/num-cpus}
*/
setReadOnly( utils, 'NUM_CPUS', require( '@stdlib/utils/num-cpus' ) );

/**
* @name objectInverse
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/object-inverse}
*/
setReadOnly( utils, 'objectInverse', require( '@stdlib/utils/object-inverse' ) );

/**
* @name objectInverseBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/object-inverse-by}
*/
setReadOnly( utils, 'objectInverseBy', require( '@stdlib/utils/object-inverse-by' ) );

/**
* @name omit
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/omit}
*/
setReadOnly( utils, 'omit', require( '@stdlib/utils/omit' ) );

/**
* @name omitBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/omit-by}
*/
setReadOnly( utils, 'omitBy', require( '@stdlib/utils/omit-by' ) );

/**
* @name openURL
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/open-url}
*/
setReadOnly( utils, 'openURL', require( '@stdlib/utils/open-url' ) );

/**
* @name papply
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/papply}
*/
setReadOnly( utils, 'papply', require( '@stdlib/utils/papply' ) );

/**
* @name papplyRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/papply-right}
*/
setReadOnly( utils, 'papplyRight', require( '@stdlib/utils/papply-right' ) );

/**
* @name parallel
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/parallel}
*/
setReadOnly( utils, 'parallel', require( '@stdlib/utils/parallel' ) );

/**
* @name parseJSON
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/parse-json}
*/
setReadOnly( utils, 'parseJSON', require( '@stdlib/utils/parse-json' ) );

/**
* @name PATH_DELIMITER
* @memberof utils
* @readonly
* @type {string}
* @see {@link module:@stdlib/utils/path-delimiter}
*/
setReadOnly( utils, 'PATH_DELIMITER', require( '@stdlib/utils/path-delimiter' ) );

/**
* @name PATH_DELIMITER_POSIX
* @memberof utils
* @readonly
* @type {string}
* @see {@link module:@stdlib/utils/path-delimiter-posix}
*/
setReadOnly( utils, 'PATH_DELIMITER_POSIX', require( '@stdlib/utils/path-delimiter-posix' ) );

/**
* @name PATH_DELIMITER_WIN32
* @memberof utils
* @readonly
* @type {string}
* @see {@link module:@stdlib/utils/path-delimiter-win32}
*/
setReadOnly( utils, 'PATH_DELIMITER_WIN32', require( '@stdlib/utils/path-delimiter-win32' ) );

/**
* @name PATH_SEP
* @memberof utils
* @readonly
* @type {string}
* @see {@link module:@stdlib/utils/path-sep}
*/
setReadOnly( utils, 'PATH_SEP', require( '@stdlib/utils/path-sep' ) );

/**
* @name PATH_SEP_POSIX
* @memberof utils
* @readonly
* @type {string}
* @see {@link module:@stdlib/utils/path-sep-posix}
*/
setReadOnly( utils, 'PATH_SEP_POSIX', require( '@stdlib/utils/path-sep-posix' ) );

/**
* @name PATH_SEP_WIN32
* @memberof utils
* @readonly
* @type {string}
* @see {@link module:@stdlib/utils/path-sep-win32}
*/
setReadOnly( utils, 'PATH_SEP_WIN32', require( '@stdlib/utils/path-sep-win32' ) );

/**
* @name pick
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/pick}
*/
setReadOnly( utils, 'pick', require( '@stdlib/utils/pick' ) );

/**
* @name pickBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/pick-by}
*/
setReadOnly( utils, 'pickBy', require( '@stdlib/utils/pick-by' ) );

/**
* @name PLATFORM
* @memberof utils
* @readonly
* @type {string}
* @see {@link module:@stdlib/utils/platform}
*/
setReadOnly( utils, 'PLATFORM', require( '@stdlib/utils/platform' ) );

/**
* @name pluck
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/pluck}
*/
setReadOnly( utils, 'pluck', require( '@stdlib/utils/pluck' ) );

/**
* @name pop
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/pop}
*/
setReadOnly( utils, 'pop', require( '@stdlib/utils/pop' ) );

/**
* @name prepend
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/prepend}
*/
setReadOnly( utils, 'prepend', require( '@stdlib/utils/prepend' ) );

/**
* @name push
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/push}
*/
setReadOnly( utils, 'push', require( '@stdlib/utils/push' ) );

/**
* @name stdin
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/read-stdin}
*/
setReadOnly( utils, 'stdin', require( '@stdlib/utils/read-stdin' ) );

/**
* @name reduce
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/reduce}
*/
setReadOnly( utils, 'reduce', require( '@stdlib/utils/reduce' ) );

/**
* @name reduceRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/reduce-right}
*/
setReadOnly( utils, 'reduceRight', require( '@stdlib/utils/reduce-right' ) );

/**
* @name reFromString
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/regexp-from-string}
*/
setReadOnly( utils, 'reFromString', require( '@stdlib/utils/regexp-from-string' ) );

/**
* @name reorderArguments
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/reorder-arguments}
*/
setReadOnly( utils, 'reorderArguments', require( '@stdlib/utils/reorder-arguments' ) );

/**
* @name reverseArguments
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/reverse-arguments}
*/
setReadOnly( utils, 'reverseArguments', require( '@stdlib/utils/reverse-arguments' ) );

/**
* @name waterfall
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/series-waterfall}
*/
setReadOnly( utils, 'waterfall', require( '@stdlib/utils/series-waterfall' ) );

/**
* @name shift
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/shift}
*/
setReadOnly( utils, 'shift', require( '@stdlib/utils/shift' ) );

/**
* @name some
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/some}
*/
setReadOnly( utils, 'some', require( '@stdlib/utils/some' ) );

/**
* @name someAsync
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/some-async}
*/
setReadOnly( utils, 'someAsync', require( '@stdlib/utils/some-async' ) );

/**
* @name someRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/some-right}
*/
setReadOnly( utils, 'someRight', require( '@stdlib/utils/some-right' ) );

/**
* @name tabulate
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/tabulate}
*/
setReadOnly( utils, 'tabulate', require( '@stdlib/utils/tabulate' ) );

/**
* @name tabulateBy
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/tabulate-by}
*/
setReadOnly( utils, 'tabulateBy', require( '@stdlib/utils/tabulate-by' ) );

/**
* @name timeit
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/timeit}
*/
setReadOnly( utils, 'timeit', require( '@stdlib/utils/timeit' ) );

/**
* @name tmpdir
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/tmpdir}
*/
setReadOnly( utils, 'tmpdir', require( '@stdlib/utils/tmpdir' ) );

/**
* @name tryFunction
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/try-function}
*/
setReadOnly( utils, 'tryFunction', require( '@stdlib/utils/try-function' ) );

/**
* @name tryRequire
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/try-require}
*/
setReadOnly( utils, 'tryRequire', require( '@stdlib/utils/try-require' ) );

/**
* @name typeOf
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/type-of}
*/
setReadOnly( utils, 'typeOf', require( '@stdlib/utils/type-of' ) );

/**
* @name uncurry
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/uncurry}
*/
setReadOnly( utils, 'uncurry', require( '@stdlib/utils/uncurry' ) );

/**
* @name uncurryRight
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/uncurry-right}
*/
setReadOnly( utils, 'uncurryRight', require( '@stdlib/utils/uncurry-right' ) );

/**
* @name unshift
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/unshift}
*/
setReadOnly( utils, 'unshift', require( '@stdlib/utils/unshift' ) );

/**
* @name unzip
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/unzip}
*/
setReadOnly( utils, 'unzip', require( '@stdlib/utils/unzip' ) );

/**
* @name values
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/values}
*/
setReadOnly( utils, 'values', require( '@stdlib/utils/values' ) );

/**
* @name valuesIn
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/values-in}
*/
setReadOnly( utils, 'valuesIn', require( '@stdlib/utils/values-in' ) );

/**
* @name zip
* @memberof utils
* @readonly
* @type {Function}
* @see {@link module:@stdlib/utils/zip}
*/
setReadOnly( utils, 'zip', require( '@stdlib/utils/zip' ) );


// EXPORTS //

module.exports = utils;
