'use strict';

/**
* Tests if a value is a negative number.
*
* @module @stdlib/utils/is-negative-number
*
* @example
* var isNegativeNumber = require( '@stdlib/utils/is-negative-number' );
*
* var bool = isNegativeNumber( -5.0 );
* // returns true
*
* bool = isNegativeNumber( new Number( -5.0 ) );
* // returns true
*
* bool = isNegativeNumber( -3.14 );
* // returns true
*
* bool = isNegativeNumber( 5.0 );
* // returns false
*
* bool = isNegativeNumber( null );
* // returns false
*
* @example
* // Use interface to check for negative number primitives...
* var isNegativeNumber = require( '@stdlib/utils/is-negative-number' ).isPrimitive;
*
* var bool = isNegativeNumber( -3.0 );
* // returns true
*
* bool = isNegativeNumber( new Number( -3.0 ) );
* // returns false
*
* @example
* // Use interface to check for negative number objects...
* var isNegativeNumber = require( '@stdlib/utils/is-negative-number' ).isObject;
*
* var bool = isNegativeNumber( -3.0 );
* // returns false
*
* bool = isNegativeNumber( new Number( -3.0 ) );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var isNegativeNumber = require( './generic.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

setReadOnly( isNegativeNumber, 'isPrimitive', isPrimitive );
setReadOnly( isNegativeNumber, 'isObject', isObject );


// EXPORTS //

module.exports = isNegativeNumber;
