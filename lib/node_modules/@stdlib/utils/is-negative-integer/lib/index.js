'use strict';

/**
* Test if a value is a negative integer.
*
* @module @stdlib/utils/is-negative-integer
*
* @example
* var isNegativeInteger = require( '@stdlib/utils/is-negative-integer' );
*
* var bool = isNegativeInteger( -5.0 );
* // returns true
*
* bool = isNegativeInteger( new Number( -5.0 ) );
* // returns true
*
* bool = isNegativeInteger( 5.0 );
* // returns false
*
* bool = isNegativeInteger( -3.14 );
* // returns false
*
* bool = isNegativeInteger( null );
* // returns false
*
* @example
* // Use interface to check for negative integer primitives...
* var isNegativeInteger = require( '@stdlib/utils/is-negative-integer' ).isPrimitive;
*
* var bool = isNegativeInteger( -3.0 );
* // returns true
*
* bool = isNegativeInteger( new Number( -3.0 ) );
* // returns false
*
* @example
* // Use interface to check for negative integer objects...
* var isNegativeInteger = require( '@stdlib/utils/is-negative-integer' ).isObject;
*
* var bool = isNegativeInteger( -3.0 );
* // returns false
*
* bool = isNegativeInteger( new Number( -3.0 ) );
* // returns true
*/

// MODULES //

var setReadOnly = require( '@stdlib/utils/define-read-only-property' );
var isNegativeInteger = require( './generic.js' );
var isPrimitive = require( './primitive.js' );
var isObject = require( './object.js' );


// MAIN //

setReadOnly( isNegativeInteger, 'isPrimitive', isPrimitive );
setReadOnly( isNegativeInteger, 'isObject', isObject );


// EXPORTS //

module.exports = isNegativeInteger;
