'use strict';

var hasMapSupport = require( '@stdlib/utils/detect-map-support' )();
var hasWeakMapSupport = require( '@stdlib/utils/detect-weakmap-support' )();
var hasSetSupport = require( '@stdlib/utils/detect-set-support' )();
var hasWeakSetSupport = require( '@stdlib/utils/detect-weakset-support' )();
var hasSymbolSupport = require( '@stdlib/utils/detect-symbol-support' )();
var nativeClass = require( './../lib' );

console.log( nativeClass( 'a' ) );
// returns '[object String]'

console.log( nativeClass( 5 ) );
// returns '[object Number]'

console.log( nativeClass( NaN ) );
// returns '[object Number]'

console.log( nativeClass( null ) );
// returns '[object Null]'

console.log( nativeClass( undefined ) );
// returns '[object Undefined]'

console.log( nativeClass( true ) );
// returns '[object Boolean]'

console.log( nativeClass( false ) );
// returns '[object Boolean]'

console.log( nativeClass( {} ) );
// returns '[object Object]'

console.log( nativeClass( [] ) );
// returns '[object Array]'

console.log( nativeClass( function noop(){} ) );
// returns '[object Function]'

console.log( nativeClass( /./ ) );
// returns '[object RegExp]'

console.log( nativeClass( new Date() ) );
// returns '[object Date]'

if ( hasMapSupport ) {
	console.log( nativeClass( new Map() ) );
	// returns '[object Map]'
}
if ( hasWeakMapSupport ) {
	console.log( nativeClass( new WeakMap() ) );
	// returns '[object WeakMap]'
}
if ( hasSetSupport ) {
	console.log( nativeClass( new Set() ) );
	// returns '[object Set]'
}
if ( hasWeakSetSupport ) {
	console.log( nativeClass( new WeakSet() ) );
	// returns '[object WeakSet]'
}
if ( hasSymbolSupport ) {
	console.log( nativeClass( Symbol() ) );
	// returns '[object Symbol]'
}
console.log( nativeClass( new Error() ) );
// returns '[object Error]'

console.log( nativeClass( new TypeError() ) );
// returns '[object Error]'

console.log( nativeClass( new SyntaxError() ) );
// returns '[object Error]'

console.log( nativeClass( new URIError() ) );
// returns '[object Error]'

console.log( nativeClass( new RangeError() ) );
// returns '[object Error]'

console.log( nativeClass( new ReferenceError() ) );
// returns '[object Error]'

console.log( nativeClass( new EvalError() ) );
// returns '[object Error]'

console.log( nativeClass( new Int8Array() ) );
// returns '[object Int8Array]'

console.log( nativeClass( new Uint8Array() ) );
// returns '[object Uint8Array]'

console.log( nativeClass( new Uint8ClampedArray() ) );
// returns '[object Uint8ClampedArray]'

console.log( nativeClass( new Int16Array() ) );
// returns '[object Int16Array]'

console.log( nativeClass( new Uint16Array() ) );
// returns '[object Uint16Array]'

console.log( nativeClass( new Int32Array() ) );
// returns '[object Int32Array]'

console.log( nativeClass( new Uint32Array() ) );
// returns '[object Uint32Array]'

console.log( nativeClass( new Float32Array() ) );
// returns '[object Float32Array]'

console.log( nativeClass( new Float64Array() ) );
// returns '[object Float64Array]'

console.log( nativeClass( new ArrayBuffer() ) );
// returns '[object ArrayBuffer]'

console.log( nativeClass( Math ) );
// returns '[object Math]'

console.log( nativeClass( JSON ) );
// returns '[object JSON]'

function Person(){}
console.log( nativeClass( new Person() ) );
// returns '[object Object]'
