'use strict';

// MODULES //

var tape = require( 'tape' );
var proxyquire = require( 'proxyquire' );
var nativeClass = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof nativeClass, 'function', 'export is a function' );
	t.end();
});

tape( 'if an environment has `Symbol.toStringTag` support, the main export is a function which attempts to uncover the native `Symbol.toStringTag`', function test( t ) {
	var nativeClass = proxyquire( './../lib/index.js', {
		'@stdlib/utils/detect-tostringtag-support': hasSupport,
		'./polyfill.js': polyfill
	});
	t.strictEqual( nativeClass, polyfill, 'exports expected function' );
	t.end();

	function hasSupport() {
		return true;
	}

	function polyfill() {
		// Polyfill...
	}
});

tape( 'if an environment does not have `Symbol.toStringTag` support, the main export is a function which returns the value of the internal `[[Class]]` property', function test( t ) {
	var nativeClass = proxyquire( './../lib/index.js', {
		'@stdlib/utils/detect-tostringtag-support': hasSupport,
		'./native_class.js': foo
	});

	t.strictEqual( nativeClass, foo, 'exports expected function' );
	t.end();

	function hasSupport() {
		return false;
	}

	function foo() {
		// Native class...
	}
});
