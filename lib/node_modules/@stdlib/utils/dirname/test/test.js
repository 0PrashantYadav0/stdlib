'use strict';

// MODULES //

var tape = require( 'tape' );
var dirname = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.equal( typeof dirname, 'function', 'main export is a function' );
	t.end();
});

tape( 'the function throws an error if provided a path argument which is not a string', function test( t ) {
	var values;
	var i;

	values = [
		5,
		null,
		NaN,
		true,
		undefined,
		[],
		{},
		function(){}
	];

	for ( i = 0; i < values.length; i++ ) {
		t.throws( badValue( values[i] ), TypeError, 'throws error when provided '+values[i] );
	}
	t.end();
	function badValue( value ) {
		return function badValue() {
			dirname( value );
		};
	}
});

tape( 'the function returns a directory name', function test( t ) {
	var expected;
	var values;
	var i;

	values = [
		'/index.js',
		'foo/bar/home.html',
		'.gitignore',
		'./.travis.yml',
		'/foo/bar/README.md'
	];

	expected = [
		'/',
		'foo/bar',
		'',
		'.',
		'/foo/bar'
	];

	for ( i = 0; i < values.length; i++ ) {
		t.equal( dirname( values[ i ] ), expected[ i ], values[ i ] );
	}
	t.end();
});
