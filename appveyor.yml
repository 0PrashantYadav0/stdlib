
# Specify the build version format:
version: '{build}'

environment:
  global:
    NODE_PATH: '%APPVEYOR_BUILD_FOLDER%\lib\node_modules'

  matrix:
    # Unit tests:
    - nodejs_version: '7'
      BUILD_TASK: 'test'
    - nodejs_version: '6'
      BUILD_TASK: 'test'
    - nodejs_version: '5'
      BUILD_TASK: 'test'
    - nodejs_version: '4'
      BUILD_TASK: 'test'
    - nodejs_version: '0.12'
      BUILD_TASK: 'test'
    - nodejs_version: '0.10'
      BUILD_TASK: 'test'

    # Benchmarks:
    - nodejs_version: '7'
      BUILD_TASK: 'benchmark'
    - nodejs_version: '6'
      BUILD_TASK: 'benchmark'
    - nodejs_version: '5'
      BUILD_TASK: 'benchmark'
    - nodejs_version: '4'
      BUILD_TASK: 'benchmark'
    - nodejs_version: '0.12'
      BUILD_TASK: 'benchmark'
    - nodejs_version: '0.10'
      BUILD_TASK: 'benchmark'

    # Examples:
    - nodejs_version: '7'
      BUILD_TASK: 'examples'
    - nodejs_version: '6'
      BUILD_TASK: 'examples'
    - nodejs_version: '5'
      BUILD_TASK: 'examples'
    - nodejs_version: '4'
      BUILD_TASK: 'examples'
    - nodejs_version: '0.12'
      BUILD_TASK: 'examples'
    - nodejs_version: '0.10'
      BUILD_TASK: 'examples'

    # Test coverage:
    - nodejs_version: '7'
      BUILD_TASK: 'test-coverage'
    - nodejs_version: '6'
      BUILD_TASK: 'test-coverage'
    - nodejs_version: '5'
      BUILD_TASK: 'test-coverage'
    - nodejs_version: '4'
      BUILD_TASK: 'test-coverage'
    - nodejs_version: '0.12'
      BUILD_TASK: 'test-coverage'
    - nodejs_version: '0.10'
      BUILD_TASK: 'test-coverage'


matrix:
  # Flag to immediately finish a build if any one of the jobs fails:
  fast_finish: true


# Define build artifacts. To download build artifacts for any build, use the following URL template:
#
# https://ci.appveyor.com/api/projects/<account>/<project>/artifacts/<artifact_file_path>?all=<boolean>&job=<job>&branch=<branch>

artifacts:
  # Push entire `log` directory:
  - path: var\log
    name: logs
    type: zip


# Clone directory:
clone_folder: c:\projects\stdlib

# Set the clone depth:
clone_depth: 100


# Script commands are run either via [batch][1] (`cmd:`; default) or [PowerShell][2] (`ps:`) script engines.
#
# [1]: https://en.wikipedia.org/wiki/Batch_file
# [2]: https://en.wikipedia.org/wiki/Windows_PowerShell

# Scripts run before repo cloning...
init:
  # Instruct `git` to convert CRLF line endings (Windows) to LF on commit.
  #
  # [1]: https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#Formatting-and-Whitespace
  - cmd: git config --global core.autocrlf input


install:
  # Install updated browsers for browser testing:
  # TODO: address 32-bit vs 64-bit installs
  - cmd: choco upgrade firefox
  - cmd: choco upgrade googlechrome

  # Switch to the desired Node version:
  - ps: Install-Product node $env:nodejs_version

  # Update the npm client. Older clients cannot, e.g., handle scoped modules, and on Windows are subject to race conditions (see https://github.com/appveyor/ci/issues/102 and https://www.appveyor.com/docs/lang/nodejs-iojs/#locking-errors-eperm-eexist-tgzlock ).
  - cmd: npm install -g npm@2
  - cmd: npm update -g npm
  - cmd: npm --version
  - cmd: set PATH=%APPDATA%\npm;%PATH%

  # Install node module dependencies:
  - cmd: npm install


build_script:
  # If a newer build is queued for the same PR, cancel the current build:
  - ps: 'if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `throw "Canceling the current build as newer builds are queued for this pull request." }'


before_test:
  # In order to run `make` commands, we can use [MinGW][1], a minimalist GNU for Windows, by adding the application folder to the `PATH` variable. For a reference configuration, see [utf8proc][2] and [julia][3].
  #
  # [1]: http://www.mingw.org/
  # [2]: http://fossies.org/linux/utf8proc/appveyor.yml
  # [3]: https://github.com/JuliaLang/julia/blob/master/appveyor.yml
  - cmd: set PATH=C:\MinGW\bin;%PATH%


test_script:
  # Print debug info:
  - cmd: git --version
  - cmd: node --version
  - cmd: npm --version

  # Rely on [MSYS][1], a collection of GNU utilities including `make`, being installed in a `1.0` directory.
  #
  # [1]: http://www.mingw.org/wiki/MSYS
  - cmd: 'C:\MinGW\msys\1.0\bin\sh --login -c " /c/projects/stdlib/tools/ci/appveyor/script $BUILD_TASK"'


# Scripts run after a build success or failure:
on_finish:
  # Rely on [MSYS][1], a collection of GNU utilities including `make`, being installed in a `1.0` directory.
  #
  # [1]: http://www.mingw.org/wiki/MSYS
  - cmd: 'C:\MinGW\msys\1.0\bin\sh --login -c " /c/projects/stdlib/tools/ci/appveyor/on_finish"'


notifications:
  - provider: Slack
    incoming_webhook:
      secure: wn39IgZGtIMkvmXPpo+Slm6QlfpxbARQOw98Xuifd2JtNpLKHms5w1Jvm1QIK0D1Ipg7NLgxbQDt0pKQt4nEpWy6TM30rZUX4tUtYJg0Kmo=
