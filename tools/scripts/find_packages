#!/usr/bin/env bash
#
# Finds packages.


# VARIABLES #

# Determine the host kernel:
kernel=$(uname -s)

# Determine root directory:
root_dir="$(git rev-parse --show-toplevel)"

# Define the path to the build directory:
build_dir="${root_dir}/build"

# Define the path to the reports directory:
reports_dir="${root_dir}/reports"

# Define the directory for top-level tools:
tools_dir="${root_dir}/tools"

# Define the path to node modules:
node_modules="${root_dir}/node_modules"

# Define a package filename identifier:
packages_file='package.json'

# Define the pattern for filtering packages based on their file path:
packages_filter='.*/.*'


# FUNCTIONS #

# Finds packages.
main() {
	local pkgs

	# On Mac OSX, in order to use `|` and other regular expression operators, we need to use enhanced regular expression syntax (-E); see https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man7/re_format.7.html#//apple_ref/doc/man/7/re_format.
	if [[ "${kernel}" == "Darwin" ]]; then
		pkgs=$(find -E "${root_dir}" -not -path "${root_dir}/.*" -not -path "${node_modules}/*" -not -path "${build_dir}/*" -not -path "${reports_dir}/*" -not -path "${tools_dir}/*" -regex "${packages_filter}" -name "${packages_file}" -exec dirname {} \;)
	else
		pkgs=$(find "${root_dir}" -regextype posix-extended -not -path "${root_dir}/.*" -not -path "${node_modules}/*" -not -path "${build_dir}/*" -not -path "${reports_dir}/*" -not -path "${tools_dir}/*" -regex "${packages_filter}" -name "${packages_file}" -exec dirname {} \;)
	fi
	echo "${pkgs}"
}

# Run main:
main
