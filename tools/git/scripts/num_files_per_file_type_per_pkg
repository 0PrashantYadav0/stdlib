#!/usr/bin/env bash
#
# Prints the number of files in a package.
#
# <package_path> <percentage> <total> <file_type>
#
# Notes:
#
# * For files using alternative filename extensions, no attempt is made to infer the file type. Unrecognized filename extensions are categorized as "other".
# * `README.md` files are included in Markdown totals.

# Determine root directory:
root="$(git rev-parse --show-toplevel)"

# Define the path to a utility to list packages:
find_pkgs="${root}/tools/scripts/find_packages"

# Define the path to a utility to list files:
find_files="${root}/tools/scripts/find_files"

# Define the path to a utility to annotate a file statistic stream:
annotate_file_type="${root}/tools/git/scripts/annotate_file_type.awk"

# Get a list of packages:
pkgs="$(PACKAGES_FILTER=${PACKAGES_FILTER} ${find_pkgs})"

# For each package, determine the number of lines...
for pkg in ${pkgs}; do
	# * `find_files`
	#   - Find package files.
	# * `awk '{}'`
	#   - Prefix each file to match annotation interface.
	# * `annotate_file_type`
	#   - Prefix each result with a file type.
	# * `awk '{}'`
	#   - Compute statistics.
	# * `sort -k2nr`
	#   - Sort in reverse numeric order based on the computed percentage.
	FILES_PATTERN="${FILES_PATTERN}" FILES_FILTER="$pkg/.*" "${find_files}" | awk '{print 1 OFS $0}' | awk -f "${annotate_file_type}" | awk -v pkg="$pkg" '
$3 ~ /README\.md$/ {
	lines["README"] += 1
}
{
	lines[$1] += 1
	total += 1
}

END {
	print pkg OFS 1 OFS total OFS "total"
	for (k in lines) {
		n = lines[k]
		pct = int(n/total*10000)/10000
		print pkg OFS pct OFS n OFS k
	}
}
' | sort -k2nr
done
